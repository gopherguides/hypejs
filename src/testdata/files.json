{
  "nodes": [
    {
      "file": "module.md",
      "nodes": [
        {
          "atom": "html",
          "file": "module.md",
          "nodes": [
            {
              "atom": "head",
              "file": "module.md",
              "type": "*hype.Element"
            },
            [
              {
                "atom": "body",
                "file": "module.md",
                "nodes": [
                  [
                    {
                      "atom": "page",
                      "file": "module.md",
                      "nodes": [
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "h1",
                            "file": "module.md",
                            "level": 1,
                            "nodes": [
                              {
                                "text": "Working With Files",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "hype.Heading"
                          }
                        ],
                        {
                          "text": "\n\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "p",
                            "file": "module.md",
                            "nodes": [
                              {
                                "text": "Working with files is a very common task in computer programming. We work with log files, HTML files, and a whole host of other file types in our programs. In this ",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "binding",
                                "attributes": {
                                  "part": ""
                                },
                                "file": "module.md",
                                "type": "*hype.Element"
                              },
                              {
                                "text": " we will learn how to read and write files, walk directories, use the ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "fs",
                                    "href": "https://pkg.go.dev/fs",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "fs",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/fs"
                                }
                              ],
                              {
                                "text": " package, and finally, learn how we can embed files into our Go binaries creating a truly self-contained application.",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Paragraph"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "title": "Working With Files",
                      "type": "*hype.Page"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "dirs/dirs.md"
                      },
                      "dir": "dirs",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "dirs.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "dirs.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Directory Entries and File Information",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "Before we can begin using files for our programs, we need to, first, understand the basics of how files work in Go.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "Consider the following file tree. We will be using this file tree to aid in our understanding of files in Go. This tree contains ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": ".txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " files, as well as, special directories, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "testdata",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "_ignore",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": ".hidden",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". We will cover the importance of these files, and directories, as we progress.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-1",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "tree",
                                          "-a"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "tree -a",
                                          "src": "dirs/src/tree/data"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ tree -a\n\n.\n├── .hidden\n│   └── d.txt\n├── a.txt\n├── b.txt\n├── e\n│   ├── f\n│   │   ├── _ignore\n│   │   │   └── i.txt\n│   │   ├── g.txt\n│   │   └── h.txt\n│   └── j.txt\n└── testdata\n    └── c.txt\n\n6 directories, 8 files",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "tree",
                                                "-a"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/dirs/src/tree/data",
                                              "stdout": "LgrilJzilIDilIAgLmhpZGRlbgrilILCoMKgIOKUlOKUgOKUgCBkLnR4dArilJzilIDilIAgYS50eHQK4pSc4pSA4pSAIGIudHh0CuKUnOKUgOKUgCBlCuKUgsKgwqAg4pSc4pSA4pSAIGYK4pSCwqDCoCDilILCoMKgIOKUnOKUgOKUgCBfaWdub3JlCuKUgsKgwqAg4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBpLnR4dArilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGcudHh0CuKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgaC50eHQK4pSCwqDCoCDilJTilIDilIAgai50eHQK4pSU4pSA4pSAIHRlc3RkYXRhCiAgICDilJTilIDilIAgYy50eHQKCjYgZGlyZWN0b3JpZXMsIDggZmlsZXM=",
                                              "duration": 583889042,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ tree -a\n\n.\n├── .hidden\n│   └── d.txt\n├── a.txt\n├── b.txt\n├── e\n│   ├── f\n│   │   ├── _ignore\n│   │   │   └── i.txt\n│   │   ├── g.txt\n│   │   └── h.txt\n│   └── j.txt\n└── testdata\n    └── c.txt\n\n6 directories, 8 files",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "tree",
                                              "-a"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/dirs/src/tree/data",
                                            "stdout": "LgrilJzilIDilIAgLmhpZGRlbgrilILCoMKgIOKUlOKUgOKUgCBkLnR4dArilJzilIDilIAgYS50eHQK4pSc4pSA4pSAIGIudHh0CuKUnOKUgOKUgCBlCuKUgsKgwqAg4pSc4pSA4pSAIGYK4pSCwqDCoCDilILCoMKgIOKUnOKUgOKUgCBfaWdub3JlCuKUgsKgwqAg4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBpLnR4dArilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGcudHh0CuKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgaC50eHQK4pSCwqDCoCDilJTilIDilIAgai50eHQK4pSU4pSA4pSAIHRlc3RkYXRhCiAgICDilJTilIDilIAgYy50eHQKCjYgZGlyZWN0b3JpZXMsIDggZmlsZXM=",
                                            "duration": 583889042,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.1:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "File tree containing special folders; ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "dirs",
                                              "nodes": [
                                                {
                                                  "text": ".hidden",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ", ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "dirs",
                                              "nodes": [
                                                {
                                                  "text": "_ignore",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ", and ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "dirs",
                                              "nodes": [
                                                {
                                                  "text": "testdata",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 1,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "dirs.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Reading a Directory",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "In order to know which files we can work with, we need to know which files are in a directory. To do this we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadDir",
                                          "href": "https://pkg.go.dev/os#ReadDir",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadDir"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-2"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-2"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.2",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-2"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-2",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.ReadDir"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.ReadDir",
                                          "exec": "go doc os.ReadDir"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.ReadDir\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc ReadDir(name string) ([]DirEntry, error)\n    ReadDir reads the named directory, returning all its directory entries\n    sorted by filename. If an error occurs reading the directory, ReadDir\n    returns the entries it was able to read before the error, along with the\n    error.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.ReadDir"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBSZWFkRGlyKG5hbWUgc3RyaW5nKSAoW11EaXJFbnRyeSwgZXJyb3IpCiAgICBSZWFkRGlyIHJlYWRzIHRoZSBuYW1lZCBkaXJlY3RvcnksIHJldHVybmluZyBhbGwgaXRzIGRpcmVjdG9yeSBlbnRyaWVzCiAgICBzb3J0ZWQgYnkgZmlsZW5hbWUuIElmIGFuIGVycm9yIG9jY3VycyByZWFkaW5nIHRoZSBkaXJlY3RvcnksIFJlYWREaXIKICAgIHJldHVybnMgdGhlIGVudHJpZXMgaXQgd2FzIGFibGUgdG8gcmVhZCBiZWZvcmUgdGhlIGVycm9yLCBhbG9uZyB3aXRoIHRoZQogICAgZXJyb3Iu",
                                              "duration": 979215916,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.ReadDir\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc ReadDir(name string) ([]DirEntry, error)\n    ReadDir reads the named directory, returning all its directory entries\n    sorted by filename. If an error occurs reading the directory, ReadDir\n    returns the entries it was able to read before the error, along with the\n    error.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.ReadDir"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBSZWFkRGlyKG5hbWUgc3RyaW5nKSAoW11EaXJFbnRyeSwgZXJyb3IpCiAgICBSZWFkRGlyIHJlYWRzIHRoZSBuYW1lZCBkaXJlY3RvcnksIHJldHVybmluZyBhbGwgaXRzIGRpcmVjdG9yeSBlbnRyaWVzCiAgICBzb3J0ZWQgYnkgZmlsZW5hbWUuIElmIGFuIGVycm9yIG9jY3VycyByZWFkaW5nIHRoZSBkaXJlY3RvcnksIFJlYWREaXIKICAgIHJldHVybnMgdGhlIGVudHJpZXMgaXQgd2FzIGFibGUgdG8gcmVhZCBiZWZvcmUgdGhlIGVycm9yLCBhbG9uZyB3aXRoIHRoZQogICAgZXJyb3Iu",
                                            "duration": 979215916,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.2:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#ReadDir",
                                                "href": "https://pkg.go.dev/os#ReadDir",
                                                "target": "_blank"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "dirs",
                                                    "nodes": [
                                                      {
                                                        "text": "os.ReadDir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#ReadDir"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 2,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadDir",
                                          "href": "https://pkg.go.dev/os#ReadDir",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadDir"
                                      }
                                    ],
                                    {
                                      "text": " function takes a path as a parameter, and returns a slice of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#DirEntry",
                                          "href": "https://pkg.go.dev/os#DirEntry",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.DirEntry",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#DirEntry"
                                      }
                                    ],
                                    {
                                      "text": " values, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-3"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-3"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.3",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-3"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". Each ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#DirEntry",
                                          "href": "https://pkg.go.dev/os#DirEntry",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.DirEntry",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#DirEntry"
                                      }
                                    ],
                                    {
                                      "text": " value represents a file or directory in the directory, and contains information about the file or directory.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-3",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.DirEntry"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.DirEntry",
                                          "exec": "go doc os.DirEntry"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.DirEntry\n\npackage os // import \u0026#34;os\u0026#34;\n\ntype DirEntry = fs.DirEntry\n    A DirEntry is an entry read from a directory (using the ReadDir function or\n    a File\u0026#39;s ReadDir method).\n\nfunc ReadDir(name string) ([]DirEntry, error)",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.DirEntry"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKdHlwZSBEaXJFbnRyeSA9IGZzLkRpckVudHJ5CiAgICBBIERpckVudHJ5IGlzIGFuIGVudHJ5IHJlYWQgZnJvbSBhIGRpcmVjdG9yeSAodXNpbmcgdGhlIFJlYWREaXIgZnVuY3Rpb24gb3IKICAgIGEgRmlsZSdzIFJlYWREaXIgbWV0aG9kKS4KCmZ1bmMgUmVhZERpcihuYW1lIHN0cmluZykgKFtdRGlyRW50cnksIGVycm9yKQ==",
                                              "duration": 80765375,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.DirEntry\n\npackage os // import \u0026#34;os\u0026#34;\n\ntype DirEntry = fs.DirEntry\n    A DirEntry is an entry read from a directory (using the ReadDir function or\n    a File\u0026#39;s ReadDir method).\n\nfunc ReadDir(name string) ([]DirEntry, error)",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.DirEntry"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKdHlwZSBEaXJFbnRyeSA9IGZzLkRpckVudHJ5CiAgICBBIERpckVudHJ5IGlzIGFuIGVudHJ5IHJlYWQgZnJvbSBhIGRpcmVjdG9yeSAodXNpbmcgdGhlIFJlYWREaXIgZnVuY3Rpb24gb3IKICAgIGEgRmlsZSdzIFJlYWREaXIgbWV0aG9kKS4KCmZ1bmMgUmVhZERpcihuYW1lIHN0cmluZykgKFtdRGlyRW50cnksIGVycm9yKQ==",
                                            "duration": 80765375,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.3:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#DirEntry",
                                                "href": "https://pkg.go.dev/os#DirEntry",
                                                "target": "_blank"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "dirs",
                                                    "nodes": [
                                                      {
                                                        "text": "os.DirEntry",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#DirEntry"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 3,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "href": "https://go.dev/doc/go1.16",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          [
                                            {
                                              "atom": "code",
                                              "file": "dirs.md",
                                              "nodes": [
                                                {
                                                  "text": "go1.16",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ]
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://go.dev/doc/go1.16"
                                      }
                                    ],
                                    {
                                      "text": " the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fs",
                                          "href": "https://pkg.go.dev/fs",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "fs",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fs"
                                      }
                                    ],
                                    {
                                      "text": " package was added, which provides interface around the file system. The result of this was that many types were aliased to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fs",
                                          "href": "https://pkg.go.dev/fs",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "fs",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fs"
                                      }
                                    ],
                                    {
                                      "text": " package. This means that you may need to hunt a little further to find the deeper documentation.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "For example, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#DirEntry",
                                          "href": "https://pkg.go.dev/os#DirEntry",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.DirEntry",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#DirEntry"
                                      }
                                    ],
                                    {
                                      "text": " was aliased to ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#DirEntry",
                                          "href": "https://pkg.go.dev/io/fs#DirEntry",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.DirEntry",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#DirEntry"
                                      }
                                    ],
                                    {
                                      "text": " in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "go1.16",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-4"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-4"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.4",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-4"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-4",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fs.DirEntry"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fs.DirEntry",
                                          "exec": "go doc fs.DirEntry"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fs.DirEntry\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype DirEntry interface {\n\t// Name returns the name of the file (or subdirectory) described by the entry.\n\t// This name is only the final element of the path (the base name), not the entire path.\n\t// For example, Name would return \u0026#34;hello.go\u0026#34; not \u0026#34;home/gopher/hello.go\u0026#34;.\n\tName() string\n\n\t// IsDir reports whether the entry describes a directory.\n\tIsDir() bool\n\n\t// Type returns the type bits for the entry.\n\t// The type bits are a subset of the usual FileMode bits, those returned by the FileMode.Type method.\n\tType() FileMode\n\n\t// Info returns the FileInfo for the file or subdirectory described by the entry.\n\t// The returned FileInfo may be from the time of the original directory read\n\t// or from the time of the call to Info. If the file has been removed or renamed\n\t// since the directory read, Info may return an error satisfying errors.Is(err, ErrNotExist).\n\t// If the entry denotes a symbolic link, Info reports the information about the link itself,\n\t// not the link\u0026#39;s target.\n\tInfo() (FileInfo, error)\n}\n    A DirEntry is an entry read from a directory (using the ReadDir function or\n    a ReadDirFile\u0026#39;s ReadDir method).\n\nfunc FileInfoToDirEntry(info FileInfo) DirEntry\nfunc ReadDir(fsys FS, name string) ([]DirEntry, error)",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fs.DirEntry"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBEaXJFbnRyeSBpbnRlcmZhY2UgewoJLy8gTmFtZSByZXR1cm5zIHRoZSBuYW1lIG9mIHRoZSBmaWxlIChvciBzdWJkaXJlY3RvcnkpIGRlc2NyaWJlZCBieSB0aGUgZW50cnkuCgkvLyBUaGlzIG5hbWUgaXMgb25seSB0aGUgZmluYWwgZWxlbWVudCBvZiB0aGUgcGF0aCAodGhlIGJhc2UgbmFtZSksIG5vdCB0aGUgZW50aXJlIHBhdGguCgkvLyBGb3IgZXhhbXBsZSwgTmFtZSB3b3VsZCByZXR1cm4gImhlbGxvLmdvIiBub3QgImhvbWUvZ29waGVyL2hlbGxvLmdvIi4KCU5hbWUoKSBzdHJpbmcKCgkvLyBJc0RpciByZXBvcnRzIHdoZXRoZXIgdGhlIGVudHJ5IGRlc2NyaWJlcyBhIGRpcmVjdG9yeS4KCUlzRGlyKCkgYm9vbAoKCS8vIFR5cGUgcmV0dXJucyB0aGUgdHlwZSBiaXRzIGZvciB0aGUgZW50cnkuCgkvLyBUaGUgdHlwZSBiaXRzIGFyZSBhIHN1YnNldCBvZiB0aGUgdXN1YWwgRmlsZU1vZGUgYml0cywgdGhvc2UgcmV0dXJuZWQgYnkgdGhlIEZpbGVNb2RlLlR5cGUgbWV0aG9kLgoJVHlwZSgpIEZpbGVNb2RlCgoJLy8gSW5mbyByZXR1cm5zIHRoZSBGaWxlSW5mbyBmb3IgdGhlIGZpbGUgb3Igc3ViZGlyZWN0b3J5IGRlc2NyaWJlZCBieSB0aGUgZW50cnkuCgkvLyBUaGUgcmV0dXJuZWQgRmlsZUluZm8gbWF5IGJlIGZyb20gdGhlIHRpbWUgb2YgdGhlIG9yaWdpbmFsIGRpcmVjdG9yeSByZWFkCgkvLyBvciBmcm9tIHRoZSB0aW1lIG9mIHRoZSBjYWxsIHRvIEluZm8uIElmIHRoZSBmaWxlIGhhcyBiZWVuIHJlbW92ZWQgb3IgcmVuYW1lZAoJLy8gc2luY2UgdGhlIGRpcmVjdG9yeSByZWFkLCBJbmZvIG1heSByZXR1cm4gYW4gZXJyb3Igc2F0aXNmeWluZyBlcnJvcnMuSXMoZXJyLCBFcnJOb3RFeGlzdCkuCgkvLyBJZiB0aGUgZW50cnkgZGVub3RlcyBhIHN5bWJvbGljIGxpbmssIEluZm8gcmVwb3J0cyB0aGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGxpbmsgaXRzZWxmLAoJLy8gbm90IHRoZSBsaW5rJ3MgdGFyZ2V0LgoJSW5mbygpIChGaWxlSW5mbywgZXJyb3IpCn0KICAgIEEgRGlyRW50cnkgaXMgYW4gZW50cnkgcmVhZCBmcm9tIGEgZGlyZWN0b3J5ICh1c2luZyB0aGUgUmVhZERpciBmdW5jdGlvbiBvcgogICAgYSBSZWFkRGlyRmlsZSdzIFJlYWREaXIgbWV0aG9kKS4KCmZ1bmMgRmlsZUluZm9Ub0RpckVudHJ5KGluZm8gRmlsZUluZm8pIERpckVudHJ5CmZ1bmMgUmVhZERpcihmc3lzIEZTLCBuYW1lIHN0cmluZykgKFtdRGlyRW50cnksIGVycm9yKQ==",
                                              "duration": 630553167,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fs.DirEntry\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype DirEntry interface {\n\t// Name returns the name of the file (or subdirectory) described by the entry.\n\t// This name is only the final element of the path (the base name), not the entire path.\n\t// For example, Name would return \u0026#34;hello.go\u0026#34; not \u0026#34;home/gopher/hello.go\u0026#34;.\n\tName() string\n\n\t// IsDir reports whether the entry describes a directory.\n\tIsDir() bool\n\n\t// Type returns the type bits for the entry.\n\t// The type bits are a subset of the usual FileMode bits, those returned by the FileMode.Type method.\n\tType() FileMode\n\n\t// Info returns the FileInfo for the file or subdirectory described by the entry.\n\t// The returned FileInfo may be from the time of the original directory read\n\t// or from the time of the call to Info. If the file has been removed or renamed\n\t// since the directory read, Info may return an error satisfying errors.Is(err, ErrNotExist).\n\t// If the entry denotes a symbolic link, Info reports the information about the link itself,\n\t// not the link\u0026#39;s target.\n\tInfo() (FileInfo, error)\n}\n    A DirEntry is an entry read from a directory (using the ReadDir function or\n    a ReadDirFile\u0026#39;s ReadDir method).\n\nfunc FileInfoToDirEntry(info FileInfo) DirEntry\nfunc ReadDir(fsys FS, name string) ([]DirEntry, error)",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fs.DirEntry"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBEaXJFbnRyeSBpbnRlcmZhY2UgewoJLy8gTmFtZSByZXR1cm5zIHRoZSBuYW1lIG9mIHRoZSBmaWxlIChvciBzdWJkaXJlY3RvcnkpIGRlc2NyaWJlZCBieSB0aGUgZW50cnkuCgkvLyBUaGlzIG5hbWUgaXMgb25seSB0aGUgZmluYWwgZWxlbWVudCBvZiB0aGUgcGF0aCAodGhlIGJhc2UgbmFtZSksIG5vdCB0aGUgZW50aXJlIHBhdGguCgkvLyBGb3IgZXhhbXBsZSwgTmFtZSB3b3VsZCByZXR1cm4gImhlbGxvLmdvIiBub3QgImhvbWUvZ29waGVyL2hlbGxvLmdvIi4KCU5hbWUoKSBzdHJpbmcKCgkvLyBJc0RpciByZXBvcnRzIHdoZXRoZXIgdGhlIGVudHJ5IGRlc2NyaWJlcyBhIGRpcmVjdG9yeS4KCUlzRGlyKCkgYm9vbAoKCS8vIFR5cGUgcmV0dXJucyB0aGUgdHlwZSBiaXRzIGZvciB0aGUgZW50cnkuCgkvLyBUaGUgdHlwZSBiaXRzIGFyZSBhIHN1YnNldCBvZiB0aGUgdXN1YWwgRmlsZU1vZGUgYml0cywgdGhvc2UgcmV0dXJuZWQgYnkgdGhlIEZpbGVNb2RlLlR5cGUgbWV0aG9kLgoJVHlwZSgpIEZpbGVNb2RlCgoJLy8gSW5mbyByZXR1cm5zIHRoZSBGaWxlSW5mbyBmb3IgdGhlIGZpbGUgb3Igc3ViZGlyZWN0b3J5IGRlc2NyaWJlZCBieSB0aGUgZW50cnkuCgkvLyBUaGUgcmV0dXJuZWQgRmlsZUluZm8gbWF5IGJlIGZyb20gdGhlIHRpbWUgb2YgdGhlIG9yaWdpbmFsIGRpcmVjdG9yeSByZWFkCgkvLyBvciBmcm9tIHRoZSB0aW1lIG9mIHRoZSBjYWxsIHRvIEluZm8uIElmIHRoZSBmaWxlIGhhcyBiZWVuIHJlbW92ZWQgb3IgcmVuYW1lZAoJLy8gc2luY2UgdGhlIGRpcmVjdG9yeSByZWFkLCBJbmZvIG1heSByZXR1cm4gYW4gZXJyb3Igc2F0aXNmeWluZyBlcnJvcnMuSXMoZXJyLCBFcnJOb3RFeGlzdCkuCgkvLyBJZiB0aGUgZW50cnkgZGVub3RlcyBhIHN5bWJvbGljIGxpbmssIEluZm8gcmVwb3J0cyB0aGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGxpbmsgaXRzZWxmLAoJLy8gbm90IHRoZSBsaW5rJ3MgdGFyZ2V0LgoJSW5mbygpIChGaWxlSW5mbywgZXJyb3IpCn0KICAgIEEgRGlyRW50cnkgaXMgYW4gZW50cnkgcmVhZCBmcm9tIGEgZGlyZWN0b3J5ICh1c2luZyB0aGUgUmVhZERpciBmdW5jdGlvbiBvcgogICAgYSBSZWFkRGlyRmlsZSdzIFJlYWREaXIgbWV0aG9kKS4KCmZ1bmMgRmlsZUluZm9Ub0RpckVudHJ5KGluZm8gRmlsZUluZm8pIERpckVudHJ5CmZ1bmMgUmVhZERpcihmc3lzIEZTLCBuYW1lIHN0cmluZykgKFtdRGlyRW50cnksIGVycm9yKQ==",
                                            "duration": 630553167,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.4:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#DirEntry",
                                                "href": "https://pkg.go.dev/io/fs#DirEntry",
                                                "target": "_blank"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "dirs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.DirEntry",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#DirEntry"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 4,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "We can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadDir",
                                          "href": "https://pkg.go.dev/os#ReadDir",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadDir"
                                      }
                                    ],
                                    {
                                      "text": " function to read the contents of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory. We then print the names to the console. If the file is a directory, we prepend it with a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "-\u003e",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-5",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "dirs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "dirs/src/tree/main.go#main"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tfiles, err := os.ReadDir(\"data\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfor _, file := range files {\n\t\tif file.IsDir() {\n\t\t\tfmt.Println(\"-\u003e\", file.Name())\n\t\t\tcontinue\n\t\t}\n\t\tfmt.Println(file.Name())\n\t}\n}",
                                                "file": "dirs/src/tree/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 9,
                                                "end": 25,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.5:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#ReadDir",
                                                "href": "https://pkg.go.dev/os#ReadDir",
                                                "target": "_blank"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "dirs",
                                                    "nodes": [
                                                      {
                                                        "text": "os.ReadDir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#ReadDir"
                                            }
                                          ],
                                          {
                                            "text": " to read the contents of a directory.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 5,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from the output of the program, only the files in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory are listed. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadDir",
                                          "href": "https://pkg.go.dev/os#ReadDir",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadDir"
                                      }
                                    ],
                                    {
                                      "text": " function will only read the contents of the directory, and not the contents of any subdirectories. To get a full list of files, including the contents of subdirectories, we will need to walk the directories ourselves. We will discuss this more later.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-6",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "dirs/src/tree"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n-\u0026gt; .hidden\na.txt\nb.txt\n-\u0026gt; e\n-\u0026gt; testdata",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/dirs/src/tree",
                                              "stdout": "LT4gLmhpZGRlbgphLnR4dApiLnR4dAotPiBlCi0+IHRlc3RkYXRh",
                                              "duration": 1748284792,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n-\u0026gt; .hidden\na.txt\nb.txt\n-\u0026gt; e\n-\u0026gt; testdata",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/dirs/src/tree",
                                            "stdout": "LT4gLmhpZGRlbgphLnR4dApiLnR4dAotPiBlCi0+IHRlc3RkYXRh",
                                            "duration": 1748284792,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.6:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Output of ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-5"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-5"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.5",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-5"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 6,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "dirs.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "The FileInfo Interface",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "The main source for metadata about files is the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FileInfo",
                                          "href": "https://pkg.go.dev/io/fs#FileInfo",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FileInfo",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FileInfo"
                                      }
                                    ],
                                    {
                                      "text": " interface, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-7"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-7"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.7",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-7"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "go1.16",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#FileInfo",
                                          "href": "https://pkg.go.dev/os#FileInfo",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.FileInfo",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#FileInfo"
                                      }
                                    ],
                                    {
                                      "text": " type was aliased to ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FileInfo",
                                          "href": "https://pkg.go.dev/io/fs#FileInfo",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FileInfo",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FileInfo"
                                      }
                                    ],
                                    {
                                      "text": ". From this interface we can get the name of the file, the size of the file, the time the file was last modified, and the mode, or permissions, of the file. We can also tell if the file is a directory, or a regular file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-7",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fs.FileInfo"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fs.FileInfo",
                                          "exec": "go doc fs.FileInfo"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fs.FileInfo\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype FileInfo interface {\n\tName() string       // base name of the file\n\tSize() int64        // length in bytes for regular files; system-dependent for others\n\tMode() FileMode     // file mode bits\n\tModTime() time.Time // modification time\n\tIsDir() bool        // abbreviation for Mode().IsDir()\n\tSys() any           // underlying data source (can return nil)\n}\n    A FileInfo describes a file and is returned by Stat.\n\nfunc Stat(fsys FS, name string) (FileInfo, error)",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fs.FileInfo"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBGaWxlSW5mbyBpbnRlcmZhY2UgewoJTmFtZSgpIHN0cmluZyAgICAgICAvLyBiYXNlIG5hbWUgb2YgdGhlIGZpbGUKCVNpemUoKSBpbnQ2NCAgICAgICAgLy8gbGVuZ3RoIGluIGJ5dGVzIGZvciByZWd1bGFyIGZpbGVzOyBzeXN0ZW0tZGVwZW5kZW50IGZvciBvdGhlcnMKCU1vZGUoKSBGaWxlTW9kZSAgICAgLy8gZmlsZSBtb2RlIGJpdHMKCU1vZFRpbWUoKSB0aW1lLlRpbWUgLy8gbW9kaWZpY2F0aW9uIHRpbWUKCUlzRGlyKCkgYm9vbCAgICAgICAgLy8gYWJicmV2aWF0aW9uIGZvciBNb2RlKCkuSXNEaXIoKQoJU3lzKCkgYW55ICAgICAgICAgICAvLyB1bmRlcmx5aW5nIGRhdGEgc291cmNlIChjYW4gcmV0dXJuIG5pbCkKfQogICAgQSBGaWxlSW5mbyBkZXNjcmliZXMgYSBmaWxlIGFuZCBpcyByZXR1cm5lZCBieSBTdGF0LgoKZnVuYyBTdGF0KGZzeXMgRlMsIG5hbWUgc3RyaW5nKSAoRmlsZUluZm8sIGVycm9yKQ==",
                                              "duration": 910388042,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fs.FileInfo\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype FileInfo interface {\n\tName() string       // base name of the file\n\tSize() int64        // length in bytes for regular files; system-dependent for others\n\tMode() FileMode     // file mode bits\n\tModTime() time.Time // modification time\n\tIsDir() bool        // abbreviation for Mode().IsDir()\n\tSys() any           // underlying data source (can return nil)\n}\n    A FileInfo describes a file and is returned by Stat.\n\nfunc Stat(fsys FS, name string) (FileInfo, error)",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fs.FileInfo"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBGaWxlSW5mbyBpbnRlcmZhY2UgewoJTmFtZSgpIHN0cmluZyAgICAgICAvLyBiYXNlIG5hbWUgb2YgdGhlIGZpbGUKCVNpemUoKSBpbnQ2NCAgICAgICAgLy8gbGVuZ3RoIGluIGJ5dGVzIGZvciByZWd1bGFyIGZpbGVzOyBzeXN0ZW0tZGVwZW5kZW50IGZvciBvdGhlcnMKCU1vZGUoKSBGaWxlTW9kZSAgICAgLy8gZmlsZSBtb2RlIGJpdHMKCU1vZFRpbWUoKSB0aW1lLlRpbWUgLy8gbW9kaWZpY2F0aW9uIHRpbWUKCUlzRGlyKCkgYm9vbCAgICAgICAgLy8gYWJicmV2aWF0aW9uIGZvciBNb2RlKCkuSXNEaXIoKQoJU3lzKCkgYW55ICAgICAgICAgICAvLyB1bmRlcmx5aW5nIGRhdGEgc291cmNlIChjYW4gcmV0dXJuIG5pbCkKfQogICAgQSBGaWxlSW5mbyBkZXNjcmliZXMgYSBmaWxlIGFuZCBpcyByZXR1cm5lZCBieSBTdGF0LgoKZnVuYyBTdGF0KGZzeXMgRlMsIG5hbWUgc3RyaW5nKSAoRmlsZUluZm8sIGVycm9yKQ==",
                                            "duration": 910388042,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.7:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#FileInfo",
                                                "href": "https://pkg.go.dev/io/fs#FileInfo",
                                                "target": "_blank"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "dirs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.FileInfo",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#FileInfo"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 7,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "Consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-8"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-8"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.8",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-8"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". We read the contents of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory, and print the mode, size, and name of each file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-8",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "dirs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "dirs/src/info/main.go#main"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tfiles, err := os.ReadDir(\"data\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Println(\"Mode\\t\\tSize\\tName\")\n\tfor _, file := range files {\n\t\tinfo, err := file.Info()\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\n\t\tfmt.Printf(\"%s\\t%d\\t\\t%s\\n\", info.Mode(), info.Size(), info.Name())\n\t}\n}",
                                                "file": "dirs/src/info/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 9,
                                                "end": 27,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "dirs",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "dirs/src/info"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\nMode\t\tSize\tName\ndrwxr-xr-x\t96\t\t.hidden\n-rw-r--r--\t31\t\ta.txt\n-rw-r--r--\t9\t\tb.txt\ndrwxr-xr-x\t128\t\te\ndrwxr-xr-x\t96\t\ttestdata",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/dirs/src/info",
                                              "stdout": "TW9kZQkJU2l6ZQlOYW1lCmRyd3hyLXhyLXgJOTYJCS5oaWRkZW4KLXJ3LXItLXItLQkzMQkJYS50eHQKLXJ3LXItLXItLQk5CQliLnR4dApkcnd4ci14ci14CTEyOAkJZQpkcnd4ci14ci14CTk2CQl0ZXN0ZGF0YQ==",
                                              "duration": 553456792,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\nMode\t\tSize\tName\ndrwxr-xr-x\t96\t\t.hidden\n-rw-r--r--\t31\t\ta.txt\n-rw-r--r--\t9\t\tb.txt\ndrwxr-xr-x\t128\t\te\ndrwxr-xr-x\t96\t\ttestdata",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/dirs/src/info",
                                            "stdout": "TW9kZQkJU2l6ZQlOYW1lCmRyd3hyLXhyLXgJOTYJCS5oaWRkZW4KLXJ3LXItLXItLQkzMQkJYS50eHQKLXJ3LXItLXItLQk5CQliLnR4dApkcnd4ci14ci14CTEyOAkJZQpkcnd4ci14ci14CTk2CQl0ZXN0ZGF0YQ==",
                                            "duration": 553456792,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.8:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#FileInfo",
                                                "href": "https://pkg.go.dev/io/fs#FileInfo",
                                                "target": "_blank"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "dirs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.FileInfo",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#FileInfo"
                                            }
                                          ],
                                          {
                                            "text": " to print information about files.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 8,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "dirs.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Stating a File",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadDir",
                                          "href": "https://pkg.go.dev/os#ReadDir",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadDir"
                                      }
                                    ],
                                    {
                                      "text": " function returns a slice of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#DirEntry",
                                          "href": "https://pkg.go.dev/os#DirEntry",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.DirEntry",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#DirEntry"
                                      }
                                    ],
                                    {
                                      "text": " values, from which we can get the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FileInfo",
                                          "href": "https://pkg.go.dev/io/fs#FileInfo",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FileInfo",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FileInfo"
                                      }
                                    ],
                                    {
                                      "text": " from, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#DirEntry.Info",
                                          "href": "https://pkg.go.dev/os#DirEntry.Info",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.DirEntry.Info",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#DirEntry.Info"
                                      }
                                    ],
                                    {
                                      "text": ". To get the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FileInfo",
                                          "href": "https://pkg.go.dev/io/fs#FileInfo",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FileInfo",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FileInfo"
                                      }
                                    ],
                                    {
                                      "text": " for a single file or directory we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Stat",
                                          "href": "https://pkg.go.dev/os#Stat",
                                          "target": "_blank"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "dirs.md",
                                            "nodes": [
                                              {
                                                "text": "os.Stat",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Stat"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-9"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-9"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.9",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-9"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-9",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.Stat"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.Stat",
                                          "exec": "go doc os.Stat"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.Stat\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc Stat(name string) (FileInfo, error)\n    Stat returns a FileInfo describing the named file. If there is an error,\n    it will be of type *PathError.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.Stat"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBTdGF0KG5hbWUgc3RyaW5nKSAoRmlsZUluZm8sIGVycm9yKQogICAgU3RhdCByZXR1cm5zIGEgRmlsZUluZm8gZGVzY3JpYmluZyB0aGUgbmFtZWQgZmlsZS4gSWYgdGhlcmUgaXMgYW4gZXJyb3IsCiAgICBpdCB3aWxsIGJlIG9mIHR5cGUgKlBhdGhFcnJvci4=",
                                              "duration": 585994750,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.Stat\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc Stat(name string) (FileInfo, error)\n    Stat returns a FileInfo describing the named file. If there is an error,\n    it will be of type *PathError.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.Stat"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBTdGF0KG5hbWUgc3RyaW5nKSAoRmlsZUluZm8sIGVycm9yKQogICAgU3RhdCByZXR1cm5zIGEgRmlsZUluZm8gZGVzY3JpYmluZyB0aGUgbmFtZWQgZmlsZS4gSWYgdGhlcmUgaXMgYW4gZXJyb3IsCiAgICBpdCB3aWxsIGJlIG9mIHR5cGUgKlBhdGhFcnJvci4=",
                                            "duration": 585994750,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.9:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Stat",
                                                "href": "https://pkg.go.dev/os#Stat",
                                                "target": "_blank"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "dirs",
                                                    "nodes": [
                                                      {
                                                        "text": "os.Stat",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Stat"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 9,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "Consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-10"
                                        },
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-10"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.10",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-10"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", which prints the mode, size, and name of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "dirs.md",
                                        "nodes": [
                                          {
                                            "text": "data/a.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-10",
                                    "type": "listing"
                                  },
                                  "file": "dirs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "dirs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "dirs/src/stat/main.go#main"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tinfo, err := os.Stat(\"data/a.txt\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Printf(\"%s\\t%d\\t%s\\n\", info.Mode(), info.Size(), info.Name())\n}",
                                                "file": "dirs/src/stat/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 9,
                                                "end": 19,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "dirs",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "dirs/src/stat"
                                        },
                                        "expected_exit": 0,
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n-rw-r--r--\t31\ta.txt",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/dirs/src/stat",
                                              "stdout": "LXJ3LXItLXItLQkzMQlhLnR4dA==",
                                              "duration": 1823247666,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n-rw-r--r--\t31\ta.txt",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/dirs/src/stat",
                                            "stdout": "LXJ3LXItLXItLQkzMQlhLnR4dA==",
                                            "duration": 1823247666,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "dirs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.10:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Stat",
                                                "href": "https://pkg.go.dev/os#Stat",
                                                "target": "_blank"
                                              },
                                              "file": "dirs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "dirs",
                                                    "nodes": [
                                                      {
                                                        "text": "os.Stat",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Stat"
                                            }
                                          ],
                                          {
                                            "text": " to get information about a file.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 10,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Directory Entries and File Information",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "walk/walk.md"
                      },
                      "dir": "walk",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "walk.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "walk.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Walking Directories",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "As we have seen, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadDir",
                                          "href": "https://pkg.go.dev/os#ReadDir",
                                          "target": "_blank"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadDir"
                                      }
                                    ],
                                    {
                                      "text": " does not recurse into subdirectories. To be able to do that, we need to use ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#WalkDir",
                                          "href": "https://pkg.go.dev/filepath#WalkDir",
                                          "target": "_blank"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.WalkDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#WalkDir"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-11"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-11"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.11",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-11"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". This will walk through all files in a directory and all subdirectories.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "blockquote",
                                "file": "walk.md",
                                "nodes": [
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  },
                                  [
                                    {
                                      "atom": "p",
                                      "file": "walk.md",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "for": "filepath#WalkDir",
                                              "href": "https://pkg.go.dev/filepath#WalkDir",
                                              "target": "_blank"
                                            },
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "atom": "code",
                                                "file": "walk.md",
                                                "nodes": [
                                                  {
                                                    "text": "filepath.WalkDir",
                                                    "type": "hype.Text"
                                                  }
                                                ],
                                                "type": "*hype.InlineCode"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://pkg.go.dev/filepath#WalkDir"
                                          }
                                        ],
                                        {
                                          "text": ", introduced in ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "code",
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "text": "go1.16",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        {
                                          "text": ", replaces the less efficient ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "for": "filepath#Walk",
                                              "href": "https://pkg.go.dev/filepath#Walk",
                                              "target": "_blank"
                                            },
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "atom": "code",
                                                "file": "walk.md",
                                                "nodes": [
                                                  {
                                                    "text": "filepath.Walk",
                                                    "type": "hype.Text"
                                                  }
                                                ],
                                                "type": "*hype.InlineCode"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://pkg.go.dev/filepath#Walk"
                                          }
                                        ],
                                        {
                                          "text": ". Older examples may use ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "for": "filepath#Walk",
                                              "href": "https://pkg.go.dev/filepath#Walk",
                                              "target": "_blank"
                                            },
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "atom": "code",
                                                "file": "walk.md",
                                                "nodes": [
                                                  {
                                                    "text": "filepath.Walk",
                                                    "type": "hype.Text"
                                                  }
                                                ],
                                                "type": "*hype.InlineCode"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://pkg.go.dev/filepath#Walk"
                                          }
                                        ],
                                        {
                                          "text": ", but it is advised to use ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "for": "filepath#WalkDir",
                                              "href": "https://pkg.go.dev/filepath#WalkDir",
                                              "target": "_blank"
                                            },
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "atom": "code",
                                                "file": "walk.md",
                                                "nodes": [
                                                  {
                                                    "text": "filepath.WalkDir",
                                                    "type": "hype.Text"
                                                  }
                                                ],
                                                "type": "*hype.InlineCode"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://pkg.go.dev/filepath#WalkDir"
                                          }
                                        ],
                                        {
                                          "text": " instead.",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Paragraph"
                                    }
                                  ],
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  }
                                ],
                                "type": "*hype.Element"
                              },
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-11",
                                    "type": "listing"
                                  },
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "filepath.WalkDir"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "filepath.WalkDir",
                                          "exec": "go doc filepath.WalkDir"
                                        },
                                        "expected_exit": 0,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc filepath.WalkDir\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc WalkDir(root string, fn fs.WalkDirFunc) error\n    WalkDir walks the file tree rooted at root, calling fn for each file or\n    directory in the tree, including root.\n\n    All errors that arise visiting files and directories are filtered by fn:\n    see the fs.WalkDirFunc documentation for details.\n\n    The files are walked in lexical order, which makes the output deterministic\n    but requires WalkDir to read an entire directory into memory before\n    proceeding to walk that directory.\n\n    WalkDir does not follow symbolic links.\n\n    WalkDir calls fn with paths that use the separator character appropriate for\n    the operating system. This is unlike io/fs.WalkDir, which always uses slash\n    separated paths.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "filepath.WalkDir"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIFdhbGtEaXIocm9vdCBzdHJpbmcsIGZuIGZzLldhbGtEaXJGdW5jKSBlcnJvcgogICAgV2Fsa0RpciB3YWxrcyB0aGUgZmlsZSB0cmVlIHJvb3RlZCBhdCByb290LCBjYWxsaW5nIGZuIGZvciBlYWNoIGZpbGUgb3IKICAgIGRpcmVjdG9yeSBpbiB0aGUgdHJlZSwgaW5jbHVkaW5nIHJvb3QuCgogICAgQWxsIGVycm9ycyB0aGF0IGFyaXNlIHZpc2l0aW5nIGZpbGVzIGFuZCBkaXJlY3RvcmllcyBhcmUgZmlsdGVyZWQgYnkgZm46CiAgICBzZWUgdGhlIGZzLldhbGtEaXJGdW5jIGRvY3VtZW50YXRpb24gZm9yIGRldGFpbHMuCgogICAgVGhlIGZpbGVzIGFyZSB3YWxrZWQgaW4gbGV4aWNhbCBvcmRlciwgd2hpY2ggbWFrZXMgdGhlIG91dHB1dCBkZXRlcm1pbmlzdGljCiAgICBidXQgcmVxdWlyZXMgV2Fsa0RpciB0byByZWFkIGFuIGVudGlyZSBkaXJlY3RvcnkgaW50byBtZW1vcnkgYmVmb3JlCiAgICBwcm9jZWVkaW5nIHRvIHdhbGsgdGhhdCBkaXJlY3RvcnkuCgogICAgV2Fsa0RpciBkb2VzIG5vdCBmb2xsb3cgc3ltYm9saWMgbGlua3MuCgogICAgV2Fsa0RpciBjYWxscyBmbiB3aXRoIHBhdGhzIHRoYXQgdXNlIHRoZSBzZXBhcmF0b3IgY2hhcmFjdGVyIGFwcHJvcHJpYXRlIGZvcgogICAgdGhlIG9wZXJhdGluZyBzeXN0ZW0uIFRoaXMgaXMgdW5saWtlIGlvL2ZzLldhbGtEaXIsIHdoaWNoIGFsd2F5cyB1c2VzIHNsYXNoCiAgICBzZXBhcmF0ZWQgcGF0aHMu",
                                              "duration": 672412667,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc filepath.WalkDir\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc WalkDir(root string, fn fs.WalkDirFunc) error\n    WalkDir walks the file tree rooted at root, calling fn for each file or\n    directory in the tree, including root.\n\n    All errors that arise visiting files and directories are filtered by fn:\n    see the fs.WalkDirFunc documentation for details.\n\n    The files are walked in lexical order, which makes the output deterministic\n    but requires WalkDir to read an entire directory into memory before\n    proceeding to walk that directory.\n\n    WalkDir does not follow symbolic links.\n\n    WalkDir calls fn with paths that use the separator character appropriate for\n    the operating system. This is unlike io/fs.WalkDir, which always uses slash\n    separated paths.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "filepath.WalkDir"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIFdhbGtEaXIocm9vdCBzdHJpbmcsIGZuIGZzLldhbGtEaXJGdW5jKSBlcnJvcgogICAgV2Fsa0RpciB3YWxrcyB0aGUgZmlsZSB0cmVlIHJvb3RlZCBhdCByb290LCBjYWxsaW5nIGZuIGZvciBlYWNoIGZpbGUgb3IKICAgIGRpcmVjdG9yeSBpbiB0aGUgdHJlZSwgaW5jbHVkaW5nIHJvb3QuCgogICAgQWxsIGVycm9ycyB0aGF0IGFyaXNlIHZpc2l0aW5nIGZpbGVzIGFuZCBkaXJlY3RvcmllcyBhcmUgZmlsdGVyZWQgYnkgZm46CiAgICBzZWUgdGhlIGZzLldhbGtEaXJGdW5jIGRvY3VtZW50YXRpb24gZm9yIGRldGFpbHMuCgogICAgVGhlIGZpbGVzIGFyZSB3YWxrZWQgaW4gbGV4aWNhbCBvcmRlciwgd2hpY2ggbWFrZXMgdGhlIG91dHB1dCBkZXRlcm1pbmlzdGljCiAgICBidXQgcmVxdWlyZXMgV2Fsa0RpciB0byByZWFkIGFuIGVudGlyZSBkaXJlY3RvcnkgaW50byBtZW1vcnkgYmVmb3JlCiAgICBwcm9jZWVkaW5nIHRvIHdhbGsgdGhhdCBkaXJlY3RvcnkuCgogICAgV2Fsa0RpciBkb2VzIG5vdCBmb2xsb3cgc3ltYm9saWMgbGlua3MuCgogICAgV2Fsa0RpciBjYWxscyBmbiB3aXRoIHBhdGhzIHRoYXQgdXNlIHRoZSBzZXBhcmF0b3IgY2hhcmFjdGVyIGFwcHJvcHJpYXRlIGZvcgogICAgdGhlIG9wZXJhdGluZyBzeXN0ZW0uIFRoaXMgaXMgdW5saWtlIGlvL2ZzLldhbGtEaXIsIHdoaWNoIGFsd2F5cyB1c2VzIHNsYXNoCiAgICBzZXBhcmF0ZWQgcGF0aHMu",
                                            "duration": 672412667,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.11:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "filepath#WalkDir",
                                                "href": "https://pkg.go.dev/filepath#WalkDir",
                                                "target": "_blank"
                                              },
                                              "file": "walk",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "walk",
                                                    "nodes": [
                                                      {
                                                        "text": "filepath.WalkDir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/filepath#WalkDir"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 11,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "In order to use ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#WalkDir",
                                          "href": "https://pkg.go.dev/filepath#WalkDir",
                                          "target": "_blank"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.WalkDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#WalkDir"
                                      }
                                    ],
                                    {
                                      "text": ", we need to, first, give it a path to walk, and then a function that will be called for each file. This function is the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#WalkFunc",
                                          "href": "https://pkg.go.dev/filepath#WalkFunc",
                                          "target": "_blank"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.WalkFunc",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#WalkFunc"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-12"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-12"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.12",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-12"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-12",
                                    "type": "listing"
                                  },
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fs.WalkDirFunc"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fs.WalkDirFunc",
                                          "exec": "go doc fs.WalkDirFunc"
                                        },
                                        "expected_exit": 0,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fs.WalkDirFunc\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype WalkDirFunc func(path string, d DirEntry, err error) error\n    WalkDirFunc is the type of the function called by WalkDir to visit each file\n    or directory.\n\n    The path argument contains the argument to WalkDir as a prefix. That is,\n    if WalkDir is called with root argument \u0026#34;dir\u0026#34; and finds a file named \u0026#34;a\u0026#34; in\n    that directory, the walk function will be called with argument \u0026#34;dir/a\u0026#34;.\n\n    The d argument is the fs.DirEntry for the named path.\n\n    The error result returned by the function controls how WalkDir continues.\n    If the function returns the special value SkipDir, WalkDir skips the current\n    directory (path if d.IsDir() is true, otherwise path\u0026#39;s parent directory). If\n    the function returns the special value SkipAll, WalkDir skips all remaining\n    files and directories. Otherwise, if the function returns a non-nil error,\n    WalkDir stops entirely and returns that error.\n\n    The err argument reports an error related to path, signaling that WalkDir\n    will not walk into that directory. The function can decide how to handle\n    that error; as described earlier, returning the error will cause WalkDir to\n    stop walking the entire tree.\n\n    WalkDir calls the function with a non-nil err argument in two cases.\n\n    First, if the initial fs.Stat on the root directory fails, WalkDir calls the\n    function with path set to root, d set to nil, and err set to the error from\n    fs.Stat.\n\n    Second, if a directory\u0026#39;s ReadDir method fails, WalkDir calls the function\n    with path set to the directory\u0026#39;s path, d set to an fs.DirEntry describing\n    the directory, and err set to the error from ReadDir. In this second case,\n    the function is called twice with the path of the directory: the first\n    call is before the directory read is attempted and has err set to nil,\n    giving the function a chance to return SkipDir or SkipAll and avoid the\n    ReadDir entirely. The second call is after a failed ReadDir and reports the\n    error from ReadDir. (If ReadDir succeeds, there is no second call.)\n\n    The differences between WalkDirFunc compared to filepath.WalkFunc are:\n\n      - The second argument has type fs.DirEntry instead of fs.FileInfo.\n      - The function is called before reading a directory, to allow SkipDir\n        or SkipAll to bypass the directory read entirely or skip all remaining\n        files and directories respectively.\n      - If a directory read fails, the function is called a second time for that\n        directory to report the error.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fs.WalkDirFunc"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBXYWxrRGlyRnVuYyBmdW5jKHBhdGggc3RyaW5nLCBkIERpckVudHJ5LCBlcnIgZXJyb3IpIGVycm9yCiAgICBXYWxrRGlyRnVuYyBpcyB0aGUgdHlwZSBvZiB0aGUgZnVuY3Rpb24gY2FsbGVkIGJ5IFdhbGtEaXIgdG8gdmlzaXQgZWFjaCBmaWxlCiAgICBvciBkaXJlY3RvcnkuCgogICAgVGhlIHBhdGggYXJndW1lbnQgY29udGFpbnMgdGhlIGFyZ3VtZW50IHRvIFdhbGtEaXIgYXMgYSBwcmVmaXguIFRoYXQgaXMsCiAgICBpZiBXYWxrRGlyIGlzIGNhbGxlZCB3aXRoIHJvb3QgYXJndW1lbnQgImRpciIgYW5kIGZpbmRzIGEgZmlsZSBuYW1lZCAiYSIgaW4KICAgIHRoYXQgZGlyZWN0b3J5LCB0aGUgd2FsayBmdW5jdGlvbiB3aWxsIGJlIGNhbGxlZCB3aXRoIGFyZ3VtZW50ICJkaXIvYSIuCgogICAgVGhlIGQgYXJndW1lbnQgaXMgdGhlIGZzLkRpckVudHJ5IGZvciB0aGUgbmFtZWQgcGF0aC4KCiAgICBUaGUgZXJyb3IgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBmdW5jdGlvbiBjb250cm9scyBob3cgV2Fsa0RpciBjb250aW51ZXMuCiAgICBJZiB0aGUgZnVuY3Rpb24gcmV0dXJucyB0aGUgc3BlY2lhbCB2YWx1ZSBTa2lwRGlyLCBXYWxrRGlyIHNraXBzIHRoZSBjdXJyZW50CiAgICBkaXJlY3RvcnkgKHBhdGggaWYgZC5Jc0RpcigpIGlzIHRydWUsIG90aGVyd2lzZSBwYXRoJ3MgcGFyZW50IGRpcmVjdG9yeSkuIElmCiAgICB0aGUgZnVuY3Rpb24gcmV0dXJucyB0aGUgc3BlY2lhbCB2YWx1ZSBTa2lwQWxsLCBXYWxrRGlyIHNraXBzIGFsbCByZW1haW5pbmcKICAgIGZpbGVzIGFuZCBkaXJlY3Rvcmllcy4gT3RoZXJ3aXNlLCBpZiB0aGUgZnVuY3Rpb24gcmV0dXJucyBhIG5vbi1uaWwgZXJyb3IsCiAgICBXYWxrRGlyIHN0b3BzIGVudGlyZWx5IGFuZCByZXR1cm5zIHRoYXQgZXJyb3IuCgogICAgVGhlIGVyciBhcmd1bWVudCByZXBvcnRzIGFuIGVycm9yIHJlbGF0ZWQgdG8gcGF0aCwgc2lnbmFsaW5nIHRoYXQgV2Fsa0RpcgogICAgd2lsbCBub3Qgd2FsayBpbnRvIHRoYXQgZGlyZWN0b3J5LiBUaGUgZnVuY3Rpb24gY2FuIGRlY2lkZSBob3cgdG8gaGFuZGxlCiAgICB0aGF0IGVycm9yOyBhcyBkZXNjcmliZWQgZWFybGllciwgcmV0dXJuaW5nIHRoZSBlcnJvciB3aWxsIGNhdXNlIFdhbGtEaXIgdG8KICAgIHN0b3Agd2Fsa2luZyB0aGUgZW50aXJlIHRyZWUuCgogICAgV2Fsa0RpciBjYWxscyB0aGUgZnVuY3Rpb24gd2l0aCBhIG5vbi1uaWwgZXJyIGFyZ3VtZW50IGluIHR3byBjYXNlcy4KCiAgICBGaXJzdCwgaWYgdGhlIGluaXRpYWwgZnMuU3RhdCBvbiB0aGUgcm9vdCBkaXJlY3RvcnkgZmFpbHMsIFdhbGtEaXIgY2FsbHMgdGhlCiAgICBmdW5jdGlvbiB3aXRoIHBhdGggc2V0IHRvIHJvb3QsIGQgc2V0IHRvIG5pbCwgYW5kIGVyciBzZXQgdG8gdGhlIGVycm9yIGZyb20KICAgIGZzLlN0YXQuCgogICAgU2Vjb25kLCBpZiBhIGRpcmVjdG9yeSdzIFJlYWREaXIgbWV0aG9kIGZhaWxzLCBXYWxrRGlyIGNhbGxzIHRoZSBmdW5jdGlvbgogICAgd2l0aCBwYXRoIHNldCB0byB0aGUgZGlyZWN0b3J5J3MgcGF0aCwgZCBzZXQgdG8gYW4gZnMuRGlyRW50cnkgZGVzY3JpYmluZwogICAgdGhlIGRpcmVjdG9yeSwgYW5kIGVyciBzZXQgdG8gdGhlIGVycm9yIGZyb20gUmVhZERpci4gSW4gdGhpcyBzZWNvbmQgY2FzZSwKICAgIHRoZSBmdW5jdGlvbiBpcyBjYWxsZWQgdHdpY2Ugd2l0aCB0aGUgcGF0aCBvZiB0aGUgZGlyZWN0b3J5OiB0aGUgZmlyc3QKICAgIGNhbGwgaXMgYmVmb3JlIHRoZSBkaXJlY3RvcnkgcmVhZCBpcyBhdHRlbXB0ZWQgYW5kIGhhcyBlcnIgc2V0IHRvIG5pbCwKICAgIGdpdmluZyB0aGUgZnVuY3Rpb24gYSBjaGFuY2UgdG8gcmV0dXJuIFNraXBEaXIgb3IgU2tpcEFsbCBhbmQgYXZvaWQgdGhlCiAgICBSZWFkRGlyIGVudGlyZWx5LiBUaGUgc2Vjb25kIGNhbGwgaXMgYWZ0ZXIgYSBmYWlsZWQgUmVhZERpciBhbmQgcmVwb3J0cyB0aGUKICAgIGVycm9yIGZyb20gUmVhZERpci4gKElmIFJlYWREaXIgc3VjY2VlZHMsIHRoZXJlIGlzIG5vIHNlY29uZCBjYWxsLikKCiAgICBUaGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBXYWxrRGlyRnVuYyBjb21wYXJlZCB0byBmaWxlcGF0aC5XYWxrRnVuYyBhcmU6CgogICAgICAtIFRoZSBzZWNvbmQgYXJndW1lbnQgaGFzIHR5cGUgZnMuRGlyRW50cnkgaW5zdGVhZCBvZiBmcy5GaWxlSW5mby4KICAgICAgLSBUaGUgZnVuY3Rpb24gaXMgY2FsbGVkIGJlZm9yZSByZWFkaW5nIGEgZGlyZWN0b3J5LCB0byBhbGxvdyBTa2lwRGlyCiAgICAgICAgb3IgU2tpcEFsbCB0byBieXBhc3MgdGhlIGRpcmVjdG9yeSByZWFkIGVudGlyZWx5IG9yIHNraXAgYWxsIHJlbWFpbmluZwogICAgICAgIGZpbGVzIGFuZCBkaXJlY3RvcmllcyByZXNwZWN0aXZlbHkuCiAgICAgIC0gSWYgYSBkaXJlY3RvcnkgcmVhZCBmYWlscywgdGhlIGZ1bmN0aW9uIGlzIGNhbGxlZCBhIHNlY29uZCB0aW1lIGZvciB0aGF0CiAgICAgICAgZGlyZWN0b3J5IHRvIHJlcG9ydCB0aGUgZXJyb3Iu",
                                              "duration": 348876750,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fs.WalkDirFunc\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype WalkDirFunc func(path string, d DirEntry, err error) error\n    WalkDirFunc is the type of the function called by WalkDir to visit each file\n    or directory.\n\n    The path argument contains the argument to WalkDir as a prefix. That is,\n    if WalkDir is called with root argument \u0026#34;dir\u0026#34; and finds a file named \u0026#34;a\u0026#34; in\n    that directory, the walk function will be called with argument \u0026#34;dir/a\u0026#34;.\n\n    The d argument is the fs.DirEntry for the named path.\n\n    The error result returned by the function controls how WalkDir continues.\n    If the function returns the special value SkipDir, WalkDir skips the current\n    directory (path if d.IsDir() is true, otherwise path\u0026#39;s parent directory). If\n    the function returns the special value SkipAll, WalkDir skips all remaining\n    files and directories. Otherwise, if the function returns a non-nil error,\n    WalkDir stops entirely and returns that error.\n\n    The err argument reports an error related to path, signaling that WalkDir\n    will not walk into that directory. The function can decide how to handle\n    that error; as described earlier, returning the error will cause WalkDir to\n    stop walking the entire tree.\n\n    WalkDir calls the function with a non-nil err argument in two cases.\n\n    First, if the initial fs.Stat on the root directory fails, WalkDir calls the\n    function with path set to root, d set to nil, and err set to the error from\n    fs.Stat.\n\n    Second, if a directory\u0026#39;s ReadDir method fails, WalkDir calls the function\n    with path set to the directory\u0026#39;s path, d set to an fs.DirEntry describing\n    the directory, and err set to the error from ReadDir. In this second case,\n    the function is called twice with the path of the directory: the first\n    call is before the directory read is attempted and has err set to nil,\n    giving the function a chance to return SkipDir or SkipAll and avoid the\n    ReadDir entirely. The second call is after a failed ReadDir and reports the\n    error from ReadDir. (If ReadDir succeeds, there is no second call.)\n\n    The differences between WalkDirFunc compared to filepath.WalkFunc are:\n\n      - The second argument has type fs.DirEntry instead of fs.FileInfo.\n      - The function is called before reading a directory, to allow SkipDir\n        or SkipAll to bypass the directory read entirely or skip all remaining\n        files and directories respectively.\n      - If a directory read fails, the function is called a second time for that\n        directory to report the error.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fs.WalkDirFunc"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBXYWxrRGlyRnVuYyBmdW5jKHBhdGggc3RyaW5nLCBkIERpckVudHJ5LCBlcnIgZXJyb3IpIGVycm9yCiAgICBXYWxrRGlyRnVuYyBpcyB0aGUgdHlwZSBvZiB0aGUgZnVuY3Rpb24gY2FsbGVkIGJ5IFdhbGtEaXIgdG8gdmlzaXQgZWFjaCBmaWxlCiAgICBvciBkaXJlY3RvcnkuCgogICAgVGhlIHBhdGggYXJndW1lbnQgY29udGFpbnMgdGhlIGFyZ3VtZW50IHRvIFdhbGtEaXIgYXMgYSBwcmVmaXguIFRoYXQgaXMsCiAgICBpZiBXYWxrRGlyIGlzIGNhbGxlZCB3aXRoIHJvb3QgYXJndW1lbnQgImRpciIgYW5kIGZpbmRzIGEgZmlsZSBuYW1lZCAiYSIgaW4KICAgIHRoYXQgZGlyZWN0b3J5LCB0aGUgd2FsayBmdW5jdGlvbiB3aWxsIGJlIGNhbGxlZCB3aXRoIGFyZ3VtZW50ICJkaXIvYSIuCgogICAgVGhlIGQgYXJndW1lbnQgaXMgdGhlIGZzLkRpckVudHJ5IGZvciB0aGUgbmFtZWQgcGF0aC4KCiAgICBUaGUgZXJyb3IgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBmdW5jdGlvbiBjb250cm9scyBob3cgV2Fsa0RpciBjb250aW51ZXMuCiAgICBJZiB0aGUgZnVuY3Rpb24gcmV0dXJucyB0aGUgc3BlY2lhbCB2YWx1ZSBTa2lwRGlyLCBXYWxrRGlyIHNraXBzIHRoZSBjdXJyZW50CiAgICBkaXJlY3RvcnkgKHBhdGggaWYgZC5Jc0RpcigpIGlzIHRydWUsIG90aGVyd2lzZSBwYXRoJ3MgcGFyZW50IGRpcmVjdG9yeSkuIElmCiAgICB0aGUgZnVuY3Rpb24gcmV0dXJucyB0aGUgc3BlY2lhbCB2YWx1ZSBTa2lwQWxsLCBXYWxrRGlyIHNraXBzIGFsbCByZW1haW5pbmcKICAgIGZpbGVzIGFuZCBkaXJlY3Rvcmllcy4gT3RoZXJ3aXNlLCBpZiB0aGUgZnVuY3Rpb24gcmV0dXJucyBhIG5vbi1uaWwgZXJyb3IsCiAgICBXYWxrRGlyIHN0b3BzIGVudGlyZWx5IGFuZCByZXR1cm5zIHRoYXQgZXJyb3IuCgogICAgVGhlIGVyciBhcmd1bWVudCByZXBvcnRzIGFuIGVycm9yIHJlbGF0ZWQgdG8gcGF0aCwgc2lnbmFsaW5nIHRoYXQgV2Fsa0RpcgogICAgd2lsbCBub3Qgd2FsayBpbnRvIHRoYXQgZGlyZWN0b3J5LiBUaGUgZnVuY3Rpb24gY2FuIGRlY2lkZSBob3cgdG8gaGFuZGxlCiAgICB0aGF0IGVycm9yOyBhcyBkZXNjcmliZWQgZWFybGllciwgcmV0dXJuaW5nIHRoZSBlcnJvciB3aWxsIGNhdXNlIFdhbGtEaXIgdG8KICAgIHN0b3Agd2Fsa2luZyB0aGUgZW50aXJlIHRyZWUuCgogICAgV2Fsa0RpciBjYWxscyB0aGUgZnVuY3Rpb24gd2l0aCBhIG5vbi1uaWwgZXJyIGFyZ3VtZW50IGluIHR3byBjYXNlcy4KCiAgICBGaXJzdCwgaWYgdGhlIGluaXRpYWwgZnMuU3RhdCBvbiB0aGUgcm9vdCBkaXJlY3RvcnkgZmFpbHMsIFdhbGtEaXIgY2FsbHMgdGhlCiAgICBmdW5jdGlvbiB3aXRoIHBhdGggc2V0IHRvIHJvb3QsIGQgc2V0IHRvIG5pbCwgYW5kIGVyciBzZXQgdG8gdGhlIGVycm9yIGZyb20KICAgIGZzLlN0YXQuCgogICAgU2Vjb25kLCBpZiBhIGRpcmVjdG9yeSdzIFJlYWREaXIgbWV0aG9kIGZhaWxzLCBXYWxrRGlyIGNhbGxzIHRoZSBmdW5jdGlvbgogICAgd2l0aCBwYXRoIHNldCB0byB0aGUgZGlyZWN0b3J5J3MgcGF0aCwgZCBzZXQgdG8gYW4gZnMuRGlyRW50cnkgZGVzY3JpYmluZwogICAgdGhlIGRpcmVjdG9yeSwgYW5kIGVyciBzZXQgdG8gdGhlIGVycm9yIGZyb20gUmVhZERpci4gSW4gdGhpcyBzZWNvbmQgY2FzZSwKICAgIHRoZSBmdW5jdGlvbiBpcyBjYWxsZWQgdHdpY2Ugd2l0aCB0aGUgcGF0aCBvZiB0aGUgZGlyZWN0b3J5OiB0aGUgZmlyc3QKICAgIGNhbGwgaXMgYmVmb3JlIHRoZSBkaXJlY3RvcnkgcmVhZCBpcyBhdHRlbXB0ZWQgYW5kIGhhcyBlcnIgc2V0IHRvIG5pbCwKICAgIGdpdmluZyB0aGUgZnVuY3Rpb24gYSBjaGFuY2UgdG8gcmV0dXJuIFNraXBEaXIgb3IgU2tpcEFsbCBhbmQgYXZvaWQgdGhlCiAgICBSZWFkRGlyIGVudGlyZWx5LiBUaGUgc2Vjb25kIGNhbGwgaXMgYWZ0ZXIgYSBmYWlsZWQgUmVhZERpciBhbmQgcmVwb3J0cyB0aGUKICAgIGVycm9yIGZyb20gUmVhZERpci4gKElmIFJlYWREaXIgc3VjY2VlZHMsIHRoZXJlIGlzIG5vIHNlY29uZCBjYWxsLikKCiAgICBUaGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBXYWxrRGlyRnVuYyBjb21wYXJlZCB0byBmaWxlcGF0aC5XYWxrRnVuYyBhcmU6CgogICAgICAtIFRoZSBzZWNvbmQgYXJndW1lbnQgaGFzIHR5cGUgZnMuRGlyRW50cnkgaW5zdGVhZCBvZiBmcy5GaWxlSW5mby4KICAgICAgLSBUaGUgZnVuY3Rpb24gaXMgY2FsbGVkIGJlZm9yZSByZWFkaW5nIGEgZGlyZWN0b3J5LCB0byBhbGxvdyBTa2lwRGlyCiAgICAgICAgb3IgU2tpcEFsbCB0byBieXBhc3MgdGhlIGRpcmVjdG9yeSByZWFkIGVudGlyZWx5IG9yIHNraXAgYWxsIHJlbWFpbmluZwogICAgICAgIGZpbGVzIGFuZCBkaXJlY3RvcmllcyByZXNwZWN0aXZlbHkuCiAgICAgIC0gSWYgYSBkaXJlY3RvcnkgcmVhZCBmYWlscywgdGhlIGZ1bmN0aW9uIGlzIGNhbGxlZCBhIHNlY29uZCB0aW1lIGZvciB0aGF0CiAgICAgICAgZGlyZWN0b3J5IHRvIHJlcG9ydCB0aGUgZXJyb3Iu",
                                            "duration": 348876750,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.12:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#WalkDirFunc",
                                                "href": "https://pkg.go.dev/io/fs#WalkDirFunc",
                                                "target": "_blank"
                                              },
                                              "file": "walk",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "walk",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.WalkDirFunc",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#WalkDirFunc"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 12,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "Consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-13"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-13"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.13",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-13"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", in which we walk through the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory. For each file and directory, including the root directory, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#WalkFunc",
                                          "href": "https://pkg.go.dev/filepath#WalkFunc",
                                          "target": "_blank"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.WalkFunc",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#WalkFunc"
                                      }
                                    ],
                                    {
                                      "text": " will be called.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-13",
                                    "type": "listing"
                                  },
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "walk",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "walk/src/tree/main.go#main"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\terr := filepath.WalkDir(\"data\", func(path string, d fs.DirEntry, err error) error {\n\n\t\t// if there was an error, return it\n\t\t// if there is an error, it is most likely\n\t\t// because an error was an encoutered trying\n\t\t// to read the top level directory\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// if the file is a directory\n\t\t// return nil to tell walk to continue\n\t\t// walking the directory,\n\t\t// but to no longer continue\n\t\t// operating on the directory itself\n\t\tif d.IsDir() {\n\t\t\treturn nil\n\t\t}\n\n\t\t// get the file info for the file\n\t\tinfo, err := d.Info()\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// if the file is not a directory\n\t\t// the print its mode, size, and path\n\t\tfmt.Printf(\"%s\\t%d\\t%s\\n\", info.Mode(), info.Size(), path)\n\n\t\t// return nil to tell walk to continue\n\t\treturn nil\n\t})\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n}",
                                                "file": "walk/src/tree/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 10,
                                                "end": 51,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.13:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "filepath#WalkDir",
                                                "href": "https://pkg.go.dev/filepath#WalkDir",
                                                "target": "_blank"
                                              },
                                              "file": "walk",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "walk",
                                                    "nodes": [
                                                      {
                                                        "text": "filepath.WalkDir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/filepath#WalkDir"
                                            }
                                          ],
                                          {
                                            "text": " to recurse a directory.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 13,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "First, we need to check the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "text": "error",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " that is passed in via the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#WalkFunc",
                                          "href": "https://pkg.go.dev/filepath#WalkFunc",
                                          "target": "_blank"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.WalkFunc",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#WalkFunc"
                                      }
                                    ],
                                    {
                                      "text": " function. If this error is not ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", it is most likely that the root directory could not be read. In this case, we can simply return the error and the walk will stop.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "If there is no error, we can then check to see if what we're dealing with is a directory or a file. If it is a directory, we can simply return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " to indicate that we don't want to continue processing directory itself, but walking of the directory will continue. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#DirEntry.IsDir",
                                          "href": "https://pkg.go.dev/io/fs#DirEntry.IsDir",
                                          "target": "_blank"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk.md",
                                            "nodes": [
                                              {
                                                "text": "fs.DirEntry.IsDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#DirEntry.IsDir"
                                      }
                                    ],
                                    {
                                      "text": " method can be used to check this, return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "text": "true",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " for a directory, and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "text": "false",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " for a file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "Finally, we print off the mode, size, and path of the file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-14"
                                        },
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-14"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.14",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-14"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", the walk function is called for each file and directory in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory. Printing out the file information is lexical order, which is the order in which the files and directories are listed in the directory.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-14",
                                    "type": "listing"
                                  },
                                  "file": "walk.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "walk/src/tree"
                                        },
                                        "expected_exit": 0,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n-rw-r--r--\t31\tdata/.hidden/d.txt\n-rw-r--r--\t31\tdata/a.txt\n-rw-r--r--\t9\tdata/b.txt\n-rw-r--r--\t31\tdata/e/f/_ignore/i.json\n-rw-r--r--\t31\tdata/e/f/g.txt\n-rw-r--r--\t31\tdata/e/f/h.txt\n-rw-r--r--\t9\tdata/e/j.txt\n-rw-r--r--\t31\tdata/testdata/c.txt",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/tree",
                                              "stdout": "LXJ3LXItLXItLQkzMQlkYXRhLy5oaWRkZW4vZC50eHQKLXJ3LXItLXItLQkzMQlkYXRhL2EudHh0Ci1ydy1yLS1yLS0JOQlkYXRhL2IudHh0Ci1ydy1yLS1yLS0JMzEJZGF0YS9lL2YvX2lnbm9yZS9pLmpzb24KLXJ3LXItLXItLQkzMQlkYXRhL2UvZi9nLnR4dAotcnctci0tci0tCTMxCWRhdGEvZS9mL2gudHh0Ci1ydy1yLS1yLS0JOQlkYXRhL2Uvai50eHQKLXJ3LXItLXItLQkzMQlkYXRhL3Rlc3RkYXRhL2MudHh0",
                                              "duration": 1091086000,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n-rw-r--r--\t31\tdata/.hidden/d.txt\n-rw-r--r--\t31\tdata/a.txt\n-rw-r--r--\t9\tdata/b.txt\n-rw-r--r--\t31\tdata/e/f/_ignore/i.json\n-rw-r--r--\t31\tdata/e/f/g.txt\n-rw-r--r--\t31\tdata/e/f/h.txt\n-rw-r--r--\t9\tdata/e/j.txt\n-rw-r--r--\t31\tdata/testdata/c.txt",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/tree",
                                            "stdout": "LXJ3LXItLXItLQkzMQlkYXRhLy5oaWRkZW4vZC50eHQKLXJ3LXItLXItLQkzMQlkYXRhL2EudHh0Ci1ydy1yLS1yLS0JOQlkYXRhL2IudHh0Ci1ydy1yLS1yLS0JMzEJZGF0YS9lL2YvX2lnbm9yZS9pLmpzb24KLXJ3LXItLXItLQkzMQlkYXRhL2UvZi9nLnR4dAotcnctci0tci0tCTMxCWRhdGEvZS9mL2gudHh0Ci1ydy1yLS1yLS0JOQlkYXRhL2Uvai50eHQKLXJ3LXItLXItLQkzMQlkYXRhL3Rlc3RkYXRhL2MudHh0",
                                            "duration": 1091086000,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.14:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The output of ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-13"
                                              },
                                              "file": "walk",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-13"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.13",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-13"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 14,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Walking Directories",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "skip/skip.md"
                      },
                      "dir": "skip",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "skip.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "skip.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Skipping Directories and Files",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "When walking through a directory tree, you may want to skip certain directories and files. For example, we may want to skip hidden folders like ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "text": ".git",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "text": ".vscode",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " or skip large folders such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "text": "node_modules",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". There may be other reasons to skip certain files and directories that are more specific to your application.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "To illustrate this, let's look at the excerpt from the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "text": "go help test",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " command in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-15"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-15"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.15",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-15"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-15",
                                    "type": "listing"
                                  },
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "skip",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-plain",
                                              "language": "plain"
                                            },
                                            "file": "skip",
                                            "lang": "plain",
                                            "nodes": [
                                              {
                                                "text": "Files whose names begin with \"_\" (including \"_test.go\") or \".\" are ignored.\n\nThe go tool will ignore a directory named \"testdata\", making it available\nto hold ancillary data needed by the tests.\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.FencedCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "skip",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.15:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Excerpt from the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "skip",
                                              "nodes": [
                                                {
                                                  "text": "go help test",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " command.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 15,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "The documentation in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-15"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-15"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.15",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-15"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " tells us that there are certain files and directories that Go will ignore when walking through a directory tree looking for test files.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "ul",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "li",
                                        "file": "skip.md",
                                        "list-type": "ul",
                                        "nodes": [
                                          {
                                            "text": "Files/Dirs whose names begin with ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "skip.md",
                                              "nodes": [
                                                {
                                                  "text": ".",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " are ignored.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.LI"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "li",
                                        "file": "skip.md",
                                        "list-type": "ul",
                                        "nodes": [
                                          {
                                            "text": "Files/Dirs whose names begin with ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "skip.md",
                                              "nodes": [
                                                {
                                                  "text": "_",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " are ignored.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.LI"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "li",
                                        "file": "skip.md",
                                        "list-type": "ul",
                                        "nodes": [
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "skip.md",
                                              "nodes": [
                                                {
                                                  "text": "testdata",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " directory is ignored.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.LI"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.UL"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "Let's implement these same restrictions in our own code.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "skip.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Skipping Directories",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "In order to tell Go to skip a directory, we can return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#SkipDir",
                                          "href": "https://pkg.go.dev/io/fs#SkipDir",
                                          "target": "_blank"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "skip.md",
                                            "nodes": [
                                              {
                                                "text": "fs.SkipDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#SkipDir"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-16"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-16"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.16",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-16"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", from our ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#WalkFunc",
                                          "href": "https://pkg.go.dev/io/fs#WalkFunc",
                                          "target": "_blank"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "skip.md",
                                            "nodes": [
                                              {
                                                "text": "fs.WalkFunc",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#WalkFunc"
                                      }
                                    ],
                                    {
                                      "text": " function. While technically this is an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "skip.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " type, Go is using this error as a sentinel value to indicate that the directory should be skipped. This is similar to how ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#EOF",
                                          "href": "https://pkg.go.dev/io#EOF",
                                          "target": "_blank"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "skip.md",
                                            "nodes": [
                                              {
                                                "text": "io.EOF",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#EOF"
                                      }
                                    ],
                                    {
                                      "text": " is used to indicated that the end of a file has been reached and there is no more data to be read.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-16",
                                    "type": "listing"
                                  },
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fs.SkipDir"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fs.SkipDir",
                                          "exec": "go doc fs.SkipDir"
                                        },
                                        "expected_exit": 0,
                                        "file": "skip",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fs.SkipDir\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\nvar SkipDir = errors.New(\u0026#34;skip this directory\u0026#34;)\n    SkipDir is used as a return value from WalkDirFuncs to indicate that the\n    directory named in the call is to be skipped. It is not returned as an error\n    by any function.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fs.SkipDir"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdmFyIFNraXBEaXIgPSBlcnJvcnMuTmV3KCJza2lwIHRoaXMgZGlyZWN0b3J5IikKICAgIFNraXBEaXIgaXMgdXNlZCBhcyBhIHJldHVybiB2YWx1ZSBmcm9tIFdhbGtEaXJGdW5jcyB0byBpbmRpY2F0ZSB0aGF0IHRoZQogICAgZGlyZWN0b3J5IG5hbWVkIGluIHRoZSBjYWxsIGlzIHRvIGJlIHNraXBwZWQuIEl0IGlzIG5vdCByZXR1cm5lZCBhcyBhbiBlcnJvcgogICAgYnkgYW55IGZ1bmN0aW9uLg==",
                                              "duration": 982918125,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fs.SkipDir\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\nvar SkipDir = errors.New(\u0026#34;skip this directory\u0026#34;)\n    SkipDir is used as a return value from WalkDirFuncs to indicate that the\n    directory named in the call is to be skipped. It is not returned as an error\n    by any function.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fs.SkipDir"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdmFyIFNraXBEaXIgPSBlcnJvcnMuTmV3KCJza2lwIHRoaXMgZGlyZWN0b3J5IikKICAgIFNraXBEaXIgaXMgdXNlZCBhcyBhIHJldHVybiB2YWx1ZSBmcm9tIFdhbGtEaXJGdW5jcyB0byBpbmRpY2F0ZSB0aGF0IHRoZQogICAgZGlyZWN0b3J5IG5hbWVkIGluIHRoZSBjYWxsIGlzIHRvIGJlIHNraXBwZWQuIEl0IGlzIG5vdCByZXR1cm5lZCBhcyBhbiBlcnJvcgogICAgYnkgYW55IGZ1bmN0aW9uLg==",
                                            "duration": 982918125,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "skip",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.16:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#SkipDir",
                                                "href": "https://pkg.go.dev/io/fs#SkipDir",
                                                "target": "_blank"
                                              },
                                              "file": "skip",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "skip",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.SkipDir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#SkipDir"
                                            }
                                          ],
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#error",
                                                "href": "https://pkg.go.dev/builtin#error",
                                                "target": "_blank"
                                              },
                                              "file": "skip",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "skip",
                                                    "nodes": [
                                                      {
                                                        "text": "error",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#error"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 16,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-17"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-17"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.17",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-17"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", instead of simply returning a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " when the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#DirEntry",
                                          "href": "https://pkg.go.dev/io/fs#DirEntry",
                                          "target": "_blank"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "skip.md",
                                            "nodes": [
                                              {
                                                "text": "fs.DirEntry",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#DirEntry"
                                      }
                                    ],
                                    {
                                      "text": " is a directory, we can check the name of the directory and make a decision on whether to ignore that directory or not. If we want to ignore a directory, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "text": "testdata",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " for example, we can return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#SkipDir",
                                          "href": "https://pkg.go.dev/io/fs#SkipDir",
                                          "target": "_blank"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "skip.md",
                                            "nodes": [
                                              {
                                                "text": "fs.SkipDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#SkipDir"
                                      }
                                    ],
                                    {
                                      "text": " from our ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#WalkFunc",
                                          "href": "https://pkg.go.dev/io/fs#WalkFunc",
                                          "target": "_blank"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "skip.md",
                                            "nodes": [
                                              {
                                                "text": "fs.WalkFunc",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#WalkFunc"
                                      }
                                    ],
                                    {
                                      "text": " function. Go will then skip that directory and all of its children.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-17",
                                    "type": "listing"
                                  },
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "skip",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "skip/src/tree/demo.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "text": "package demo\n\nimport (\n\t\u0026#34;io/fs\u0026#34;\n\t\u0026#34;path/filepath\u0026#34;\n\t\u0026#34;strings\u0026#34;\n)\n\nfunc Walk() ([]string, error) {\n\tvar entries []string\n\n\terr := filepath.WalkDir(\u0026#34;data\u0026#34;, func(path string, d fs.DirEntry, err error) error {\n\n\t\t// if there was an error, return it\n\t\t// if there is an error, it is most likely\n\t\t// because an error was an encoutered trying\n\t\t// to read the top level directory\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// if the entry is a directory, handle it\n\t\tif d.IsDir() {\n\n\t\t\t// name of the file or directory\n\t\t\tname := d.Name()\n\n\t\t\t// if the directory is a dot return nil\n\t\t\t// this may be the root directory\n\t\t\tif name == \u0026#34;.\u0026#34; || name == \u0026#34;..\u0026#34; {\n\t\t\t\treturn nil\n\t\t\t}\n\n\t\t\t// if the directory name is \u0026#34;testdata\u0026#34;\n\t\t\t// or it starts with \u0026#34;.\u0026#34;\n\t\t\t// or it starts with \u0026#34;_\u0026#34;\n\t\t\t// then return filepath.SkipDir\n\t\t\tif name == \u0026#34;testdata\u0026#34; || strings.HasPrefix(name, \u0026#34;.\u0026#34;) || strings.HasPrefix(name, \u0026#34;_\u0026#34;) {\n\t\t\t\treturn fs.SkipDir\n\t\t\t}\n\n\t\t\treturn nil\n\t\t}\n\n\t\t// append the entry to the list\n\t\tentries = append(entries, path)\n\n\t\t// return nil to tell walk to continue\n\t\treturn nil\n\t})\n\n\treturn entries, err\n}\n\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "skip",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.17:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#SkipDir",
                                                "href": "https://pkg.go.dev/io/fs#SkipDir",
                                                "target": "_blank"
                                              },
                                              "file": "skip",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "skip",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.SkipDir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#SkipDir"
                                            }
                                          ],
                                          {
                                            "text": " to skip directories.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 17,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "Next, in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-18"
                                        },
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-18"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.18",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-18"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we can write a small test that asserts that the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "text": "testdata",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory, and our other special directories, are skipped.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-18",
                                    "type": "listing"
                                  },
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "skip",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "skip/src/tree/demo_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Walk(t *testing.T) {\n\tt.Parallel()\n\n\texp := []string{\n\t\t\"data/a.txt\",\n\t\t\"data/b.txt\",\n\t\t\"data/e/f/g.txt\",\n\t\t\"data/e/f/h.txt\",\n\t\t\"data/e/j.txt\",\n\t}\n\n\tact, err := Walk()\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tes := strings.Join(exp, \", \")\n\tas := strings.Join(act, \", \")\n\n\tif es != as {\n\t\tt.Fatalf(\"expected %s, got %s\", es, as)\n\t}\n}",
                                                "file": "skip/src/tree/demo_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 8,
                                                "end": 33,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "skip",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "skip/src/tree",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "skip",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n--- PASS: Test_Walk (0.00s)\nPASS\nok  \tdemo\t0.399s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/skip/src/tree",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKLS0tIFBBU1M6IFRlc3RfV2FsayAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuMzk5cw==",
                                              "duration": 1618479417,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n--- PASS: Test_Walk (0.00s)\nPASS\nok  \tdemo\t0.399s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/skip/src/tree",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKLS0tIFBBU1M6IFRlc3RfV2FsayAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuMzk5cw==",
                                            "duration": 1618479417,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "skip",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.18:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Asserting special directories are skipped.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 18,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "Finally, when compared to original file listing, we see that the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "skip.md",
                                        "nodes": [
                                          {
                                            "text": "testdata",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory, along with the other special directories, are no longer included in the file listing.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-19",
                                    "type": "listing"
                                  },
                                  "file": "skip.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "tree",
                                          "-a"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "tree -a",
                                          "src": "skip/src/tree/data"
                                        },
                                        "expected_exit": 0,
                                        "file": "skip",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ tree -a\n\n.\n├── .hidden\n│   └── d.txt\n├── a.txt\n├── b.txt\n├── e\n│   ├── f\n│   │   ├── _ignore\n│   │   │   └── i.txt\n│   │   ├── g.txt\n│   │   └── h.txt\n│   └── j.txt\n└── testdata\n    └── c.txt\n\n6 directories, 8 files",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "tree",
                                                "-a"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/skip/src/tree/data",
                                              "stdout": "LgrilJzilIDilIAgLmhpZGRlbgrilILCoMKgIOKUlOKUgOKUgCBkLnR4dArilJzilIDilIAgYS50eHQK4pSc4pSA4pSAIGIudHh0CuKUnOKUgOKUgCBlCuKUgsKgwqAg4pSc4pSA4pSAIGYK4pSCwqDCoCDilILCoMKgIOKUnOKUgOKUgCBfaWdub3JlCuKUgsKgwqAg4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBpLnR4dArilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGcudHh0CuKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgaC50eHQK4pSCwqDCoCDilJTilIDilIAgai50eHQK4pSU4pSA4pSAIHRlc3RkYXRhCiAgICDilJTilIDilIAgYy50eHQKCjYgZGlyZWN0b3JpZXMsIDggZmlsZXM=",
                                              "duration": 555800291,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ tree -a\n\n.\n├── .hidden\n│   └── d.txt\n├── a.txt\n├── b.txt\n├── e\n│   ├── f\n│   │   ├── _ignore\n│   │   │   └── i.txt\n│   │   ├── g.txt\n│   │   └── h.txt\n│   └── j.txt\n└── testdata\n    └── c.txt\n\n6 directories, 8 files",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "tree",
                                              "-a"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/skip/src/tree/data",
                                            "stdout": "LgrilJzilIDilIAgLmhpZGRlbgrilILCoMKgIOKUlOKUgOKUgCBkLnR4dArilJzilIDilIAgYS50eHQK4pSc4pSA4pSAIGIudHh0CuKUnOKUgOKUgCBlCuKUgsKgwqAg4pSc4pSA4pSAIGYK4pSCwqDCoCDilILCoMKgIOKUnOKUgOKUgCBfaWdub3JlCuKUgsKgwqAg4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBpLnR4dArilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGcudHh0CuKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgaC50eHQK4pSCwqDCoCDilJTilIDilIAgai50eHQK4pSU4pSA4pSAIHRlc3RkYXRhCiAgICDilJTilIDilIAgYy50eHQKCjYgZGlyZWN0b3JpZXMsIDggZmlsZXM=",
                                            "duration": 555800291,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "skip",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.19:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Original file listing.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 19,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Skipping Directories and Files",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "mkdir/mkdir.md"
                      },
                      "dir": "mkdir",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "mkdir.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "mkdir.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Creating Directories and Subdirectories",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "Now that we have a working test suite that asserts our ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function returns the correct results, we can remove the hard-coded test data we've been using and generate the test data directly inside the test itself.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "To create a single directory, we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "mkdir.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "mkdir.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": ". The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "mkdir.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": " function creates a single directory at the path specified, and with the specified permissions.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-20",
                                    "type": "listing"
                                  },
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.Mkdir"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.Mkdir",
                                          "exec": "go doc os.Mkdir"
                                        },
                                        "expected_exit": 0,
                                        "file": "mkdir",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.Mkdir\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc Mkdir(name string, perm FileMode) error\n    Mkdir creates a new directory with the specified name and permission bits\n    (before umask). If there is an error, it will be of type *PathError.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.Mkdir"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBNa2RpcihuYW1lIHN0cmluZywgcGVybSBGaWxlTW9kZSkgZXJyb3IKICAgIE1rZGlyIGNyZWF0ZXMgYSBuZXcgZGlyZWN0b3J5IHdpdGggdGhlIHNwZWNpZmllZCBuYW1lIGFuZCBwZXJtaXNzaW9uIGJpdHMKICAgIChiZWZvcmUgdW1hc2spLiBJZiB0aGVyZSBpcyBhbiBlcnJvciwgaXQgd2lsbCBiZSBvZiB0eXBlICpQYXRoRXJyb3Iu",
                                              "duration": 716504166,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.Mkdir\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc Mkdir(name string, perm FileMode) error\n    Mkdir creates a new directory with the specified name and permission bits\n    (before umask). If there is an error, it will be of type *PathError.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.Mkdir"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBNa2RpcihuYW1lIHN0cmluZywgcGVybSBGaWxlTW9kZSkgZXJyb3IKICAgIE1rZGlyIGNyZWF0ZXMgYSBuZXcgZGlyZWN0b3J5IHdpdGggdGhlIHNwZWNpZmllZCBuYW1lIGFuZCBwZXJtaXNzaW9uIGJpdHMKICAgIChiZWZvcmUgdW1hc2spLiBJZiB0aGVyZSBpcyBhbiBlcnJvciwgaXQgd2lsbCBiZSBvZiB0eXBlICpQYXRoRXJyb3Iu",
                                            "duration": 716504166,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "mkdir",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.20:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Mkdir",
                                                "href": "https://pkg.go.dev/os#Mkdir",
                                                "target": "_blank"
                                              },
                                              "file": "mkdir",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "mkdir",
                                                    "nodes": [
                                                      {
                                                        "text": "os.Mkdir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Mkdir"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 20,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "In order to create a directory, we need to provide a set of permissions for the directory. The permissions are specified in the form of an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#FileMode",
                                          "href": "https://pkg.go.dev/os#FileMode",
                                          "target": "_blank"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "mkdir.md",
                                            "nodes": [
                                              {
                                                "text": "os.FileMode",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#FileMode"
                                      }
                                    ],
                                    {
                                      "text": " value, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-21"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-21"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.21",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-21"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". Those familiar with Unix style permissions will feel right at home here being able to use permissions such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "text": "0755",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " to specify the permissions for the directory.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-21",
                                    "type": "listing"
                                  },
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.FileMode"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.FileMode",
                                          "exec": "go doc os.FileMode"
                                        },
                                        "expected_exit": 0,
                                        "file": "mkdir",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.FileMode\n\npackage os // import \u0026#34;os\u0026#34;\n\ntype FileMode = fs.FileMode\n    A FileMode represents a file\u0026#39;s mode and permission bits. The bits have the\n    same definition on all systems, so that information about files can be moved\n    from one system to another portably. Not all bits apply to all systems.\n    The only required bit is ModeDir for directories.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.FileMode"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKdHlwZSBGaWxlTW9kZSA9IGZzLkZpbGVNb2RlCiAgICBBIEZpbGVNb2RlIHJlcHJlc2VudHMgYSBmaWxlJ3MgbW9kZSBhbmQgcGVybWlzc2lvbiBiaXRzLiBUaGUgYml0cyBoYXZlIHRoZQogICAgc2FtZSBkZWZpbml0aW9uIG9uIGFsbCBzeXN0ZW1zLCBzbyB0aGF0IGluZm9ybWF0aW9uIGFib3V0IGZpbGVzIGNhbiBiZSBtb3ZlZAogICAgZnJvbSBvbmUgc3lzdGVtIHRvIGFub3RoZXIgcG9ydGFibHkuIE5vdCBhbGwgYml0cyBhcHBseSB0byBhbGwgc3lzdGVtcy4KICAgIFRoZSBvbmx5IHJlcXVpcmVkIGJpdCBpcyBNb2RlRGlyIGZvciBkaXJlY3Rvcmllcy4=",
                                              "duration": 674547459,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.FileMode\n\npackage os // import \u0026#34;os\u0026#34;\n\ntype FileMode = fs.FileMode\n    A FileMode represents a file\u0026#39;s mode and permission bits. The bits have the\n    same definition on all systems, so that information about files can be moved\n    from one system to another portably. Not all bits apply to all systems.\n    The only required bit is ModeDir for directories.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.FileMode"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKdHlwZSBGaWxlTW9kZSA9IGZzLkZpbGVNb2RlCiAgICBBIEZpbGVNb2RlIHJlcHJlc2VudHMgYSBmaWxlJ3MgbW9kZSBhbmQgcGVybWlzc2lvbiBiaXRzLiBUaGUgYml0cyBoYXZlIHRoZQogICAgc2FtZSBkZWZpbml0aW9uIG9uIGFsbCBzeXN0ZW1zLCBzbyB0aGF0IGluZm9ybWF0aW9uIGFib3V0IGZpbGVzIGNhbiBiZSBtb3ZlZAogICAgZnJvbSBvbmUgc3lzdGVtIHRvIGFub3RoZXIgcG9ydGFibHkuIE5vdCBhbGwgYml0cyBhcHBseSB0byBhbGwgc3lzdGVtcy4KICAgIFRoZSBvbmx5IHJlcXVpcmVkIGJpdCBpcyBNb2RlRGlyIGZvciBkaXJlY3Rvcmllcy4=",
                                            "duration": 674547459,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "mkdir",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.21:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#FileMode",
                                                "href": "https://pkg.go.dev/os#FileMode",
                                                "target": "_blank"
                                              },
                                              "file": "mkdir",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "mkdir",
                                                    "nodes": [
                                                      {
                                                        "text": "os.FileMode",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#FileMode"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 21,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-22"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-22"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.22",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-22"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we can create a helper that will generate all of the files for us. In this helper we first remove any previous test data that may have been left behind from a previous test run, by using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#RemoveAll",
                                          "href": "https://pkg.go.dev/os#RemoveAll",
                                          "target": "_blank"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "mkdir.md",
                                            "nodes": [
                                              {
                                                "text": "os.RemoveAll",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#RemoveAll"
                                      }
                                    ],
                                    {
                                      "text": " function. This will delete the directory at the path specified, and all of its contents, including any subdirectories.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-22",
                                    "type": "listing"
                                  },
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "mkdir",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "mkdir/src/mkdir/demo_test.go#helper"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func createTestData(t testing.TB) {\n\tt.Helper()\n\n\t// remove any previous test data\n\tif err := os.RemoveAll(\"data\"); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// create the data directory\n\tif err := os.Mkdir(\"data\", 0755); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tlist := []string{\n\t\t\"data/.hidden/d.txt\",\n\t\t\"data/a.txt\",\n\t\t\"data/b.txt\",\n\t\t\"data/e/f/_ignore/i.txt\",\n\t\t\"data/e/f/g.txt\",\n\t\t\"data/e/f/h.txt\",\n\t\t\"data/e/j.txt\",\n\t\t\"data/testdata/c.txt\",\n\t}\n\n\t// create the test data files\n\tfor _, path := range list {\n\t\tfmt.Println(\"creating:\", path)\n\t\tif err := os.Mkdir(path, 0755); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\n\t}\n\n}",
                                                "file": "mkdir/src/mkdir/demo_test.go",
                                                "lang": "go",
                                                "name": "helper",
                                                "start": 10,
                                                "end": 46,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "mkdir",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.22:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Mkdir",
                                                "href": "https://pkg.go.dev/os#Mkdir",
                                                "target": "_blank"
                                              },
                                              "file": "mkdir",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "mkdir",
                                                    "nodes": [
                                                      {
                                                        "text": "os.Mkdir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Mkdir"
                                            }
                                          ],
                                          {
                                            "text": " to create directories on disk.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 22,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "Next we use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "mkdir.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": " function to create the parent ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory, giving it the permissions ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "text": "0755",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " which will allow us to read and write to the directory.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "Finally, we loop over a list of files and directories that we want to create, and create each one using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "mkdir.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": " function.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from the test output in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-23"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-23"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.23",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-23"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", this approach isn't working as expected. We run into errors trying to create the necessary files and directories. The biggest problem is that we are trying to use ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "mkdir.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "mkdir.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": " to create files instead of directories.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-23",
                                    "type": "listing"
                                  },
                                  "file": "mkdir.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "mkdir/src/mkdir",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "mkdir",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden/d.txt\n    demo_test.go:52: mkdir data/.hidden/d.txt: no such file or directory\n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.281s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/mkdir/src/mkdir",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbi9kLnR4dAogICAgZGVtb190ZXN0LmdvOjUyOiBta2RpciBkYXRhLy5oaWRkZW4vZC50eHQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkKLS0tIEZBSUw6IFRlc3RfV2FsayAoMC4wMHMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMC4yODFz",
                                              "duration": 835126875,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden/d.txt\n    demo_test.go:52: mkdir data/.hidden/d.txt: no such file or directory\n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.281s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/mkdir/src/mkdir",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbi9kLnR4dAogICAgZGVtb190ZXN0LmdvOjUyOiBta2RpciBkYXRhLy5oaWRkZW4vZC50eHQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkKLS0tIEZBSUw6IFRlc3RfV2FsayAoMC4wMHMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMC4yODFz",
                                            "duration": 835126875,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "mkdir",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.23:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Error using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Mkdir",
                                                "href": "https://pkg.go.dev/os#Mkdir",
                                                "target": "_blank"
                                              },
                                              "file": "mkdir",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "mkdir",
                                                    "nodes": [
                                                      {
                                                        "text": "os.Mkdir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Mkdir"
                                            }
                                          ],
                                          {
                                            "text": " to create files.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 23,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Creating Directories and Subdirectories",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "fphelpers/fphelpers.md"
                      },
                      "dir": "fphelpers",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "fphelpers.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "fphelpers.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "File Path Helpers",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath",
                                          "href": "https://pkg.go.dev/filepath",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "filepath",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath"
                                      }
                                    ],
                                    {
                                      "text": " package, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-24"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-24"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.24",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-24"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", provides a number of functions that help us manipulate file paths.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-24",
                                    "type": "listing"
                                  },
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "-short",
                                          "filepath"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "-short filepath",
                                          "exec": "go doc -short filepath"
                                        },
                                        "expected_exit": 0,
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc -short filepath\n\nconst Separator = os.PathSeparator ...\nvar ErrBadPattern = errors.New(\u0026#34;syntax error in pattern\u0026#34;)\nvar SkipAll error = fs.SkipAll\nvar SkipDir error = fs.SkipDir\nfunc Abs(path string) (string, error)\nfunc Base(path string) string\nfunc Clean(path string) string\nfunc Dir(path string) string\nfunc EvalSymlinks(path string) (string, error)\nfunc Ext(path string) string\nfunc FromSlash(path string) string\nfunc Glob(pattern string) (matches []string, err error)\nfunc HasPrefix(p, prefix string) bool\nfunc IsAbs(path string) bool\nfunc IsLocal(path string) bool\nfunc Join(elem ...string) string\nfunc Match(pattern, name string) (matched bool, err error)\nfunc Rel(basepath, targpath string) (string, error)\nfunc Split(path string) (dir, file string)\nfunc SplitList(path string) []string\nfunc ToSlash(path string) string\nfunc VolumeName(path string) string\nfunc Walk(root string, fn WalkFunc) error\nfunc WalkDir(root string, fn fs.WalkDirFunc) error\ntype WalkFunc func(path string, info fs.FileInfo, err error) error",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "-short",
                                                "filepath"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "Y29uc3QgU2VwYXJhdG9yID0gb3MuUGF0aFNlcGFyYXRvciAuLi4KdmFyIEVyckJhZFBhdHRlcm4gPSBlcnJvcnMuTmV3KCJzeW50YXggZXJyb3IgaW4gcGF0dGVybiIpCnZhciBTa2lwQWxsIGVycm9yID0gZnMuU2tpcEFsbAp2YXIgU2tpcERpciBlcnJvciA9IGZzLlNraXBEaXIKZnVuYyBBYnMocGF0aCBzdHJpbmcpIChzdHJpbmcsIGVycm9yKQpmdW5jIEJhc2UocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIENsZWFuKHBhdGggc3RyaW5nKSBzdHJpbmcKZnVuYyBEaXIocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIEV2YWxTeW1saW5rcyhwYXRoIHN0cmluZykgKHN0cmluZywgZXJyb3IpCmZ1bmMgRXh0KHBhdGggc3RyaW5nKSBzdHJpbmcKZnVuYyBGcm9tU2xhc2gocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIEdsb2IocGF0dGVybiBzdHJpbmcpIChtYXRjaGVzIFtdc3RyaW5nLCBlcnIgZXJyb3IpCmZ1bmMgSGFzUHJlZml4KHAsIHByZWZpeCBzdHJpbmcpIGJvb2wKZnVuYyBJc0FicyhwYXRoIHN0cmluZykgYm9vbApmdW5jIElzTG9jYWwocGF0aCBzdHJpbmcpIGJvb2wKZnVuYyBKb2luKGVsZW0gLi4uc3RyaW5nKSBzdHJpbmcKZnVuYyBNYXRjaChwYXR0ZXJuLCBuYW1lIHN0cmluZykgKG1hdGNoZWQgYm9vbCwgZXJyIGVycm9yKQpmdW5jIFJlbChiYXNlcGF0aCwgdGFyZ3BhdGggc3RyaW5nKSAoc3RyaW5nLCBlcnJvcikKZnVuYyBTcGxpdChwYXRoIHN0cmluZykgKGRpciwgZmlsZSBzdHJpbmcpCmZ1bmMgU3BsaXRMaXN0KHBhdGggc3RyaW5nKSBbXXN0cmluZwpmdW5jIFRvU2xhc2gocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIFZvbHVtZU5hbWUocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIFdhbGsocm9vdCBzdHJpbmcsIGZuIFdhbGtGdW5jKSBlcnJvcgpmdW5jIFdhbGtEaXIocm9vdCBzdHJpbmcsIGZuIGZzLldhbGtEaXJGdW5jKSBlcnJvcgp0eXBlIFdhbGtGdW5jIGZ1bmMocGF0aCBzdHJpbmcsIGluZm8gZnMuRmlsZUluZm8sIGVyciBlcnJvcikgZXJyb3I=",
                                              "duration": 451564541,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc -short filepath\n\nconst Separator = os.PathSeparator ...\nvar ErrBadPattern = errors.New(\u0026#34;syntax error in pattern\u0026#34;)\nvar SkipAll error = fs.SkipAll\nvar SkipDir error = fs.SkipDir\nfunc Abs(path string) (string, error)\nfunc Base(path string) string\nfunc Clean(path string) string\nfunc Dir(path string) string\nfunc EvalSymlinks(path string) (string, error)\nfunc Ext(path string) string\nfunc FromSlash(path string) string\nfunc Glob(pattern string) (matches []string, err error)\nfunc HasPrefix(p, prefix string) bool\nfunc IsAbs(path string) bool\nfunc IsLocal(path string) bool\nfunc Join(elem ...string) string\nfunc Match(pattern, name string) (matched bool, err error)\nfunc Rel(basepath, targpath string) (string, error)\nfunc Split(path string) (dir, file string)\nfunc SplitList(path string) []string\nfunc ToSlash(path string) string\nfunc VolumeName(path string) string\nfunc Walk(root string, fn WalkFunc) error\nfunc WalkDir(root string, fn fs.WalkDirFunc) error\ntype WalkFunc func(path string, info fs.FileInfo, err error) error",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "-short",
                                              "filepath"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "Y29uc3QgU2VwYXJhdG9yID0gb3MuUGF0aFNlcGFyYXRvciAuLi4KdmFyIEVyckJhZFBhdHRlcm4gPSBlcnJvcnMuTmV3KCJzeW50YXggZXJyb3IgaW4gcGF0dGVybiIpCnZhciBTa2lwQWxsIGVycm9yID0gZnMuU2tpcEFsbAp2YXIgU2tpcERpciBlcnJvciA9IGZzLlNraXBEaXIKZnVuYyBBYnMocGF0aCBzdHJpbmcpIChzdHJpbmcsIGVycm9yKQpmdW5jIEJhc2UocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIENsZWFuKHBhdGggc3RyaW5nKSBzdHJpbmcKZnVuYyBEaXIocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIEV2YWxTeW1saW5rcyhwYXRoIHN0cmluZykgKHN0cmluZywgZXJyb3IpCmZ1bmMgRXh0KHBhdGggc3RyaW5nKSBzdHJpbmcKZnVuYyBGcm9tU2xhc2gocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIEdsb2IocGF0dGVybiBzdHJpbmcpIChtYXRjaGVzIFtdc3RyaW5nLCBlcnIgZXJyb3IpCmZ1bmMgSGFzUHJlZml4KHAsIHByZWZpeCBzdHJpbmcpIGJvb2wKZnVuYyBJc0FicyhwYXRoIHN0cmluZykgYm9vbApmdW5jIElzTG9jYWwocGF0aCBzdHJpbmcpIGJvb2wKZnVuYyBKb2luKGVsZW0gLi4uc3RyaW5nKSBzdHJpbmcKZnVuYyBNYXRjaChwYXR0ZXJuLCBuYW1lIHN0cmluZykgKG1hdGNoZWQgYm9vbCwgZXJyIGVycm9yKQpmdW5jIFJlbChiYXNlcGF0aCwgdGFyZ3BhdGggc3RyaW5nKSAoc3RyaW5nLCBlcnJvcikKZnVuYyBTcGxpdChwYXRoIHN0cmluZykgKGRpciwgZmlsZSBzdHJpbmcpCmZ1bmMgU3BsaXRMaXN0KHBhdGggc3RyaW5nKSBbXXN0cmluZwpmdW5jIFRvU2xhc2gocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIFZvbHVtZU5hbWUocGF0aCBzdHJpbmcpIHN0cmluZwpmdW5jIFdhbGsocm9vdCBzdHJpbmcsIGZuIFdhbGtGdW5jKSBlcnJvcgpmdW5jIFdhbGtEaXIocm9vdCBzdHJpbmcsIGZuIGZzLldhbGtEaXJGdW5jKSBlcnJvcgp0eXBlIFdhbGtGdW5jIGZ1bmMocGF0aCBzdHJpbmcsIGluZm8gZnMuRmlsZUluZm8sIGVyciBlcnJvcikgZXJyb3I=",
                                            "duration": 451564541,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.24:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "filepath",
                                                "href": "https://pkg.go.dev/filepath",
                                                "target": "_blank"
                                              },
                                              "file": "fphelpers",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fphelpers",
                                                    "nodes": [
                                                      {
                                                        "text": "filepath",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/filepath"
                                            }
                                          ],
                                          {
                                            "text": " package.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 24,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "There are three functions in particular that are going to be useful to us in our test suite. These are ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Dir",
                                          "href": "https://pkg.go.dev/filepath#Dir",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Dir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Dir"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Base",
                                          "href": "https://pkg.go.dev/filepath#Base",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Base",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Base"
                                      }
                                    ],
                                    {
                                      "text": ", and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Ext",
                                          "href": "https://pkg.go.dev/filepath#Ext",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Ext",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Ext"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fphelpers.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Getting a File's Extension",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "When presented with a file path in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " form, such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "/path/to/file.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", we need to be able to tell if the path is a file or a directory. The easiest, although not without potential errors, way to do this is to check if the path has a file extension. If it does then we can assume the path to be a file, and if it doesn't then we can assume the path to be a directory. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Ext",
                                          "href": "https://pkg.go.dev/filepath#Ext",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Ext",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Ext"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-25"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-25"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.25",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-25"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", will return the file extension of a file path. If the path is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "/path/to/file.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " then the function will return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": ".txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-25",
                                    "type": "listing"
                                  },
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "filepath.Ext"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "filepath.Ext",
                                          "exec": "go doc filepath.Ext"
                                        },
                                        "expected_exit": 0,
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc filepath.Ext\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc Ext(path string) string\n    Ext returns the file name extension used by path. The extension is the\n    suffix beginning at the final dot in the final element of path; it is empty\n    if there is no dot.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "filepath.Ext"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIEV4dChwYXRoIHN0cmluZykgc3RyaW5nCiAgICBFeHQgcmV0dXJucyB0aGUgZmlsZSBuYW1lIGV4dGVuc2lvbiB1c2VkIGJ5IHBhdGguIFRoZSBleHRlbnNpb24gaXMgdGhlCiAgICBzdWZmaXggYmVnaW5uaW5nIGF0IHRoZSBmaW5hbCBkb3QgaW4gdGhlIGZpbmFsIGVsZW1lbnQgb2YgcGF0aDsgaXQgaXMgZW1wdHkKICAgIGlmIHRoZXJlIGlzIG5vIGRvdC4=",
                                              "duration": 317446334,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc filepath.Ext\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc Ext(path string) string\n    Ext returns the file name extension used by path. The extension is the\n    suffix beginning at the final dot in the final element of path; it is empty\n    if there is no dot.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "filepath.Ext"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIEV4dChwYXRoIHN0cmluZykgc3RyaW5nCiAgICBFeHQgcmV0dXJucyB0aGUgZmlsZSBuYW1lIGV4dGVuc2lvbiB1c2VkIGJ5IHBhdGguIFRoZSBleHRlbnNpb24gaXMgdGhlCiAgICBzdWZmaXggYmVnaW5uaW5nIGF0IHRoZSBmaW5hbCBkb3QgaW4gdGhlIGZpbmFsIGVsZW1lbnQgb2YgcGF0aDsgaXQgaXMgZW1wdHkKICAgIGlmIHRoZXJlIGlzIG5vIGRvdC4=",
                                            "duration": 317446334,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.25:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "filepath#Ext",
                                                "href": "https://pkg.go.dev/filepath#Ext",
                                                "target": "_blank"
                                              },
                                              "file": "fphelpers",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fphelpers",
                                                    "nodes": [
                                                      {
                                                        "text": "filepath.Ext",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/filepath#Ext"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 25,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fphelpers.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Getting a File's Directory",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "If the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Ext",
                                          "href": "https://pkg.go.dev/filepath#Ext",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Ext",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Ext"
                                      }
                                    ],
                                    {
                                      "text": " function returns an extensions, such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": ".txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", then we can assume the path is a file. To get the directory of a file, we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Dir",
                                          "href": "https://pkg.go.dev/filepath#Dir",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Dir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Dir"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-26"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-26"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.26",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-26"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". If the path is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "/path/to/file.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " then the function will return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "/path/to",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-26",
                                    "type": "listing"
                                  },
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "filepath.Dir"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "filepath.Dir",
                                          "exec": "go doc filepath.Dir"
                                        },
                                        "expected_exit": 0,
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc filepath.Dir\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc Dir(path string) string\n    Dir returns all but the last element of path, typically the path\u0026#39;s\n    directory. After dropping the final element, Dir calls Clean on the path and\n    trailing slashes are removed. If the path is empty, Dir returns \u0026#34;.\u0026#34;. If the\n    path consists entirely of separators, Dir returns a single separator. The\n    returned path does not end in a separator unless it is the root directory.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "filepath.Dir"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIERpcihwYXRoIHN0cmluZykgc3RyaW5nCiAgICBEaXIgcmV0dXJucyBhbGwgYnV0IHRoZSBsYXN0IGVsZW1lbnQgb2YgcGF0aCwgdHlwaWNhbGx5IHRoZSBwYXRoJ3MKICAgIGRpcmVjdG9yeS4gQWZ0ZXIgZHJvcHBpbmcgdGhlIGZpbmFsIGVsZW1lbnQsIERpciBjYWxscyBDbGVhbiBvbiB0aGUgcGF0aCBhbmQKICAgIHRyYWlsaW5nIHNsYXNoZXMgYXJlIHJlbW92ZWQuIElmIHRoZSBwYXRoIGlzIGVtcHR5LCBEaXIgcmV0dXJucyAiLiIuIElmIHRoZQogICAgcGF0aCBjb25zaXN0cyBlbnRpcmVseSBvZiBzZXBhcmF0b3JzLCBEaXIgcmV0dXJucyBhIHNpbmdsZSBzZXBhcmF0b3IuIFRoZQogICAgcmV0dXJuZWQgcGF0aCBkb2VzIG5vdCBlbmQgaW4gYSBzZXBhcmF0b3IgdW5sZXNzIGl0IGlzIHRoZSByb290IGRpcmVjdG9yeS4=",
                                              "duration": 114476208,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc filepath.Dir\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc Dir(path string) string\n    Dir returns all but the last element of path, typically the path\u0026#39;s\n    directory. After dropping the final element, Dir calls Clean on the path and\n    trailing slashes are removed. If the path is empty, Dir returns \u0026#34;.\u0026#34;. If the\n    path consists entirely of separators, Dir returns a single separator. The\n    returned path does not end in a separator unless it is the root directory.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "filepath.Dir"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIERpcihwYXRoIHN0cmluZykgc3RyaW5nCiAgICBEaXIgcmV0dXJucyBhbGwgYnV0IHRoZSBsYXN0IGVsZW1lbnQgb2YgcGF0aCwgdHlwaWNhbGx5IHRoZSBwYXRoJ3MKICAgIGRpcmVjdG9yeS4gQWZ0ZXIgZHJvcHBpbmcgdGhlIGZpbmFsIGVsZW1lbnQsIERpciBjYWxscyBDbGVhbiBvbiB0aGUgcGF0aCBhbmQKICAgIHRyYWlsaW5nIHNsYXNoZXMgYXJlIHJlbW92ZWQuIElmIHRoZSBwYXRoIGlzIGVtcHR5LCBEaXIgcmV0dXJucyAiLiIuIElmIHRoZQogICAgcGF0aCBjb25zaXN0cyBlbnRpcmVseSBvZiBzZXBhcmF0b3JzLCBEaXIgcmV0dXJucyBhIHNpbmdsZSBzZXBhcmF0b3IuIFRoZQogICAgcmV0dXJuZWQgcGF0aCBkb2VzIG5vdCBlbmQgaW4gYSBzZXBhcmF0b3IgdW5sZXNzIGl0IGlzIHRoZSByb290IGRpcmVjdG9yeS4=",
                                            "duration": 114476208,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.26:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "filepath#Dir",
                                                "href": "https://pkg.go.dev/filepath#Dir",
                                                "target": "_blank"
                                              },
                                              "file": "fphelpers",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fphelpers",
                                                    "nodes": [
                                                      {
                                                        "text": "filepath.Dir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/filepath#Dir"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 26,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fphelpers.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Getting a File/Directory's Name",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "Whether our path has an extension or not, it does have a \"base\" name. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Base",
                                          "href": "https://pkg.go.dev/filepath#Base",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Base",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Base"
                                      }
                                    ],
                                    {
                                      "text": " function can be used to return the name of the file, or directory, at the end of the file path. For example, if the path is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "/path/to/file.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " then \"base\" name would be ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "file.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". If the path is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "/path/to/dir",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " then the \"base\" name would be ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "dir",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-27",
                                    "type": "listing"
                                  },
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "filepath.Base"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "filepath.Base",
                                          "exec": "go doc filepath.Base"
                                        },
                                        "expected_exit": 0,
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc filepath.Base\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc Base(path string) string\n    Base returns the last element of path. Trailing path separators are removed\n    before extracting the last element. If the path is empty, Base returns \u0026#34;.\u0026#34;.\n    If the path consists entirely of separators, Base returns a single\n    separator.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "filepath.Base"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIEJhc2UocGF0aCBzdHJpbmcpIHN0cmluZwogICAgQmFzZSByZXR1cm5zIHRoZSBsYXN0IGVsZW1lbnQgb2YgcGF0aC4gVHJhaWxpbmcgcGF0aCBzZXBhcmF0b3JzIGFyZSByZW1vdmVkCiAgICBiZWZvcmUgZXh0cmFjdGluZyB0aGUgbGFzdCBlbGVtZW50LiBJZiB0aGUgcGF0aCBpcyBlbXB0eSwgQmFzZSByZXR1cm5zICIuIi4KICAgIElmIHRoZSBwYXRoIGNvbnNpc3RzIGVudGlyZWx5IG9mIHNlcGFyYXRvcnMsIEJhc2UgcmV0dXJucyBhIHNpbmdsZQogICAgc2VwYXJhdG9yLg==",
                                              "duration": 303147959,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc filepath.Base\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc Base(path string) string\n    Base returns the last element of path. Trailing path separators are removed\n    before extracting the last element. If the path is empty, Base returns \u0026#34;.\u0026#34;.\n    If the path consists entirely of separators, Base returns a single\n    separator.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "filepath.Base"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIEJhc2UocGF0aCBzdHJpbmcpIHN0cmluZwogICAgQmFzZSByZXR1cm5zIHRoZSBsYXN0IGVsZW1lbnQgb2YgcGF0aC4gVHJhaWxpbmcgcGF0aCBzZXBhcmF0b3JzIGFyZSByZW1vdmVkCiAgICBiZWZvcmUgZXh0cmFjdGluZyB0aGUgbGFzdCBlbGVtZW50LiBJZiB0aGUgcGF0aCBpcyBlbXB0eSwgQmFzZSByZXR1cm5zICIuIi4KICAgIElmIHRoZSBwYXRoIGNvbnNpc3RzIGVudGlyZWx5IG9mIHNlcGFyYXRvcnMsIEJhc2UgcmV0dXJucyBhIHNpbmdsZQogICAgc2VwYXJhdG9yLg==",
                                            "duration": 303147959,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.27:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "filepath#Base",
                                                "href": "https://pkg.go.dev/filepath#Base",
                                                "target": "_blank"
                                              },
                                              "file": "fphelpers",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fphelpers",
                                                    "nodes": [
                                                      {
                                                        "text": "filepath.Base",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/filepath#Base"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 27,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fphelpers.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Using File Path Helpers",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "Now that we know how to find the directory, base, and extension of a file path, we can use these functions to update our helper to create ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "strong",
                                      "file": "fphelpers.md",
                                      "nodes": [
                                        {
                                          "text": "only",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " directories, and not files.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-28",
                                    "type": "listing"
                                  },
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fphelpers",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "fphelpers/src/tree/demo_test.go#helper"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func createTestData(t testing.TB) {\n\tt.Helper()\n\n\t// remove any previous test data\n\tif err := os.RemoveAll(\"data\"); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// create the data directory\n\tif err := os.Mkdir(\"data\", 0755); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tlist := []string{\n\t\t\"data/.hidden/d.txt\",\n\t\t\"data/a.txt\",\n\t\t\"data/b.txt\",\n\t\t\"data/e/f/_ignore/i.txt\",\n\t\t\"data/e/f/g.txt\",\n\t\t\"data/e/f/h.txt\",\n\t\t\"data/e/j.txt\",\n\t\t\"data/testdata/c.txt\",\n\t}\n\n\t// create the test data files\n\tfor _, path := range list {\n\t\tif ext := filepath.Ext(path); len(ext) \u003e 0 {\n\t\t\tpath = filepath.Dir(path)\n\t\t}\n\n\t\tfmt.Println(\"creating:\", path)\n\t\tif err := os.Mkdir(path, 0755); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\n\t}\n\n}",
                                                "file": "fphelpers/src/tree/demo_test.go",
                                                "lang": "go",
                                                "name": "helper",
                                                "start": 11,
                                                "end": 51,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.28:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Helper function to create test folder, and file, structures.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 28,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "When we look at the test output, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-29"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-29"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.29",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-29"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", however, we can see that the helper function is still not working as expected. It is trying to create a directory, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", that already exists.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-29",
                                    "type": "listing"
                                  },
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "fphelpers/src/tree",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden\ncreating: data\n    demo_test.go:57: mkdir data: file exists\n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.532s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fphelpers/src/tree",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbgpjcmVhdGluZzogZGF0YQogICAgZGVtb190ZXN0LmdvOjU3OiBta2RpciBkYXRhOiBmaWxlIGV4aXN0cwotLS0gRkFJTDogVGVzdF9XYWxrICgwLjAwcykKRkFJTApleGl0IHN0YXR1cyAxCkZBSUwJZGVtbwkwLjUzMnM=",
                                              "duration": 1974721167,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden\ncreating: data\n    demo_test.go:57: mkdir data: file exists\n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.532s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fphelpers/src/tree",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbgpjcmVhdGluZzogZGF0YQogICAgZGVtb190ZXN0LmdvOjU3OiBta2RpciBkYXRhOiBmaWxlIGV4aXN0cwotLS0gRkFJTDogVGVzdF9XYWxrICgwLjAwcykKRkFJTApleGl0IHN0YXR1cyAxCkZBSUwJZGVtbwkwLjUzMnM=",
                                            "duration": 1974721167,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.29:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Test output.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 29,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fphelpers.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Checking the Error",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "To try and fix our helper we should properly check the error returned by the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": " function. If the error is not nil, we need to check if the error is because the directory already exists. If it is, then we can ignore the error and continue. If the error is something else, then we need to return the error to the caller.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-30",
                                    "type": "listing"
                                  },
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fphelpers",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "fphelpers/src/errcheck/demo_test.go#helper"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func createTestData(t testing.TB) {\n\tt.Helper()\n\n\t// remove any previous test data\n\tif err := os.RemoveAll(\"data\"); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// create the data directory\n\tif err := os.Mkdir(\"data\", 0755); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tlist := []string{\n\t\t\"data/.hidden/d.txt\",\n\t\t\"data/a.txt\",\n\t\t\"data/b.txt\",\n\t\t\"data/e/f/_ignore/i.txt\",\n\t\t\"data/e/f/g.txt\",\n\t\t\"data/e/f/h.txt\",\n\t\t\"data/e/j.txt\",\n\t\t\"data/testdata/c.txt\",\n\t}\n\n\t// create the test data files\n\tfor _, path := range list {\n\t\tif ext := filepath.Ext(path); len(ext) \u003e 0 {\n\t\t\tpath = filepath.Dir(path)\n\t\t}\n\n\t\tfmt.Println(\"creating:\", path)\n\t\tif err := os.Mkdir(path, 0755); err != nil {\n\t\t\t// ignore if the directory already exists\n\t\t\tif !errors.Is(err, fs.ErrExist) {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t}\n\n\t}\n\n}",
                                                "file": "fphelpers/src/errcheck/demo_test.go",
                                                "lang": "go",
                                                "name": "helper",
                                                "start": 13,
                                                "end": 56,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.30:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Helper function to check for error.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 30,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "Now when we look at the test output, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-31"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-31"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.31",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-31"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we can see that the helper function is still not working as expected, but we have moved beyond the first error to a new one. We are trying to create nested sub-directories, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "text": "data/e/f/_ignore",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "fphelpers.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fphelpers.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": " function which is designed to only create one directory at a time.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-31",
                                    "type": "listing"
                                  },
                                  "file": "fphelpers.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "fphelpers/src/errcheck",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden\ncreating: data\ncreating: data\ncreating: data/e/f/_ignore\n    demo_test.go:62: mkdir data/e/f/_ignore: no such file or directory\n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.598s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fphelpers/src/errcheck",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbgpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YS9lL2YvX2lnbm9yZQogICAgZGVtb190ZXN0LmdvOjYyOiBta2RpciBkYXRhL2UvZi9faWdub3JlOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5Ci0tLSBGQUlMOiBUZXN0X1dhbGsgKDAuMDBzKQpGQUlMCmV4aXQgc3RhdHVzIDEKRkFJTAlkZW1vCTAuNTk4cw==",
                                              "duration": 1284591667,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden\ncreating: data\ncreating: data\ncreating: data/e/f/_ignore\n    demo_test.go:62: mkdir data/e/f/_ignore: no such file or directory\n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.598s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fphelpers/src/errcheck",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbgpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YS9lL2YvX2lnbm9yZQogICAgZGVtb190ZXN0LmdvOjYyOiBta2RpciBkYXRhL2UvZi9faWdub3JlOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5Ci0tLSBGQUlMOiBUZXN0X1dhbGsgKDAuMDBzKQpGQUlMCmV4aXQgc3RhdHVzIDEKRkFJTAlkZW1vCTAuNTk4cw==",
                                            "duration": 1284591667,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fphelpers",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.31:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "errors#Is",
                                                "href": "https://pkg.go.dev/errors#Is",
                                                "target": "_blank"
                                              },
                                              "file": "fphelpers",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fphelpers",
                                                    "nodes": [
                                                      {
                                                        "text": "errors.Is",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/errors#Is"
                                            }
                                          ],
                                          {
                                            "text": " to check for the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#ErrExit",
                                                "href": "https://pkg.go.dev/io/fs#ErrExit",
                                                "target": "_blank"
                                              },
                                              "file": "fphelpers",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fphelpers",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.ErrExit",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#ErrExit"
                                            }
                                          ],
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#error",
                                                "href": "https://pkg.go.dev/builtin#error",
                                                "target": "_blank"
                                              },
                                              "file": "fphelpers",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fphelpers",
                                                    "nodes": [
                                                      {
                                                        "text": "error",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#error"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 31,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "File Path Helpers",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "walk/mkdirall.md"
                      },
                      "dir": "walk",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "walk/mkdirall.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "walk/mkdirall.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Creating Multiple Directories",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/mkdirall.md",
                                  "nodes": [
                                    {
                                      "text": "To create multiple directories at once we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#MkdirAll",
                                          "href": "https://pkg.go.dev/os#MkdirAll",
                                          "target": "_blank"
                                        },
                                        "file": "walk/mkdirall.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk/mkdirall.md",
                                            "nodes": [
                                              {
                                                "text": "os.MkdirAll",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#MkdirAll"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-32"
                                        },
                                        "file": "walk/mkdirall.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-32"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.32",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-32"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". This behaves identically to ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "walk/mkdirall.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk/mkdirall.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": " except that it creates all the directories in the path.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-32",
                                    "type": "listing"
                                  },
                                  "file": "walk/mkdirall.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.MkdirAll"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.MkdirAll",
                                          "exec": "go doc os.MkdirAll"
                                        },
                                        "expected_exit": 0,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.MkdirAll\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc MkdirAll(path string, perm FileMode) error\n    MkdirAll creates a directory named path, along with any necessary parents,\n    and returns nil, or else returns an error. The permission bits perm (before\n    umask) are used for all directories that MkdirAll creates. If path is\n    already a directory, MkdirAll does nothing and returns nil.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.MkdirAll"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBNa2RpckFsbChwYXRoIHN0cmluZywgcGVybSBGaWxlTW9kZSkgZXJyb3IKICAgIE1rZGlyQWxsIGNyZWF0ZXMgYSBkaXJlY3RvcnkgbmFtZWQgcGF0aCwgYWxvbmcgd2l0aCBhbnkgbmVjZXNzYXJ5IHBhcmVudHMsCiAgICBhbmQgcmV0dXJucyBuaWwsIG9yIGVsc2UgcmV0dXJucyBhbiBlcnJvci4gVGhlIHBlcm1pc3Npb24gYml0cyBwZXJtIChiZWZvcmUKICAgIHVtYXNrKSBhcmUgdXNlZCBmb3IgYWxsIGRpcmVjdG9yaWVzIHRoYXQgTWtkaXJBbGwgY3JlYXRlcy4gSWYgcGF0aCBpcwogICAgYWxyZWFkeSBhIGRpcmVjdG9yeSwgTWtkaXJBbGwgZG9lcyBub3RoaW5nIGFuZCByZXR1cm5zIG5pbC4=",
                                              "duration": 368989125,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.MkdirAll\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc MkdirAll(path string, perm FileMode) error\n    MkdirAll creates a directory named path, along with any necessary parents,\n    and returns nil, or else returns an error. The permission bits perm (before\n    umask) are used for all directories that MkdirAll creates. If path is\n    already a directory, MkdirAll does nothing and returns nil.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.MkdirAll"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBNa2RpckFsbChwYXRoIHN0cmluZywgcGVybSBGaWxlTW9kZSkgZXJyb3IKICAgIE1rZGlyQWxsIGNyZWF0ZXMgYSBkaXJlY3RvcnkgbmFtZWQgcGF0aCwgYWxvbmcgd2l0aCBhbnkgbmVjZXNzYXJ5IHBhcmVudHMsCiAgICBhbmQgcmV0dXJucyBuaWwsIG9yIGVsc2UgcmV0dXJucyBhbiBlcnJvci4gVGhlIHBlcm1pc3Npb24gYml0cyBwZXJtIChiZWZvcmUKICAgIHVtYXNrKSBhcmUgdXNlZCBmb3IgYWxsIGRpcmVjdG9yaWVzIHRoYXQgTWtkaXJBbGwgY3JlYXRlcy4gSWYgcGF0aCBpcwogICAgYWxyZWFkeSBhIGRpcmVjdG9yeSwgTWtkaXJBbGwgZG9lcyBub3RoaW5nIGFuZCByZXR1cm5zIG5pbC4=",
                                            "duration": 368989125,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.32:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#MkdirAll",
                                                "href": "https://pkg.go.dev/os#MkdirAll",
                                                "target": "_blank"
                                              },
                                              "file": "walk",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "walk",
                                                    "nodes": [
                                                      {
                                                        "text": "os.MkdirAll",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#MkdirAll"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 32,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/mkdirall.md",
                                  "nodes": [
                                    {
                                      "text": "We can update our test helper to use ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#MkdirAll",
                                          "href": "https://pkg.go.dev/os#MkdirAll",
                                          "target": "_blank"
                                        },
                                        "file": "walk/mkdirall.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk/mkdirall.md",
                                            "nodes": [
                                              {
                                                "text": "os.MkdirAll",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#MkdirAll"
                                      }
                                    ],
                                    {
                                      "text": " to create the directories, instead of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Mkdir",
                                          "href": "https://pkg.go.dev/os#Mkdir",
                                          "target": "_blank"
                                        },
                                        "file": "walk/mkdirall.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "walk/mkdirall.md",
                                            "nodes": [
                                              {
                                                "text": "os.Mkdir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Mkdir"
                                      }
                                    ],
                                    {
                                      "text": ", to ensure that the directories are created.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-33",
                                    "type": "listing"
                                  },
                                  "file": "walk/mkdirall.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "walk",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "walk/src/mkdirall/demo_test.go#helper"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func createTestData(t testing.TB) {\n\tt.Helper()\n\n\t// remove any previous test data\n\tif err := os.RemoveAll(\"data\"); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// create the data directory\n\tif err := os.Mkdir(\"data\", 0755); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tlist := []string{\n\t\t\"data/.hidden/d.txt\",\n\t\t\"data/a.txt\",\n\t\t\"data/b.txt\",\n\t\t\"data/e/f/_ignore/i.txt\",\n\t\t\"data/e/f/g.txt\",\n\t\t\"data/e/f/h.txt\",\n\t\t\"data/e/j.txt\",\n\t\t\"data/testdata/c.txt\",\n\t}\n\n\t// create the test data files\n\tfor _, path := range list {\n\t\tif ext := filepath.Ext(path); len(ext) \u003e 0 {\n\t\t\tpath = filepath.Dir(path)\n\t\t}\n\n\t\tfmt.Println(\"creating:\", path)\n\t\tif err := os.MkdirAll(path, 0755); err != nil {\n\t\t\t// ignore if the directory already exists\n\t\t\tif !errors.Is(err, fs.ErrExist) {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t}\n\n\t}\n\n}",
                                                "file": "walk/src/mkdirall/demo_test.go",
                                                "lang": "go",
                                                "name": "helper",
                                                "start": 13,
                                                "end": 56,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "walk",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "walk/src/mkdirall",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden\ncreating: data\ncreating: data\ncreating: data/e/f/_ignore\ncreating: data/e/f\ncreating: data/e/f\ncreating: data/e\ncreating: data/testdata\n    demo_test.go:81: expected data/a.txt, data/b.txt, data/e/f/g.txt, data/e/f/h.txt, data/e/j.txt, got \n--- FAIL: Test_Walk (0.01s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.732s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/mkdirall",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbgpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YS9lL2YvX2lnbm9yZQpjcmVhdGluZzogZGF0YS9lL2YKY3JlYXRpbmc6IGRhdGEvZS9mCmNyZWF0aW5nOiBkYXRhL2UKY3JlYXRpbmc6IGRhdGEvdGVzdGRhdGEKICAgIGRlbW9fdGVzdC5nbzo4MTogZXhwZWN0ZWQgZGF0YS9hLnR4dCwgZGF0YS9iLnR4dCwgZGF0YS9lL2YvZy50eHQsIGRhdGEvZS9mL2gudHh0LCBkYXRhL2Uvai50eHQsIGdvdCAKLS0tIEZBSUw6IFRlc3RfV2FsayAoMC4wMXMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMC43MzJz",
                                              "duration": 1399677916,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden\ncreating: data\ncreating: data\ncreating: data/e/f/_ignore\ncreating: data/e/f\ncreating: data/e/f\ncreating: data/e\ncreating: data/testdata\n    demo_test.go:81: expected data/a.txt, data/b.txt, data/e/f/g.txt, data/e/f/h.txt, data/e/j.txt, got \n--- FAIL: Test_Walk (0.01s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.732s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/mkdirall",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbgpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YS9lL2YvX2lnbm9yZQpjcmVhdGluZzogZGF0YS9lL2YKY3JlYXRpbmc6IGRhdGEvZS9mCmNyZWF0aW5nOiBkYXRhL2UKY3JlYXRpbmc6IGRhdGEvdGVzdGRhdGEKICAgIGRlbW9fdGVzdC5nbzo4MTogZXhwZWN0ZWQgZGF0YS9hLnR4dCwgZGF0YS9iLnR4dCwgZGF0YS9lL2YvZy50eHQsIGRhdGEvZS9mL2gudHh0LCBkYXRhL2Uvai50eHQsIGdvdCAKLS0tIEZBSUw6IFRlc3RfV2FsayAoMC4wMXMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMC43MzJz",
                                            "duration": 1399677916,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.33:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Helper function to create test folder, and file, structures.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 33,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/mkdirall.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from the test output in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-34"
                                        },
                                        "file": "walk/mkdirall.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-34"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.34",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-34"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", our tests are still not passing. This is because we have yet to create the necessary files.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/mkdirall.md",
                                  "nodes": [
                                    {
                                      "text": "A look at the filesystem itself confirms that the directories were indeed created.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-34",
                                    "type": "listing"
                                  },
                                  "file": "walk/mkdirall.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "tree",
                                          "-a"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "tree -a",
                                          "src": "walk/src/mkdirall"
                                        },
                                        "expected_exit": 0,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ tree -a\n\n.\n├── data\n│   ├── .hidden\n│   ├── e\n│   │   └── f\n│   │       └── _ignore\n│   └── testdata\n├── demo.go\n├── demo_test.go\n└── go.mod\n\n7 directories, 3 files",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "tree",
                                                "-a"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/mkdirall",
                                              "stdout": "LgrilJzilIDilIAgZGF0YQrilILCoMKgIOKUnOKUgOKUgCAuaGlkZGVuCuKUgsKgwqAg4pSc4pSA4pSAIGUK4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBmCuKUgsKgwqAg4pSCwqDCoCAgICAg4pSU4pSA4pSAIF9pZ25vcmUK4pSCwqDCoCDilJTilIDilIAgdGVzdGRhdGEK4pSc4pSA4pSAIGRlbW8uZ28K4pSc4pSA4pSAIGRlbW9fdGVzdC5nbwrilJTilIDilIAgZ28ubW9kCgo3IGRpcmVjdG9yaWVzLCAzIGZpbGVz",
                                              "duration": 500628750,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ tree -a\n\n.\n├── data\n│   ├── .hidden\n│   ├── e\n│   │   └── f\n│   │       └── _ignore\n│   └── testdata\n├── demo.go\n├── demo_test.go\n└── go.mod\n\n7 directories, 3 files",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "tree",
                                              "-a"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/mkdirall",
                                            "stdout": "LgrilJzilIDilIAgZGF0YQrilILCoMKgIOKUnOKUgOKUgCAuaGlkZGVuCuKUgsKgwqAg4pSc4pSA4pSAIGUK4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBmCuKUgsKgwqAg4pSCwqDCoCAgICAg4pSU4pSA4pSAIF9pZ25vcmUK4pSCwqDCoCDilJTilIDilIAgdGVzdGRhdGEK4pSc4pSA4pSAIGRlbW8uZ28K4pSc4pSA4pSAIGRlbW9fdGVzdC5nbwrilJTilIDilIAgZ28ubW9kCgo3IGRpcmVjdG9yaWVzLCAzIGZpbGVz",
                                            "duration": 500628750,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.34:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The directory structure created by the test helper.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 34,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Creating Multiple Directories",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "creating/creating.md"
                      },
                      "dir": "creating",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "creating.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "creating.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Creating Files",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "Before we can read a file, we need to create it. To create new file we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Create",
                                          "href": "https://pkg.go.dev/os#Create",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.Create",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Create"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-35"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-35"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.35",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-35"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Create",
                                          "href": "https://pkg.go.dev/os#Create",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.Create",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Create"
                                      }
                                    ],
                                    {
                                      "text": " function will create a new file at the specified path if one does not already exist. If the file already exists, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Create",
                                          "href": "https://pkg.go.dev/os#Create",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.Create",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Create"
                                      }
                                    ],
                                    {
                                      "text": " function will erase, or truncate, the existing file's contents.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-35",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.Create"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.Create",
                                          "exec": "go doc os.Create"
                                        },
                                        "expected_exit": 0,
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.Create\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc Create(name string) (*File, error)\n    Create creates or truncates the named file. If the file already exists,\n    it is truncated. If the file does not exist, it is created with mode 0666\n    (before umask). If successful, methods on the returned File can be used for\n    I/O; the associated file descriptor has mode O_RDWR. If there is an error,\n    it will be of type *PathError.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.Create"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBDcmVhdGUobmFtZSBzdHJpbmcpICgqRmlsZSwgZXJyb3IpCiAgICBDcmVhdGUgY3JlYXRlcyBvciB0cnVuY2F0ZXMgdGhlIG5hbWVkIGZpbGUuIElmIHRoZSBmaWxlIGFscmVhZHkgZXhpc3RzLAogICAgaXQgaXMgdHJ1bmNhdGVkLiBJZiB0aGUgZmlsZSBkb2VzIG5vdCBleGlzdCwgaXQgaXMgY3JlYXRlZCB3aXRoIG1vZGUgMDY2NgogICAgKGJlZm9yZSB1bWFzaykuIElmIHN1Y2Nlc3NmdWwsIG1ldGhvZHMgb24gdGhlIHJldHVybmVkIEZpbGUgY2FuIGJlIHVzZWQgZm9yCiAgICBJL087IHRoZSBhc3NvY2lhdGVkIGZpbGUgZGVzY3JpcHRvciBoYXMgbW9kZSBPX1JEV1IuIElmIHRoZXJlIGlzIGFuIGVycm9yLAogICAgaXQgd2lsbCBiZSBvZiB0eXBlICpQYXRoRXJyb3Iu",
                                              "duration": 524976417,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.Create\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc Create(name string) (*File, error)\n    Create creates or truncates the named file. If the file already exists,\n    it is truncated. If the file does not exist, it is created with mode 0666\n    (before umask). If successful, methods on the returned File can be used for\n    I/O; the associated file descriptor has mode O_RDWR. If there is an error,\n    it will be of type *PathError.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.Create"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBDcmVhdGUobmFtZSBzdHJpbmcpICgqRmlsZSwgZXJyb3IpCiAgICBDcmVhdGUgY3JlYXRlcyBvciB0cnVuY2F0ZXMgdGhlIG5hbWVkIGZpbGUuIElmIHRoZSBmaWxlIGFscmVhZHkgZXhpc3RzLAogICAgaXQgaXMgdHJ1bmNhdGVkLiBJZiB0aGUgZmlsZSBkb2VzIG5vdCBleGlzdCwgaXQgaXMgY3JlYXRlZCB3aXRoIG1vZGUgMDY2NgogICAgKGJlZm9yZSB1bWFzaykuIElmIHN1Y2Nlc3NmdWwsIG1ldGhvZHMgb24gdGhlIHJldHVybmVkIEZpbGUgY2FuIGJlIHVzZWQgZm9yCiAgICBJL087IHRoZSBhc3NvY2lhdGVkIGZpbGUgZGVzY3JpcHRvciBoYXMgbW9kZSBPX1JEV1IuIElmIHRoZXJlIGlzIGFuIGVycm9yLAogICAgaXQgd2lsbCBiZSBvZiB0eXBlICpQYXRoRXJyb3Iu",
                                            "duration": 524976417,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.35:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Create",
                                                "href": "https://pkg.go.dev/os#Create",
                                                "target": "_blank"
                                              },
                                              "file": "creating",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "creating",
                                                    "nodes": [
                                                      {
                                                        "text": "os.Create",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Create"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 35,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "Consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-36"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-36"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.36",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-36"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". We have a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "text": "Create",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function that creates a new file at the specified path and writes the specified data to the file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-36",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "creating",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "creating/src/creating/demo.go#create"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Create(name string, body []byte) error {\n\t// create a new file, this will\n\t// truncate the file if it already exists\n\tf, err := os.Create(name)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer f.Close()\n\n\t// write the body to the file\n\t_, err = f.Write(body)\n\treturn err\n}",
                                                "file": "creating/src/creating/demo.go",
                                                "lang": "go",
                                                "name": "create",
                                                "start": 7,
                                                "end": 22,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.36:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "creating",
                                              "nodes": [
                                                {
                                                  "text": "Create",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 36,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "If successful, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Create",
                                          "href": "https://pkg.go.dev/os#Create",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.Create",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Create"
                                      }
                                    ],
                                    {
                                      "text": " returns a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#File",
                                          "href": "https://pkg.go.dev/os#File",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#File"
                                      }
                                    ],
                                    {
                                      "text": " value representing the new file. This file can then be written to and read from. In this case, we are writing the string ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "text": "Hello, World!",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " to the file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "Next, let's write a test, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-37"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-37"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.37",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-37"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", that confirms the file was created, and its contents are correct.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-37",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "creating",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "creating/src/creating/demo_test.go#create"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Create(t *testing.T) {\n\tt.Parallel()\n\n\tfp := \"data/test.txt\"\n\n\t// create test data directory\n\tcreateTestData(t)\n\n\t// assert the file does not exist\n\t// by trying to stat it.\n\t// this should return an error\n\t_, err := os.Stat(fp)\n\tif err != nil {\n\t\tif !errors.Is(err, fs.ErrNotExist) {\n\t\t\tt.Fatal(err)\n\t\t}\n\t}\n\n\tbody := []byte(\"Hello, World!\")\n\n\t// create the file\n\terr = Create(fp, body)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// read the file into memory\n\tb, err := os.ReadFile(fp)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tact := string(b)\n\texp := string(body)\n\n\t// assert the file contents are correct\n\tif exp != act {\n\t\tt.Fatalf(\"expected %s, got %s\", exp, act)\n\t}\n\n}",
                                                "file": "creating/src/creating/demo_test.go",
                                                "lang": "go",
                                                "name": "create",
                                                "start": 26,
                                                "end": 69,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.37:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Testing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "creating",
                                              "nodes": [
                                                {
                                                  "text": "Create",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function from ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-36"
                                              },
                                              "file": "creating",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-36"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.36",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-36"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 37,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "First, we need to make sure the file does not already exist. To do this, we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Stat",
                                          "href": "https://pkg.go.dev/os#Stat",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.Stat",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Stat"
                                      }
                                    ],
                                    {
                                      "text": " function to check if the file exists.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "Next, we can read the contents of the file using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadFile",
                                          "href": "https://pkg.go.dev/os#ReadFile",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadFile",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadFile"
                                      }
                                    ],
                                    {
                                      "text": " function. This function will read the entire contents of the file into a byte slice. If the file does not exist, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadFile",
                                          "href": "https://pkg.go.dev/os#ReadFile",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadFile",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadFile"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-38"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-38"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.38",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-38"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", will return an error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-38",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.ReadFile"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.ReadFile",
                                          "exec": "go doc os.ReadFile"
                                        },
                                        "expected_exit": 0,
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.ReadFile\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc ReadFile(name string) ([]byte, error)\n    ReadFile reads the named file and returns the contents. A successful call\n    returns err == nil, not err == EOF. Because ReadFile reads the whole file,\n    it does not treat an EOF from Read as an error to be reported.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.ReadFile"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBSZWFkRmlsZShuYW1lIHN0cmluZykgKFtdYnl0ZSwgZXJyb3IpCiAgICBSZWFkRmlsZSByZWFkcyB0aGUgbmFtZWQgZmlsZSBhbmQgcmV0dXJucyB0aGUgY29udGVudHMuIEEgc3VjY2Vzc2Z1bCBjYWxsCiAgICByZXR1cm5zIGVyciA9PSBuaWwsIG5vdCBlcnIgPT0gRU9GLiBCZWNhdXNlIFJlYWRGaWxlIHJlYWRzIHRoZSB3aG9sZSBmaWxlLAogICAgaXQgZG9lcyBub3QgdHJlYXQgYW4gRU9GIGZyb20gUmVhZCBhcyBhbiBlcnJvciB0byBiZSByZXBvcnRlZC4=",
                                              "duration": 835440000,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.ReadFile\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc ReadFile(name string) ([]byte, error)\n    ReadFile reads the named file and returns the contents. A successful call\n    returns err == nil, not err == EOF. Because ReadFile reads the whole file,\n    it does not treat an EOF from Read as an error to be reported.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.ReadFile"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBSZWFkRmlsZShuYW1lIHN0cmluZykgKFtdYnl0ZSwgZXJyb3IpCiAgICBSZWFkRmlsZSByZWFkcyB0aGUgbmFtZWQgZmlsZSBhbmQgcmV0dXJucyB0aGUgY29udGVudHMuIEEgc3VjY2Vzc2Z1bCBjYWxsCiAgICByZXR1cm5zIGVyciA9PSBuaWwsIG5vdCBlcnIgPT0gRU9GLiBCZWNhdXNlIFJlYWRGaWxlIHJlYWRzIHRoZSB3aG9sZSBmaWxlLAogICAgaXQgZG9lcyBub3QgdHJlYXQgYW4gRU9GIGZyb20gUmVhZCBhcyBhbiBlcnJvciB0byBiZSByZXBvcnRlZC4=",
                                            "duration": 835440000,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.38:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#ReadFile",
                                                "href": "https://pkg.go.dev/os#ReadFile",
                                                "target": "_blank"
                                              },
                                              "file": "creating",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "creating",
                                                    "nodes": [
                                                      {
                                                        "text": "os.ReadFile",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#ReadFile"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 38,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "blockquote",
                                "file": "creating.md",
                                "nodes": [
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  },
                                  [
                                    {
                                      "atom": "p",
                                      "file": "creating.md",
                                      "nodes": [
                                        {
                                          "text": "Note: Care must be taken when using the ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "for": "os#ReadFile",
                                              "href": "https://pkg.go.dev/os#ReadFile",
                                              "target": "_blank"
                                            },
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "atom": "code",
                                                "file": "creating.md",
                                                "nodes": [
                                                  {
                                                    "text": "os.ReadFile",
                                                    "type": "hype.Text"
                                                  }
                                                ],
                                                "type": "*hype.InlineCode"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://pkg.go.dev/os#ReadFile"
                                          }
                                        ],
                                        {
                                          "text": " function. If the file is very large, it may cause your program to run out of memory.",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Paragraph"
                                    }
                                  ],
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  }
                                ],
                                "type": "*hype.Element"
                              },
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "Finally, we can compare the contents of the file to the expected contents. The test output, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-39"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-39"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.39",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-39"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", confirms that the file was created, and its contents are correct.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-39",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "creating/src/creating",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Create\n=== PAUSE Test_Create\n=== CONT  Test_Create\n--- PASS: Test_Create (0.01s)\nPASS\nok  \tdemo\t0.816s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/creating/src/creating",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfQ3JlYXRlCj09PSBQQVVTRSBUZXN0X0NyZWF0ZQo9PT0gQ09OVCAgVGVzdF9DcmVhdGUKLS0tIFBBU1M6IFRlc3RfQ3JlYXRlICgwLjAxcykKUEFTUwpvayAgCWRlbW8JMC44MTZz",
                                              "duration": 1476041542,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Create\n=== PAUSE Test_Create\n=== CONT  Test_Create\n--- PASS: Test_Create (0.01s)\nPASS\nok  \tdemo\t0.816s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/creating/src/creating",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfQ3JlYXRlCj09PSBQQVVTRSBUZXN0X0NyZWF0ZQo9PT0gQ09OVCAgVGVzdF9DcmVhdGUKLS0tIFBBU1M6IFRlc3RfQ3JlYXRlICgwLjAxcykKUEFTUwpvayAgCWRlbW8JMC44MTZz",
                                            "duration": 1476041542,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.39:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Test output from ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-37"
                                              },
                                              "file": "creating",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-37"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.37",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-37"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 39,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "If we look directly at the file on disk, we can see that the file has been created, and its contents are correct.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-40",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "cat",
                                          "data/test.txt"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "cat data/test.txt",
                                          "src": "creating/src/creating"
                                        },
                                        "expected_exit": 0,
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ cat data/test.txt\n\nHello, World!",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "cat",
                                                "data/test.txt"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/creating/src/creating",
                                              "stdout": "SGVsbG8sIFdvcmxkIQ==",
                                              "duration": 906182333,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ cat data/test.txt\n\nHello, World!",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "cat",
                                              "data/test.txt"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/creating/src/creating",
                                            "stdout": "SGVsbG8sIFdvcmxkIQ==",
                                            "duration": 906182333,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.40:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Contents of ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-40"
                                              },
                                              "file": "creating",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-40"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.40",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-40"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 40,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "creating.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Truncation",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "If a file already exists, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Create",
                                          "href": "https://pkg.go.dev/os#Create",
                                          "target": "_blank"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "creating.md",
                                            "nodes": [
                                              {
                                                "text": "os.Create",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Create"
                                      }
                                    ],
                                    {
                                      "text": " function will truncate the existing file's contents. This means that if a file already exists, and has contents, the file will erased before the new contents are written. This can lead to unexpected results.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "Consider the following example. In this test, we are creating a file and setting its contents. Then, we create the file again, this time with different contents. The original contents of the file are erased and replaced with the new contents.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-41",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "creating",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "creating/src/truncating/demo_test.go#truncate"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Create(t *testing.T) {\n\tt.Parallel()\n\n\tfp := \"data/test.txt\"\n\n\t// create the file and assert\n\t// the file should now equal the string\n\t// \"Hello, World!\"\n\tcreateTestFile(t, fp, []byte(\"Hello, World!\"))\n\n\t// create the file, again, and assert\n\t// the file should now equal the string\n\t// \"Hello, Universe!\"\n\tcreateTestFile(t, fp, []byte(\"Hello, Universe!\"))\n}",
                                                "file": "creating/src/truncating/demo_test.go",
                                                "lang": "go",
                                                "name": "truncate",
                                                "start": 27,
                                                "end": 44,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.41:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Create",
                                                "href": "https://pkg.go.dev/os#Create",
                                                "target": "_blank"
                                              },
                                              "file": "creating",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "creating",
                                                    "nodes": [
                                                      {
                                                        "text": "os.Create",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Create"
                                            }
                                          ],
                                          {
                                            "text": " will truncate, and replace, an existing file on disk.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 41,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "To keep the test clean, we can use a helper function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-42"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-42"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.42",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-42"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", to create a file, set its contents, and then assert that the contents are correct.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-42",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "creating",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "creating/src/truncating/demo_test.go#file-helper"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func createTestFile(t testing.TB, fp string, body []byte) {\n\tt.Helper()\n\n\t// create test data directory\n\tcreateTestData(t)\n\n\t// assert the file does not exist\n\t// by trying to stat it.\n\t// this should return an error\n\t_, err := os.Stat(fp)\n\tif err != nil {\n\t\tif !errors.Is(err, fs.ErrNotExist) {\n\t\t\tt.Fatal(err)\n\t\t}\n\t}\n\n\t// create the file\n\terr = Create(fp, body)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// read the file into memory\n\tb, err := ioutil.ReadFile(fp)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tact := string(b)\n\texp := string(body)\n\n\t// assert the file contents are correct\n\tif exp != act {\n\t\tt.Fatalf(\"expected %s, got %s\", exp, act)\n\t}\n\n}",
                                                "file": "creating/src/truncating/demo_test.go",
                                                "lang": "go",
                                                "name": "file-helper",
                                                "start": 46,
                                                "end": 85,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "creating",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "creating/src/truncating",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Create\n=== PAUSE Test_Create\n=== CONT  Test_Create\n--- PASS: Test_Create (0.01s)\nPASS\nok  \tdemo\t0.690s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/creating/src/truncating",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfQ3JlYXRlCj09PSBQQVVTRSBUZXN0X0NyZWF0ZQo9PT0gQ09OVCAgVGVzdF9DcmVhdGUKLS0tIFBBU1M6IFRlc3RfQ3JlYXRlICgwLjAxcykKUEFTUwpvayAgCWRlbW8JMC42OTBz",
                                              "duration": 1316409375,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Create\n=== PAUSE Test_Create\n=== CONT  Test_Create\n--- PASS: Test_Create (0.01s)\nPASS\nok  \tdemo\t0.690s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/creating/src/truncating",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfQ3JlYXRlCj09PSBQQVVTRSBUZXN0X0NyZWF0ZQo9PT0gQ09OVCAgVGVzdF9DcmVhdGUKLS0tIFBBU1M6IFRlc3RfQ3JlYXRlICgwLjAxcykKUEFTUwpvayAgCWRlbW8JMC42OTBz",
                                            "duration": 1316409375,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.42:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "creating",
                                              "nodes": [
                                                {
                                                  "text": "fileHelper",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 42,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "From the test output, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-42"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-42"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.42",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-42"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we can see that the original contents of the file were erased, and the new contents were written.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "A look at the file on disk, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-43"
                                        },
                                        "file": "creating.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-43"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.43",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-43"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", confirms that the new content was written.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-43",
                                    "type": "listing"
                                  },
                                  "file": "creating.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "cat",
                                          "data/test.txt"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "cat data/test.txt",
                                          "src": "creating/src/truncating"
                                        },
                                        "expected_exit": 0,
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ cat data/test.txt\n\nHello, Universe!",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "cat",
                                                "data/test.txt"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/creating/src/truncating",
                                              "stdout": "SGVsbG8sIFVuaXZlcnNlIQ==",
                                              "duration": 107075291,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ cat data/test.txt\n\nHello, Universe!",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "cat",
                                              "data/test.txt"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/creating/src/truncating",
                                            "stdout": "SGVsbG8sIFVuaXZlcnNlIQ==",
                                            "duration": 107075291,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "creating",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.43:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Contents of ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-40"
                                              },
                                              "file": "creating",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-40"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.40",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-40"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 43,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Creating Files",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "walk/fixed.md"
                      },
                      "dir": "walk",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "walk/fixed.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "walk/fixed.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Fixing the Walk Tests",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "When we last looked at the tests for our ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk/fixed.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function, we saw that the tests were failing, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-44"
                                        },
                                        "file": "walk/fixed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-44"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.44",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-44"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". Our tests are failing because we have yet to create the files necessary. We have only created the directories.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-44",
                                    "type": "listing"
                                  },
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "walk/src/mkdirall",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden\ncreating: data\ncreating: data\ncreating: data/e/f/_ignore\ncreating: data/e/f\ncreating: data/e/f\ncreating: data/e\ncreating: data/testdata\n    demo_test.go:81: expected data/a.txt, data/b.txt, data/e/f/g.txt, data/e/f/h.txt, data/e/j.txt, got \n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.520s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/mkdirall",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbgpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YS9lL2YvX2lnbm9yZQpjcmVhdGluZzogZGF0YS9lL2YKY3JlYXRpbmc6IGRhdGEvZS9mCmNyZWF0aW5nOiBkYXRhL2UKY3JlYXRpbmc6IGRhdGEvdGVzdGRhdGEKICAgIGRlbW9fdGVzdC5nbzo4MTogZXhwZWN0ZWQgZGF0YS9hLnR4dCwgZGF0YS9iLnR4dCwgZGF0YS9lL2YvZy50eHQsIGRhdGEvZS9mL2gudHh0LCBkYXRhL2Uvai50eHQsIGdvdCAKLS0tIEZBSUw6IFRlc3RfV2FsayAoMC4wMHMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMC41MjBz",
                                              "duration": 1534809708,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating: data/.hidden\ncreating: data\ncreating: data\ncreating: data/e/f/_ignore\ncreating: data/e/f\ncreating: data/e/f\ncreating: data/e\ncreating: data/testdata\n    demo_test.go:81: expected data/a.txt, data/b.txt, data/e/f/g.txt, data/e/f/h.txt, data/e/j.txt, got \n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.520s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/mkdirall",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmc6IGRhdGEvLmhpZGRlbgpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YQpjcmVhdGluZzogZGF0YS9lL2YvX2lnbm9yZQpjcmVhdGluZzogZGF0YS9lL2YKY3JlYXRpbmc6IGRhdGEvZS9mCmNyZWF0aW5nOiBkYXRhL2UKY3JlYXRpbmc6IGRhdGEvdGVzdGRhdGEKICAgIGRlbW9fdGVzdC5nbzo4MTogZXhwZWN0ZWQgZGF0YS9hLnR4dCwgZGF0YS9iLnR4dCwgZGF0YS9lL2YvZy50eHQsIGRhdGEvZS9mL2gudHh0LCBkYXRhL2Uvai50eHQsIGdvdCAKLS0tIEZBSUw6IFRlc3RfV2FsayAoMC4wMHMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMC41MjBz",
                                            "duration": 1534809708,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.44:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Failing test output.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 44,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "A look at the filesystem, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-45"
                                        },
                                        "file": "walk/fixed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-45"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.45",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-45"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", confirms that the directories were created, but the files were not.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-45",
                                    "type": "listing"
                                  },
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "tree",
                                          "-a"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "tree -a",
                                          "src": "walk/src/mkdirall"
                                        },
                                        "expected_exit": 0,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ tree -a\n\n.\n├── data\n│   ├── .hidden\n│   ├── e\n│   │   └── f\n│   │       └── _ignore\n│   └── testdata\n├── demo.go\n├── demo_test.go\n└── go.mod\n\n7 directories, 3 files",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "tree",
                                                "-a"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/mkdirall",
                                              "stdout": "LgrilJzilIDilIAgZGF0YQrilILCoMKgIOKUnOKUgOKUgCAuaGlkZGVuCuKUgsKgwqAg4pSc4pSA4pSAIGUK4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBmCuKUgsKgwqAg4pSCwqDCoCAgICAg4pSU4pSA4pSAIF9pZ25vcmUK4pSCwqDCoCDilJTilIDilIAgdGVzdGRhdGEK4pSc4pSA4pSAIGRlbW8uZ28K4pSc4pSA4pSAIGRlbW9fdGVzdC5nbwrilJTilIDilIAgZ28ubW9kCgo3IGRpcmVjdG9yaWVzLCAzIGZpbGVz",
                                              "duration": 481183500,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ tree -a\n\n.\n├── data\n│   ├── .hidden\n│   ├── e\n│   │   └── f\n│   │       └── _ignore\n│   └── testdata\n├── demo.go\n├── demo_test.go\n└── go.mod\n\n7 directories, 3 files",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "tree",
                                              "-a"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/mkdirall",
                                            "stdout": "LgrilJzilIDilIAgZGF0YQrilILCoMKgIOKUnOKUgOKUgCAuaGlkZGVuCuKUgsKgwqAg4pSc4pSA4pSAIGUK4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBmCuKUgsKgwqAg4pSCwqDCoCAgICAg4pSU4pSA4pSAIF9pZ25vcmUK4pSCwqDCoCDilJTilIDilIAgdGVzdGRhdGEK4pSc4pSA4pSAIGRlbW8uZ28K4pSc4pSA4pSAIGRlbW9fdGVzdC5nbwrilJTilIDilIAgZ28ubW9kCgo3IGRpcmVjdG9yaWVzLCAzIGZpbGVz",
                                            "duration": 481183500,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.45:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Folders, but not files, were created in ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-44"
                                              },
                                              "file": "walk",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-44"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.44",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-44"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 45,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "walk/fixed.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Creating the Files",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "With knowledge of how to create files, we can now create the files necessary for our tests, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-46"
                                        },
                                        "file": "walk/fixed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-46"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.46",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-46"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-46",
                                    "type": "listing"
                                  },
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "walk",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "walk/src/fixed/demo_test.go#create"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// create the test data files\nfor _, path := range list {\n\tdir := path\n\tif ext := filepath.Ext(path); len(ext) \u003e 0 {\n\t\tdir = filepath.Dir(path)\n\t}\n\n\tif err := os.MkdirAll(dir, 0755); err != nil {\n\t\t// ignore if the directory already exists\n\t\tif !errors.Is(err, fs.ErrExist) {\n\t\t\tt.Fatal(err)\n\t\t}\n\t}\n\n\tfmt.Println(\"creating\", path)\n\tf, err := os.Create(path)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tfmt.Fprint(f, strings.ToUpper(path))\n\n\tif err := f.Close(); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n}",
                                                "file": "walk/src/fixed/demo_test.go",
                                                "lang": "go",
                                                "name": "create",
                                                "start": 38,
                                                "end": 66,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "walk",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "walk/src/fixed",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating data/.hidden/d.txt\ncreating data/a.txt\ncreating data/b.txt\ncreating data/e/f/_ignore/i.txt\ncreating data/e/f/g.txt\ncreating data/e/f/h.txt\ncreating data/e/j.txt\ncreating data/testdata/c.txt\n--- PASS: Test_Walk (0.02s)\nPASS\nok  \tdemo\t0.226s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/fixed",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmcgZGF0YS8uaGlkZGVuL2QudHh0CmNyZWF0aW5nIGRhdGEvYS50eHQKY3JlYXRpbmcgZGF0YS9iLnR4dApjcmVhdGluZyBkYXRhL2UvZi9faWdub3JlL2kudHh0CmNyZWF0aW5nIGRhdGEvZS9mL2cudHh0CmNyZWF0aW5nIGRhdGEvZS9mL2gudHh0CmNyZWF0aW5nIGRhdGEvZS9qLnR4dApjcmVhdGluZyBkYXRhL3Rlc3RkYXRhL2MudHh0Ci0tLSBQQVNTOiBUZXN0X1dhbGsgKDAuMDJzKQpQQVNTCm9rICAJZGVtbwkwLjIyNnM=",
                                              "duration": 792712583,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\ncreating data/.hidden/d.txt\ncreating data/a.txt\ncreating data/b.txt\ncreating data/e/f/_ignore/i.txt\ncreating data/e/f/g.txt\ncreating data/e/f/h.txt\ncreating data/e/j.txt\ncreating data/testdata/c.txt\n--- PASS: Test_Walk (0.02s)\nPASS\nok  \tdemo\t0.226s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/fixed",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKY3JlYXRpbmcgZGF0YS8uaGlkZGVuL2QudHh0CmNyZWF0aW5nIGRhdGEvYS50eHQKY3JlYXRpbmcgZGF0YS9iLnR4dApjcmVhdGluZyBkYXRhL2UvZi9faWdub3JlL2kudHh0CmNyZWF0aW5nIGRhdGEvZS9mL2cudHh0CmNyZWF0aW5nIGRhdGEvZS9mL2gudHh0CmNyZWF0aW5nIGRhdGEvZS9qLnR4dApjcmVhdGluZyBkYXRhL3Rlc3RkYXRhL2MudHh0Ci0tLSBQQVNTOiBUZXN0X1dhbGsgKDAuMDJzKQpQQVNTCm9rICAJZGVtbwkwLjIyNnM=",
                                            "duration": 792712583,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.46:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Create files with ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Create",
                                                "href": "https://pkg.go.dev/os#Create",
                                                "target": "_blank"
                                              },
                                              "file": "walk",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "walk",
                                                    "nodes": [
                                                      {
                                                        "text": "os.Create",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Create"
                                            }
                                          ],
                                          {
                                            "text": ", and directories with ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#MkdirAll",
                                                "href": "https://pkg.go.dev/os#MkdirAll",
                                                "target": "_blank"
                                              },
                                              "file": "walk",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "walk",
                                                    "nodes": [
                                                      {
                                                        "text": "os.MkdirAll",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#MkdirAll"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 46,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "The tests are now passing, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-47"
                                        },
                                        "file": "walk/fixed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-47"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.47",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-47"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", and all files and directories are created as expected, and the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "walk/fixed.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function is working as expected.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "A look at the filesystem, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-47"
                                        },
                                        "file": "walk/fixed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-47"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.47",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-47"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", confirms that the files were created as expected.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-47",
                                    "type": "listing"
                                  },
                                  "file": "walk/fixed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "tree",
                                          "-a"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "tree -a",
                                          "src": "walk/src/fixed"
                                        },
                                        "expected_exit": 0,
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ tree -a\n\n.\n├── data\n│   ├── .hidden\n│   │   └── d.txt\n│   ├── a.txt\n│   ├── b.txt\n│   ├── e\n│   │   ├── f\n│   │   │   ├── _ignore\n│   │   │   │   └── i.txt\n│   │   │   ├── g.txt\n│   │   │   └── h.txt\n│   │   └── j.txt\n│   └── testdata\n│       └── c.txt\n├── demo.go\n├── demo_test.go\n└── go.mod\n\n7 directories, 11 files",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "tree",
                                                "-a"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/fixed",
                                              "stdout": "LgrilJzilIDilIAgZGF0YQrilILCoMKgIOKUnOKUgOKUgCAuaGlkZGVuCuKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgZC50eHQK4pSCwqDCoCDilJzilIDilIAgYS50eHQK4pSCwqDCoCDilJzilIDilIAgYi50eHQK4pSCwqDCoCDilJzilIDilIAgZQrilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGYK4pSCwqDCoCDilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIF9pZ25vcmUK4pSCwqDCoCDilILCoMKgIOKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgaS50eHQK4pSCwqDCoCDilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGcudHh0CuKUgsKgwqAg4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBoLnR4dArilILCoMKgIOKUgsKgwqAg4pSU4pSA4pSAIGoudHh0CuKUgsKgwqAg4pSU4pSA4pSAIHRlc3RkYXRhCuKUgsKgwqAgICAgIOKUlOKUgOKUgCBjLnR4dArilJzilIDilIAgZGVtby5nbwrilJzilIDilIAgZGVtb190ZXN0LmdvCuKUlOKUgOKUgCBnby5tb2QKCjcgZGlyZWN0b3JpZXMsIDExIGZpbGVz",
                                              "duration": 420035417,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ tree -a\n\n.\n├── data\n│   ├── .hidden\n│   │   └── d.txt\n│   ├── a.txt\n│   ├── b.txt\n│   ├── e\n│   │   ├── f\n│   │   │   ├── _ignore\n│   │   │   │   └── i.txt\n│   │   │   ├── g.txt\n│   │   │   └── h.txt\n│   │   └── j.txt\n│   └── testdata\n│       └── c.txt\n├── demo.go\n├── demo_test.go\n└── go.mod\n\n7 directories, 11 files",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "tree",
                                              "-a"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/walk/src/fixed",
                                            "stdout": "LgrilJzilIDilIAgZGF0YQrilILCoMKgIOKUnOKUgOKUgCAuaGlkZGVuCuKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgZC50eHQK4pSCwqDCoCDilJzilIDilIAgYS50eHQK4pSCwqDCoCDilJzilIDilIAgYi50eHQK4pSCwqDCoCDilJzilIDilIAgZQrilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGYK4pSCwqDCoCDilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIF9pZ25vcmUK4pSCwqDCoCDilILCoMKgIOKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgaS50eHQK4pSCwqDCoCDilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGcudHh0CuKUgsKgwqAg4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBoLnR4dArilILCoMKgIOKUgsKgwqAg4pSU4pSA4pSAIGoudHh0CuKUgsKgwqAg4pSU4pSA4pSAIHRlc3RkYXRhCuKUgsKgwqAgICAgIOKUlOKUgOKUgCBjLnR4dArilJzilIDilIAgZGVtby5nbwrilJzilIDilIAgZGVtb190ZXN0LmdvCuKUlOKUgOKUgCBnby5tb2QKCjcgZGlyZWN0b3JpZXMsIDExIGZpbGVz",
                                            "duration": 420035417,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "walk",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.47:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The file system.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 47,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Fixing the Walk Tests",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "appending/appending.md"
                      },
                      "dir": "appending",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "appending.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "appending.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Appending to Files",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "As we have seen when we use ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Create",
                                          "href": "https://pkg.go.dev/os#Create",
                                          "target": "_blank"
                                        },
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "appending.md",
                                            "nodes": [
                                              {
                                                "text": "os.Create",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Create"
                                      }
                                    ],
                                    {
                                      "text": " to create a file, if that file already exists, the file is overwritten. This is expected behavior when creating a new file. It would be strange to find previously written contents in a new file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "There often plenty of times when we want to append to an existing file, instead of overwriting it. For example, we might want to append to a log file with new entries and not overwrite the previous log entries. In this case, we can use ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#OpenFile",
                                          "href": "https://pkg.go.dev/os#OpenFile",
                                          "target": "_blank"
                                        },
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "appending.md",
                                            "nodes": [
                                              {
                                                "text": "os.OpenFile",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#OpenFile"
                                      }
                                    ],
                                    {
                                      "text": " to open the file for appending.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-48",
                                    "type": "listing"
                                  },
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.OpenFile"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.OpenFile",
                                          "exec": "go doc os.OpenFile"
                                        },
                                        "expected_exit": 0,
                                        "file": "appending",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.OpenFile\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc OpenFile(name string, flag int, perm FileMode) (*File, error)\n    OpenFile is the generalized open call; most users will use Open or Create\n    instead. It opens the named file with specified flag (O_RDONLY etc.).\n    If the file does not exist, and the O_CREATE flag is passed, it is created\n    with mode perm (before umask). If successful, methods on the returned File\n    can be used for I/O. If there is an error, it will be of type *PathError.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.OpenFile"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBPcGVuRmlsZShuYW1lIHN0cmluZywgZmxhZyBpbnQsIHBlcm0gRmlsZU1vZGUpICgqRmlsZSwgZXJyb3IpCiAgICBPcGVuRmlsZSBpcyB0aGUgZ2VuZXJhbGl6ZWQgb3BlbiBjYWxsOyBtb3N0IHVzZXJzIHdpbGwgdXNlIE9wZW4gb3IgQ3JlYXRlCiAgICBpbnN0ZWFkLiBJdCBvcGVucyB0aGUgbmFtZWQgZmlsZSB3aXRoIHNwZWNpZmllZCBmbGFnIChPX1JET05MWSBldGMuKS4KICAgIElmIHRoZSBmaWxlIGRvZXMgbm90IGV4aXN0LCBhbmQgdGhlIE9fQ1JFQVRFIGZsYWcgaXMgcGFzc2VkLCBpdCBpcyBjcmVhdGVkCiAgICB3aXRoIG1vZGUgcGVybSAoYmVmb3JlIHVtYXNrKS4gSWYgc3VjY2Vzc2Z1bCwgbWV0aG9kcyBvbiB0aGUgcmV0dXJuZWQgRmlsZQogICAgY2FuIGJlIHVzZWQgZm9yIEkvTy4gSWYgdGhlcmUgaXMgYW4gZXJyb3IsIGl0IHdpbGwgYmUgb2YgdHlwZSAqUGF0aEVycm9yLg==",
                                              "duration": 1112400583,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.OpenFile\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc OpenFile(name string, flag int, perm FileMode) (*File, error)\n    OpenFile is the generalized open call; most users will use Open or Create\n    instead. It opens the named file with specified flag (O_RDONLY etc.).\n    If the file does not exist, and the O_CREATE flag is passed, it is created\n    with mode perm (before umask). If successful, methods on the returned File\n    can be used for I/O. If there is an error, it will be of type *PathError.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.OpenFile"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBPcGVuRmlsZShuYW1lIHN0cmluZywgZmxhZyBpbnQsIHBlcm0gRmlsZU1vZGUpICgqRmlsZSwgZXJyb3IpCiAgICBPcGVuRmlsZSBpcyB0aGUgZ2VuZXJhbGl6ZWQgb3BlbiBjYWxsOyBtb3N0IHVzZXJzIHdpbGwgdXNlIE9wZW4gb3IgQ3JlYXRlCiAgICBpbnN0ZWFkLiBJdCBvcGVucyB0aGUgbmFtZWQgZmlsZSB3aXRoIHNwZWNpZmllZCBmbGFnIChPX1JET05MWSBldGMuKS4KICAgIElmIHRoZSBmaWxlIGRvZXMgbm90IGV4aXN0LCBhbmQgdGhlIE9fQ1JFQVRFIGZsYWcgaXMgcGFzc2VkLCBpdCBpcyBjcmVhdGVkCiAgICB3aXRoIG1vZGUgcGVybSAoYmVmb3JlIHVtYXNrKS4gSWYgc3VjY2Vzc2Z1bCwgbWV0aG9kcyBvbiB0aGUgcmV0dXJuZWQgRmlsZQogICAgY2FuIGJlIHVzZWQgZm9yIEkvTy4gSWYgdGhlcmUgaXMgYW4gZXJyb3IsIGl0IHdpbGwgYmUgb2YgdHlwZSAqUGF0aEVycm9yLg==",
                                            "duration": 1112400583,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "appending",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.48:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#OpenFile",
                                                "href": "https://pkg.go.dev/os#OpenFile",
                                                "target": "_blank"
                                              },
                                              "file": "appending",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "appending",
                                                    "nodes": [
                                                      {
                                                        "text": "os.OpenFile",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#OpenFile"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 48,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "Consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-49"
                                        },
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-49"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.49",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-49"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". We have an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "text": "Append",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function that uses ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#OpenFile",
                                          "href": "https://pkg.go.dev/os#OpenFile",
                                          "target": "_blank"
                                        },
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "appending.md",
                                            "nodes": [
                                              {
                                                "text": "os.OpenFile",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#OpenFile"
                                      }
                                    ],
                                    {
                                      "text": " to open the file for appending. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#OpenFile",
                                          "href": "https://pkg.go.dev/os#OpenFile",
                                          "target": "_blank"
                                        },
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "appending.md",
                                            "nodes": [
                                              {
                                                "text": "os.OpenFile",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#OpenFile"
                                      }
                                    ],
                                    {
                                      "text": " function can be configured with flags to tell Go how to open the file. In this example, we creating the file if it does not exist and appending to it if it does.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-49",
                                    "type": "listing"
                                  },
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "appending",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "appending/src/appending/demo.go#append"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Append(name string, body []byte) error {\n\t// if the file doesn't exist, create it, or append to the file\n\tf, err := os.OpenFile(name, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer f.Close()\n\n\t// write the body to the file\n\t_, err = f.Write(body)\n\treturn err\n}",
                                                "file": "appending/src/appending/demo.go",
                                                "lang": "go",
                                                "name": "append",
                                                "start": 24,
                                                "end": 38,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "appending",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.49:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "appending",
                                              "nodes": [
                                                {
                                                  "text": "Append",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 49,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "Next, we can write a test to confirm that the file is appended to properly, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-50"
                                        },
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-50"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.50",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-50"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". We can make use of our ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "text": "createTestFile",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " helper to create the initial file and fill it with some data, but we will need a new helper to append to the file.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-50",
                                    "type": "listing"
                                  },
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "appending",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "appending/src/appending/demo_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Append(t *testing.T) {\n\tt.Parallel()\n\n\tfp := \"data/test.txt\"\n\n\t// create the file and assert\n\t// the file should now equal the string\n\t// \"Hello, World!\"\n\tcreateTestFile(t, fp, []byte(\"Hello, World!\"))\n\n\t// create the file, again, and assert\n\t// the file should now equal the string\n\t// \"Hello, Universe!\"\n\tappendTestFile(t, fp, []byte(\"Hello, Universe!\"))\n}",
                                                "file": "appending/src/appending/demo_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 26,
                                                "end": 43,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "appending",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.50:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Testing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "appending",
                                              "nodes": [
                                                {
                                                  "text": "Append",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 50,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "text": "appendTestFile",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " helper will read in the original contents of the file, append the new data, and then read the new contents of the file. Finally, we can compare the new contents of the file are equal to the original contents plus the new data.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-51",
                                    "type": "listing"
                                  },
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "appending",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "appending/src/appending/demo_test.go#append"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func appendTestFile(t testing.TB, fp string, body []byte) {\n\tt.Helper()\n\n\t// read the existing file into memory\n\tbefore, err := os.ReadFile(fp)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// append the new data\n\tif err := Append(fp, body); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// read the new file into memory\n\tafter, err := os.ReadFile(fp)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// assert the new file contents\n\t// contain the old and new data\n\t// Hello, World!Hello, Universe!\n\texp := string(append(before, body...))\n\tact := string(after)\n\n\tif exp != act {\n\t\tt.Fatalf(\"expected %s, got %s\", exp, act)\n\t}\n}",
                                                "file": "appending/src/appending/demo_test.go",
                                                "lang": "go",
                                                "name": "append",
                                                "start": 45,
                                                "end": 77,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "appending",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "appending/src/appending",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "appending",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Append\n=== PAUSE Test_Append\n=== CONT  Test_Append\n--- PASS: Test_Append (0.00s)\nPASS\nok  \tdemo\t0.599s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/appending/src/appending",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfQXBwZW5kCj09PSBQQVVTRSBUZXN0X0FwcGVuZAo9PT0gQ09OVCAgVGVzdF9BcHBlbmQKLS0tIFBBU1M6IFRlc3RfQXBwZW5kICgwLjAwcykKUEFTUwpvayAgCWRlbW8JMC41OTlz",
                                              "duration": 2055623917,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Append\n=== PAUSE Test_Append\n=== CONT  Test_Append\n--- PASS: Test_Append (0.00s)\nPASS\nok  \tdemo\t0.599s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/appending/src/appending",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfQXBwZW5kCj09PSBQQVVTRSBUZXN0X0FwcGVuZAo9PT0gQ09OVCAgVGVzdF9BcHBlbmQKLS0tIFBBU1M6IFRlc3RfQXBwZW5kICgwLjAwcykKUEFTUwpvayAgCWRlbW8JMC41OTlz",
                                            "duration": 2055623917,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "appending",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.51:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "appending",
                                              "nodes": [
                                                {
                                                  "text": "appendTestFile",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " helper.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 51,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "The tests in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-51"
                                        },
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-51"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.51",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-51"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", show that the file is appended to properly. Finally, a look at the file system shows that the file is appended to properly, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-52"
                                        },
                                        "file": "appending.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-52"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.52",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-52"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-52",
                                    "type": "listing"
                                  },
                                  "file": "appending.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "cat",
                                          "data/test.txt"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "cat data/test.txt",
                                          "src": "appending/src/appending"
                                        },
                                        "expected_exit": 0,
                                        "file": "appending",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ cat data/test.txt\n\nHello, World!Hello, Universe!",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "cat",
                                                "data/test.txt"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/appending/src/appending",
                                              "stdout": "SGVsbG8sIFdvcmxkIUhlbGxvLCBVbml2ZXJzZSE=",
                                              "duration": 389127500,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ cat data/test.txt\n\nHello, World!Hello, Universe!",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "cat",
                                              "data/test.txt"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/appending/src/appending",
                                            "stdout": "SGVsbG8sIFdvcmxkIUhlbGxvLCBVbml2ZXJzZSE=",
                                            "duration": 389127500,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "appending",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.52:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The contents of the file.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 52,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Appending to Files",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "reading/reading.md"
                      },
                      "dir": "reading",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "reading.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "reading.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Reading Files",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "reading.md",
                                  "nodes": [
                                    {
                                      "text": "So far we have been reading files directly into memory using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#ReadFile",
                                          "href": "https://pkg.go.dev/os#ReadFile",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "os.ReadFile",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#ReadFile"
                                      }
                                    ],
                                    {
                                      "text": " function. While this is a very simple way to read a file, it is not the most efficient way to do so. If the file is very large, reading it into memory may not be feasible. It may also not be necessary. For example, if had a media file, such as a video, we might only want to read its metadata at the beginning of the file, and then stop reading it before we get to the actual video data.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "reading.md",
                                  "nodes": [
                                    {
                                      "text": "Using interfaces, such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Reader",
                                          "href": "https://pkg.go.dev/io#Reader",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Reader",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Reader"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Writer",
                                          "href": "https://pkg.go.dev/io#Writer",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Writer",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Writer"
                                      }
                                    ],
                                    {
                                      "text": ", and we can read and write files in a more efficient way.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "reading.md",
                                  "nodes": [
                                    {
                                      "text": "Consider the following example. We are opening a file using ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#Open",
                                          "href": "https://pkg.go.dev/os#Open",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "os.Open",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#Open"
                                      }
                                    ],
                                    {
                                      "text": ", which returns an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#File",
                                          "href": "https://pkg.go.dev/os#File",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "os.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#File"
                                      }
                                    ],
                                    {
                                      "text": " that implements the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Reader",
                                          "href": "https://pkg.go.dev/io#Reader",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Reader",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Reader"
                                      }
                                    ],
                                    {
                                      "text": " interface. We are passing the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "text": "Read",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Writer",
                                          "href": "https://pkg.go.dev/io#Writer",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Writer",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Writer"
                                      }
                                    ],
                                    {
                                      "text": " as an argument. We can make use of both of these interfaces to use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Copy",
                                          "href": "https://pkg.go.dev/io#Copy",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Copy",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Copy"
                                      }
                                    ],
                                    {
                                      "text": " function to copy the contents of the file to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Writer",
                                          "href": "https://pkg.go.dev/io#Writer",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Writer",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Writer"
                                      }
                                    ],
                                    {
                                      "text": ". If this ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Writer",
                                          "href": "https://pkg.go.dev/io#Writer",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Writer",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Writer"
                                      }
                                    ],
                                    {
                                      "text": " is another ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#File",
                                          "href": "https://pkg.go.dev/os#File",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "os.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#File"
                                      }
                                    ],
                                    {
                                      "text": " then ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Copy",
                                          "href": "https://pkg.go.dev/io#Copy",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Copy",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Copy"
                                      }
                                    ],
                                    {
                                      "text": " will stream the data directly from one file to the other.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-53",
                                    "type": "listing"
                                  },
                                  "file": "reading.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "reading",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "reading/src/reading/demo.go#read"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Read(fp string, w io.Writer) error {\n\tf, err := os.Open(fp)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer f.Close()\n\n\t_, err = io.Copy(w, f)\n\treturn err\n}",
                                                "file": "reading/src/reading/demo.go",
                                                "lang": "go",
                                                "name": "read",
                                                "start": 8,
                                                "end": 20,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "reading",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.53:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "reading",
                                              "nodes": [
                                                {
                                                  "text": "Read",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 53,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "reading.md",
                                  "nodes": [
                                    {
                                      "text": "In the test we can use a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "bytes#Buffer",
                                          "href": "https://pkg.go.dev/bytes#Buffer",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "bytes.Buffer",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/bytes#Buffer"
                                      }
                                    ],
                                    {
                                      "text": " as the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io#Writer",
                                          "href": "https://pkg.go.dev/io#Writer",
                                          "target": "_blank"
                                        },
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "reading.md",
                                            "nodes": [
                                              {
                                                "text": "io.Writer",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io#Writer"
                                      }
                                    ],
                                    {
                                      "text": " we pass to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "reading.md",
                                        "nodes": [
                                          {
                                            "text": "Read",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function. This then allows us to assert the contents of the file were properly read.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              null,
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-54",
                                    "type": "listing"
                                  },
                                  "file": "reading.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "reading",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "reading/src/reading/demo_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Read(t *testing.T) {\n\tt.Parallel()\n\n\tbb := \u0026bytes.Buffer{}\n\n\terr := Read(\"data/test.txt\", bb)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\texp := \"Hello, World!\"\n\tact := bb.String()\n\n\tif exp != act {\n\t\tt.Fatalf(\"expected %s, got %s\", exp, act)\n\t}\n}",
                                                "file": "reading/src/reading/demo_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 8,
                                                "end": 27,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "reading",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "reading/src/reading",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "reading",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Read\n=== PAUSE Test_Read\n=== CONT  Test_Read\n--- PASS: Test_Read (0.00s)\nPASS\nok  \tdemo\t0.177s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/reading/src/reading",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfUmVhZAo9PT0gUEFVU0UgVGVzdF9SZWFkCj09PSBDT05UICBUZXN0X1JlYWQKLS0tIFBBU1M6IFRlc3RfUmVhZCAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuMTc3cw==",
                                              "duration": 629446542,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Read\n=== PAUSE Test_Read\n=== CONT  Test_Read\n--- PASS: Test_Read (0.00s)\nPASS\nok  \tdemo\t0.177s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/reading/src/reading",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfUmVhZAo9PT0gUEFVU0UgVGVzdF9SZWFkCj09PSBDT05UICBUZXN0X1JlYWQKLS0tIFBBU1M6IFRlc3RfUmVhZCAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuMTc3cw==",
                                            "duration": 629446542,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "reading",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.54:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Testing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "reading",
                                              "nodes": [
                                                {
                                                  "text": "Read",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 54,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Reading Files",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "windows/windows.md"
                      },
                      "dir": "windows",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "windows.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "windows.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Beware of Windows",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "windows.md",
                                  "nodes": [
                                    {
                                      "text": "When discussing file systems, special attention must be paid to Windows. While Go has a done a great job of abstracting away the differences between Windows and Unix file systems, it is still possible to run into some issues.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "windows.md",
                                  "nodes": [
                                    {
                                      "text": "The largest issue is that Windows has a different file path system than Unix. In Unix, a file path is a series of directories separated by slashes, while in Windows, a file path is a series of directories separated by backslashes.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "pre",
                                "file": "windows.md",
                                "nodes": [
                                  [
                                    {
                                      "atom": "code",
                                      "attributes": {
                                        "class": "language-plain",
                                        "language": "plain"
                                      },
                                      "file": "windows.md",
                                      "lang": "plain",
                                      "nodes": [
                                        {
                                          "text": "Unix:    /home/user/go/src/github.com/golang/example/\nWindows: C:\\Users\\user\\go\\src\\github.com\\golang\\example\n",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.FencedCode"
                                    }
                                  ]
                                ],
                                "type": "*hype.Element"
                              },
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "windows.md",
                                  "nodes": [
                                    {
                                      "text": "Because of this difference, whenever we want to use a nested filepath in Go, we need to use a function that will convert the path to the correct format. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Join",
                                          "href": "https://pkg.go.dev/filepath#Join",
                                          "target": "_blank"
                                        },
                                        "file": "windows.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "windows.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Join",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Join"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-55"
                                        },
                                        "file": "windows.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-55"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.55",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-55"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", will do this for us.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-55",
                                    "type": "listing"
                                  },
                                  "file": "windows.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "filepath.Join"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "filepath.Join",
                                          "exec": "go doc filepath.Join"
                                        },
                                        "expected_exit": 0,
                                        "file": "windows",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc filepath.Join\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc Join(elem ...string) string\n    Join joins any number of path elements into a single path, separating them\n    with an OS specific Separator. Empty elements are ignored. The result is\n    Cleaned. However, if the argument list is empty or all its elements are\n    empty, Join returns an empty string. On Windows, the result will only be a\n    UNC path if the first non-empty element is a UNC path.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "filepath.Join"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIEpvaW4oZWxlbSAuLi5zdHJpbmcpIHN0cmluZwogICAgSm9pbiBqb2lucyBhbnkgbnVtYmVyIG9mIHBhdGggZWxlbWVudHMgaW50byBhIHNpbmdsZSBwYXRoLCBzZXBhcmF0aW5nIHRoZW0KICAgIHdpdGggYW4gT1Mgc3BlY2lmaWMgU2VwYXJhdG9yLiBFbXB0eSBlbGVtZW50cyBhcmUgaWdub3JlZC4gVGhlIHJlc3VsdCBpcwogICAgQ2xlYW5lZC4gSG93ZXZlciwgaWYgdGhlIGFyZ3VtZW50IGxpc3QgaXMgZW1wdHkgb3IgYWxsIGl0cyBlbGVtZW50cyBhcmUKICAgIGVtcHR5LCBKb2luIHJldHVybnMgYW4gZW1wdHkgc3RyaW5nLiBPbiBXaW5kb3dzLCB0aGUgcmVzdWx0IHdpbGwgb25seSBiZSBhCiAgICBVTkMgcGF0aCBpZiB0aGUgZmlyc3Qgbm9uLWVtcHR5IGVsZW1lbnQgaXMgYSBVTkMgcGF0aC4=",
                                              "duration": 1135548625,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc filepath.Join\n\npackage filepath // import \u0026#34;path/filepath\u0026#34;\n\nfunc Join(elem ...string) string\n    Join joins any number of path elements into a single path, separating them\n    with an OS specific Separator. Empty elements are ignored. The result is\n    Cleaned. However, if the argument list is empty or all its elements are\n    empty, Join returns an empty string. On Windows, the result will only be a\n    UNC path if the first non-empty element is a UNC path.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "filepath.Join"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmaWxlcGF0aCAvLyBpbXBvcnQgInBhdGgvZmlsZXBhdGgiCgpmdW5jIEpvaW4oZWxlbSAuLi5zdHJpbmcpIHN0cmluZwogICAgSm9pbiBqb2lucyBhbnkgbnVtYmVyIG9mIHBhdGggZWxlbWVudHMgaW50byBhIHNpbmdsZSBwYXRoLCBzZXBhcmF0aW5nIHRoZW0KICAgIHdpdGggYW4gT1Mgc3BlY2lmaWMgU2VwYXJhdG9yLiBFbXB0eSBlbGVtZW50cyBhcmUgaWdub3JlZC4gVGhlIHJlc3VsdCBpcwogICAgQ2xlYW5lZC4gSG93ZXZlciwgaWYgdGhlIGFyZ3VtZW50IGxpc3QgaXMgZW1wdHkgb3IgYWxsIGl0cyBlbGVtZW50cyBhcmUKICAgIGVtcHR5LCBKb2luIHJldHVybnMgYW4gZW1wdHkgc3RyaW5nLiBPbiBXaW5kb3dzLCB0aGUgcmVzdWx0IHdpbGwgb25seSBiZSBhCiAgICBVTkMgcGF0aCBpZiB0aGUgZmlyc3Qgbm9uLWVtcHR5IGVsZW1lbnQgaXMgYSBVTkMgcGF0aC4=",
                                            "duration": 1135548625,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "windows",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.55:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "filepath#Join",
                                                "href": "https://pkg.go.dev/filepath#Join",
                                                "target": "_blank"
                                              },
                                              "file": "windows",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "windows",
                                                    "nodes": [
                                                      {
                                                        "text": "filepath.Join",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/filepath#Join"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 55,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "windows.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Join",
                                          "href": "https://pkg.go.dev/filepath#Join",
                                          "target": "_blank"
                                        },
                                        "file": "windows.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "windows.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Join",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Join"
                                      }
                                    ],
                                    {
                                      "text": " is a function that takes a variable number of paths, and joins them together with the appropriate ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#Separator",
                                          "href": "https://pkg.go.dev/filepath#Separator",
                                          "target": "_blank"
                                        },
                                        "file": "windows.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "windows.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.Separator",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#Separator"
                                      }
                                    ],
                                    {
                                      "text": ". The result will be a string that is a valid path in the appropriate file system.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-56",
                                    "type": "listing"
                                  },
                                  "file": "windows.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "windows",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go"
                                            },
                                            "file": "windows",
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "text": "path := filepath.Join(\"home\", \"user\", \"go\", \"src\", \"github.com\", \"golang\", \"example\")\n// Unix:    /home/user/go/src/github.com/golang/example/\n// Windows: C:\\Users\\user\\go\\src\\github.com\\golang\\example\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.FencedCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "windows",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.56:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "filepath#Join",
                                                "href": "https://pkg.go.dev/filepath#Join",
                                                "target": "_blank"
                                              },
                                              "file": "windows",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "windows",
                                                    "nodes": [
                                                      {
                                                        "text": "filepath.Join",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/filepath#Join"
                                            }
                                          ],
                                          {
                                            "text": " function to create platform specific file paths.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 56,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "windows.md",
                                  "nodes": [
                                    {
                                      "text": "As we will see shortly, when we use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fs",
                                          "href": "https://pkg.go.dev/fs",
                                          "target": "_blank"
                                        },
                                        "file": "windows.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "windows.md",
                                            "nodes": [
                                              {
                                                "text": "fs",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fs"
                                      }
                                    ],
                                    {
                                      "text": " package, we can use ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "windows.md",
                                        "nodes": [
                                          {
                                            "text": "/",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " as the separator and the filepath will be converted to the correct format for the current operating system.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Beware of Windows",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "fs/fs.md"
                      },
                      "dir": "fs",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "fs.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "fs.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "The FS Package",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "href": "https://go.dev/doc/go1.16",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs.md",
                                              "nodes": [
                                                {
                                                  "text": "go1.16",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ]
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://go.dev/doc/go1.16"
                                      }
                                    ],
                                    {
                                      "text": " the Go team wanted to introduce a long requested feature, the ability to embed files into a Go binary. There had been a variety of third-party tools that did this, but none of them were able to do it without a lot of work.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "A lot of these tools behaved in a similar way; if the file was found in their in-memory store, they would return it. If their store was empty, or didn't contain the file, the assumption was the file was in the filesystem, and they would read it from there. The Go team liked this approached as it was very friendly to developers. Using ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "text": "go run",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", to start you local web server, for example, would read HTML templates from disk, allowing for live updates. But, if built with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "text": "go build",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", the binary would contain all of the HTML templates in memory, and the developer would have to manually update the binary to see file changes.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "In order to enable this feature, the Go team had to introduce a new set of interfaces for working with the filesystem. For this, they introduced the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fs",
                                          "href": "https://pkg.go.dev/fs",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fs"
                                      }
                                    ],
                                    {
                                      "text": " package, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-57"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-57"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.57",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-57"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". While this package was introduced to help enable the new embedding feature, it provides a common interface for working with ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "strong",
                                      "file": "fs.md",
                                      "nodes": [
                                        {
                                          "text": "read-only",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " file systems. This allows us, as developers, to mock out the file system for testing or create our own file system implementations. For example, we can implement the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " interface to create an Amazon S3 file system that is a drop-in replacement for the standard file system.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-57",
                                    "type": "listing"
                                  },
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fs"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fs",
                                          "exec": "go doc fs"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fs\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\nPackage fs defines basic interfaces to a file system. A file system can be\nprovided by the host operating system but also by other packages.\n\nvar ErrInvalid = errInvalid() ...\nvar SkipAll = errors.New(\u0026#34;skip everything and stop the walk\u0026#34;)\nvar SkipDir = errors.New(\u0026#34;skip this directory\u0026#34;)\nfunc FormatDirEntry(dir DirEntry) string\nfunc FormatFileInfo(info FileInfo) string\nfunc Glob(fsys FS, pattern string) (matches []string, err error)\nfunc ReadFile(fsys FS, name string) ([]byte, error)\nfunc ValidPath(name string) bool\nfunc WalkDir(fsys FS, root string, fn WalkDirFunc) error\ntype DirEntry interface{ ... }\n    func FileInfoToDirEntry(info FileInfo) DirEntry\n    func ReadDir(fsys FS, name string) ([]DirEntry, error)\ntype FS interface{ ... }\n    func Sub(fsys FS, dir string) (FS, error)\ntype File interface{ ... }\ntype FileInfo interface{ ... }\n    func Stat(fsys FS, name string) (FileInfo, error)\ntype FileMode uint32\n    const ModeDir FileMode = 1 \u0026lt;\u0026lt; (32 - 1 - iota) ...\ntype GlobFS interface{ ... }\ntype PathError struct{ ... }\ntype ReadDirFS interface{ ... }\ntype ReadDirFile interface{ ... }\ntype ReadFileFS interface{ ... }\ntype StatFS interface{ ... }\ntype SubFS interface{ ... }\ntype WalkDirFunc func(path string, d DirEntry, err error) error",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fs"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKUGFja2FnZSBmcyBkZWZpbmVzIGJhc2ljIGludGVyZmFjZXMgdG8gYSBmaWxlIHN5c3RlbS4gQSBmaWxlIHN5c3RlbSBjYW4gYmUKcHJvdmlkZWQgYnkgdGhlIGhvc3Qgb3BlcmF0aW5nIHN5c3RlbSBidXQgYWxzbyBieSBvdGhlciBwYWNrYWdlcy4KCnZhciBFcnJJbnZhbGlkID0gZXJySW52YWxpZCgpIC4uLgp2YXIgU2tpcEFsbCA9IGVycm9ycy5OZXcoInNraXAgZXZlcnl0aGluZyBhbmQgc3RvcCB0aGUgd2FsayIpCnZhciBTa2lwRGlyID0gZXJyb3JzLk5ldygic2tpcCB0aGlzIGRpcmVjdG9yeSIpCmZ1bmMgRm9ybWF0RGlyRW50cnkoZGlyIERpckVudHJ5KSBzdHJpbmcKZnVuYyBGb3JtYXRGaWxlSW5mbyhpbmZvIEZpbGVJbmZvKSBzdHJpbmcKZnVuYyBHbG9iKGZzeXMgRlMsIHBhdHRlcm4gc3RyaW5nKSAobWF0Y2hlcyBbXXN0cmluZywgZXJyIGVycm9yKQpmdW5jIFJlYWRGaWxlKGZzeXMgRlMsIG5hbWUgc3RyaW5nKSAoW11ieXRlLCBlcnJvcikKZnVuYyBWYWxpZFBhdGgobmFtZSBzdHJpbmcpIGJvb2wKZnVuYyBXYWxrRGlyKGZzeXMgRlMsIHJvb3Qgc3RyaW5nLCBmbiBXYWxrRGlyRnVuYykgZXJyb3IKdHlwZSBEaXJFbnRyeSBpbnRlcmZhY2V7IC4uLiB9CiAgICBmdW5jIEZpbGVJbmZvVG9EaXJFbnRyeShpbmZvIEZpbGVJbmZvKSBEaXJFbnRyeQogICAgZnVuYyBSZWFkRGlyKGZzeXMgRlMsIG5hbWUgc3RyaW5nKSAoW11EaXJFbnRyeSwgZXJyb3IpCnR5cGUgRlMgaW50ZXJmYWNleyAuLi4gfQogICAgZnVuYyBTdWIoZnN5cyBGUywgZGlyIHN0cmluZykgKEZTLCBlcnJvcikKdHlwZSBGaWxlIGludGVyZmFjZXsgLi4uIH0KdHlwZSBGaWxlSW5mbyBpbnRlcmZhY2V7IC4uLiB9CiAgICBmdW5jIFN0YXQoZnN5cyBGUywgbmFtZSBzdHJpbmcpIChGaWxlSW5mbywgZXJyb3IpCnR5cGUgRmlsZU1vZGUgdWludDMyCiAgICBjb25zdCBNb2RlRGlyIEZpbGVNb2RlID0gMSA8PCAoMzIgLSAxIC0gaW90YSkgLi4uCnR5cGUgR2xvYkZTIGludGVyZmFjZXsgLi4uIH0KdHlwZSBQYXRoRXJyb3Igc3RydWN0eyAuLi4gfQp0eXBlIFJlYWREaXJGUyBpbnRlcmZhY2V7IC4uLiB9CnR5cGUgUmVhZERpckZpbGUgaW50ZXJmYWNleyAuLi4gfQp0eXBlIFJlYWRGaWxlRlMgaW50ZXJmYWNleyAuLi4gfQp0eXBlIFN0YXRGUyBpbnRlcmZhY2V7IC4uLiB9CnR5cGUgU3ViRlMgaW50ZXJmYWNleyAuLi4gfQp0eXBlIFdhbGtEaXJGdW5jIGZ1bmMocGF0aCBzdHJpbmcsIGQgRGlyRW50cnksIGVyciBlcnJvcikgZXJyb3I=",
                                              "duration": 1233820500,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fs\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\nPackage fs defines basic interfaces to a file system. A file system can be\nprovided by the host operating system but also by other packages.\n\nvar ErrInvalid = errInvalid() ...\nvar SkipAll = errors.New(\u0026#34;skip everything and stop the walk\u0026#34;)\nvar SkipDir = errors.New(\u0026#34;skip this directory\u0026#34;)\nfunc FormatDirEntry(dir DirEntry) string\nfunc FormatFileInfo(info FileInfo) string\nfunc Glob(fsys FS, pattern string) (matches []string, err error)\nfunc ReadFile(fsys FS, name string) ([]byte, error)\nfunc ValidPath(name string) bool\nfunc WalkDir(fsys FS, root string, fn WalkDirFunc) error\ntype DirEntry interface{ ... }\n    func FileInfoToDirEntry(info FileInfo) DirEntry\n    func ReadDir(fsys FS, name string) ([]DirEntry, error)\ntype FS interface{ ... }\n    func Sub(fsys FS, dir string) (FS, error)\ntype File interface{ ... }\ntype FileInfo interface{ ... }\n    func Stat(fsys FS, name string) (FileInfo, error)\ntype FileMode uint32\n    const ModeDir FileMode = 1 \u0026lt;\u0026lt; (32 - 1 - iota) ...\ntype GlobFS interface{ ... }\ntype PathError struct{ ... }\ntype ReadDirFS interface{ ... }\ntype ReadDirFile interface{ ... }\ntype ReadFileFS interface{ ... }\ntype StatFS interface{ ... }\ntype SubFS interface{ ... }\ntype WalkDirFunc func(path string, d DirEntry, err error) error",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fs"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKUGFja2FnZSBmcyBkZWZpbmVzIGJhc2ljIGludGVyZmFjZXMgdG8gYSBmaWxlIHN5c3RlbS4gQSBmaWxlIHN5c3RlbSBjYW4gYmUKcHJvdmlkZWQgYnkgdGhlIGhvc3Qgb3BlcmF0aW5nIHN5c3RlbSBidXQgYWxzbyBieSBvdGhlciBwYWNrYWdlcy4KCnZhciBFcnJJbnZhbGlkID0gZXJySW52YWxpZCgpIC4uLgp2YXIgU2tpcEFsbCA9IGVycm9ycy5OZXcoInNraXAgZXZlcnl0aGluZyBhbmQgc3RvcCB0aGUgd2FsayIpCnZhciBTa2lwRGlyID0gZXJyb3JzLk5ldygic2tpcCB0aGlzIGRpcmVjdG9yeSIpCmZ1bmMgRm9ybWF0RGlyRW50cnkoZGlyIERpckVudHJ5KSBzdHJpbmcKZnVuYyBGb3JtYXRGaWxlSW5mbyhpbmZvIEZpbGVJbmZvKSBzdHJpbmcKZnVuYyBHbG9iKGZzeXMgRlMsIHBhdHRlcm4gc3RyaW5nKSAobWF0Y2hlcyBbXXN0cmluZywgZXJyIGVycm9yKQpmdW5jIFJlYWRGaWxlKGZzeXMgRlMsIG5hbWUgc3RyaW5nKSAoW11ieXRlLCBlcnJvcikKZnVuYyBWYWxpZFBhdGgobmFtZSBzdHJpbmcpIGJvb2wKZnVuYyBXYWxrRGlyKGZzeXMgRlMsIHJvb3Qgc3RyaW5nLCBmbiBXYWxrRGlyRnVuYykgZXJyb3IKdHlwZSBEaXJFbnRyeSBpbnRlcmZhY2V7IC4uLiB9CiAgICBmdW5jIEZpbGVJbmZvVG9EaXJFbnRyeShpbmZvIEZpbGVJbmZvKSBEaXJFbnRyeQogICAgZnVuYyBSZWFkRGlyKGZzeXMgRlMsIG5hbWUgc3RyaW5nKSAoW11EaXJFbnRyeSwgZXJyb3IpCnR5cGUgRlMgaW50ZXJmYWNleyAuLi4gfQogICAgZnVuYyBTdWIoZnN5cyBGUywgZGlyIHN0cmluZykgKEZTLCBlcnJvcikKdHlwZSBGaWxlIGludGVyZmFjZXsgLi4uIH0KdHlwZSBGaWxlSW5mbyBpbnRlcmZhY2V7IC4uLiB9CiAgICBmdW5jIFN0YXQoZnN5cyBGUywgbmFtZSBzdHJpbmcpIChGaWxlSW5mbywgZXJyb3IpCnR5cGUgRmlsZU1vZGUgdWludDMyCiAgICBjb25zdCBNb2RlRGlyIEZpbGVNb2RlID0gMSA8PCAoMzIgLSAxIC0gaW90YSkgLi4uCnR5cGUgR2xvYkZTIGludGVyZmFjZXsgLi4uIH0KdHlwZSBQYXRoRXJyb3Igc3RydWN0eyAuLi4gfQp0eXBlIFJlYWREaXJGUyBpbnRlcmZhY2V7IC4uLiB9CnR5cGUgUmVhZERpckZpbGUgaW50ZXJmYWNleyAuLi4gfQp0eXBlIFJlYWRGaWxlRlMgaW50ZXJmYWNleyAuLi4gfQp0eXBlIFN0YXRGUyBpbnRlcmZhY2V7IC4uLiB9CnR5cGUgU3ViRlMgaW50ZXJmYWNleyAuLi4gfQp0eXBlIFdhbGtEaXJGdW5jIGZ1bmMocGF0aCBzdHJpbmcsIGQgRGlyRW50cnksIGVyciBlcnJvcikgZXJyb3I=",
                                            "duration": 1233820500,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.57:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "fs",
                                                "href": "https://pkg.go.dev/fs",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/fs"
                                            }
                                          ],
                                          {
                                            "text": " package.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 57,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "blockquote",
                                "file": "fs.md",
                                "nodes": [
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  },
                                  [
                                    {
                                      "atom": "p",
                                      "file": "fs.md",
                                      "nodes": [
                                        {
                                          "text": "Note: The ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "for": "fs",
                                              "href": "https://pkg.go.dev/fs",
                                              "target": "_blank"
                                            },
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "atom": "code",
                                                "file": "fs.md",
                                                "nodes": [
                                                  {
                                                    "text": "fs",
                                                    "type": "hype.Text"
                                                  }
                                                ],
                                                "type": "*hype.InlineCode"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://pkg.go.dev/fs"
                                          }
                                        ],
                                        {
                                          "text": " package is for working with a \"read-only\" file system. It does not provide any methods for writing to the file system. You continue to use the previously discuss methods for creating files and directories.",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Paragraph"
                                    }
                                  ],
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  }
                                ],
                                "type": "*hype.Element"
                              },
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fs.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "The FS Interface",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "At the core of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fs",
                                          "href": "https://pkg.go.dev/fs",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fs"
                                      }
                                    ],
                                    {
                                      "text": " package are two interfaces; the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " interface and the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#File",
                                          "href": "https://pkg.go.dev/io/fs#File",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#File"
                                      }
                                    ],
                                    {
                                      "text": " interface.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " interface is used to define a file system, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-58"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-58"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.58",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-58"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". To implement this interface you must define a method, named ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "text": "Open",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " that accepts a path and returns a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#File",
                                          "href": "https://pkg.go.dev/io/fs#File",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#File"
                                      }
                                    ],
                                    {
                                      "text": " interface and a potential error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-58",
                                    "type": "listing"
                                  },
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fs.FS"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fs.FS",
                                          "exec": "go doc fs.FS"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fs.FS\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype FS interface {\n\t// Open opens the named file.\n\t//\n\t// When Open returns an error, it should be of type *PathError\n\t// with the Op field set to \u0026#34;open\u0026#34;, the Path field set to name,\n\t// and the Err field describing the problem.\n\t//\n\t// Open should reject attempts to open names that do not satisfy\n\t// ValidPath(name), returning a *PathError with Err set to\n\t// ErrInvalid or ErrNotExist.\n\tOpen(name string) (File, error)\n}\n    An FS provides access to a hierarchical file system.\n\n    The FS interface is the minimum implementation required of the file system.\n    A file system may implement additional interfaces, such as ReadFileFS,\n    to provide additional or optimized functionality.\n\nfunc Sub(fsys FS, dir string) (FS, error)",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fs.FS"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBGUyBpbnRlcmZhY2UgewoJLy8gT3BlbiBvcGVucyB0aGUgbmFtZWQgZmlsZS4KCS8vCgkvLyBXaGVuIE9wZW4gcmV0dXJucyBhbiBlcnJvciwgaXQgc2hvdWxkIGJlIG9mIHR5cGUgKlBhdGhFcnJvcgoJLy8gd2l0aCB0aGUgT3AgZmllbGQgc2V0IHRvICJvcGVuIiwgdGhlIFBhdGggZmllbGQgc2V0IHRvIG5hbWUsCgkvLyBhbmQgdGhlIEVyciBmaWVsZCBkZXNjcmliaW5nIHRoZSBwcm9ibGVtLgoJLy8KCS8vIE9wZW4gc2hvdWxkIHJlamVjdCBhdHRlbXB0cyB0byBvcGVuIG5hbWVzIHRoYXQgZG8gbm90IHNhdGlzZnkKCS8vIFZhbGlkUGF0aChuYW1lKSwgcmV0dXJuaW5nIGEgKlBhdGhFcnJvciB3aXRoIEVyciBzZXQgdG8KCS8vIEVyckludmFsaWQgb3IgRXJyTm90RXhpc3QuCglPcGVuKG5hbWUgc3RyaW5nKSAoRmlsZSwgZXJyb3IpCn0KICAgIEFuIEZTIHByb3ZpZGVzIGFjY2VzcyB0byBhIGhpZXJhcmNoaWNhbCBmaWxlIHN5c3RlbS4KCiAgICBUaGUgRlMgaW50ZXJmYWNlIGlzIHRoZSBtaW5pbXVtIGltcGxlbWVudGF0aW9uIHJlcXVpcmVkIG9mIHRoZSBmaWxlIHN5c3RlbS4KICAgIEEgZmlsZSBzeXN0ZW0gbWF5IGltcGxlbWVudCBhZGRpdGlvbmFsIGludGVyZmFjZXMsIHN1Y2ggYXMgUmVhZEZpbGVGUywKICAgIHRvIHByb3ZpZGUgYWRkaXRpb25hbCBvciBvcHRpbWl6ZWQgZnVuY3Rpb25hbGl0eS4KCmZ1bmMgU3ViKGZzeXMgRlMsIGRpciBzdHJpbmcpIChGUywgZXJyb3Ip",
                                              "duration": 266678291,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fs.FS\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype FS interface {\n\t// Open opens the named file.\n\t//\n\t// When Open returns an error, it should be of type *PathError\n\t// with the Op field set to \u0026#34;open\u0026#34;, the Path field set to name,\n\t// and the Err field describing the problem.\n\t//\n\t// Open should reject attempts to open names that do not satisfy\n\t// ValidPath(name), returning a *PathError with Err set to\n\t// ErrInvalid or ErrNotExist.\n\tOpen(name string) (File, error)\n}\n    An FS provides access to a hierarchical file system.\n\n    The FS interface is the minimum implementation required of the file system.\n    A file system may implement additional interfaces, such as ReadFileFS,\n    to provide additional or optimized functionality.\n\nfunc Sub(fsys FS, dir string) (FS, error)",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fs.FS"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBGUyBpbnRlcmZhY2UgewoJLy8gT3BlbiBvcGVucyB0aGUgbmFtZWQgZmlsZS4KCS8vCgkvLyBXaGVuIE9wZW4gcmV0dXJucyBhbiBlcnJvciwgaXQgc2hvdWxkIGJlIG9mIHR5cGUgKlBhdGhFcnJvcgoJLy8gd2l0aCB0aGUgT3AgZmllbGQgc2V0IHRvICJvcGVuIiwgdGhlIFBhdGggZmllbGQgc2V0IHRvIG5hbWUsCgkvLyBhbmQgdGhlIEVyciBmaWVsZCBkZXNjcmliaW5nIHRoZSBwcm9ibGVtLgoJLy8KCS8vIE9wZW4gc2hvdWxkIHJlamVjdCBhdHRlbXB0cyB0byBvcGVuIG5hbWVzIHRoYXQgZG8gbm90IHNhdGlzZnkKCS8vIFZhbGlkUGF0aChuYW1lKSwgcmV0dXJuaW5nIGEgKlBhdGhFcnJvciB3aXRoIEVyciBzZXQgdG8KCS8vIEVyckludmFsaWQgb3IgRXJyTm90RXhpc3QuCglPcGVuKG5hbWUgc3RyaW5nKSAoRmlsZSwgZXJyb3IpCn0KICAgIEFuIEZTIHByb3ZpZGVzIGFjY2VzcyB0byBhIGhpZXJhcmNoaWNhbCBmaWxlIHN5c3RlbS4KCiAgICBUaGUgRlMgaW50ZXJmYWNlIGlzIHRoZSBtaW5pbXVtIGltcGxlbWVudGF0aW9uIHJlcXVpcmVkIG9mIHRoZSBmaWxlIHN5c3RlbS4KICAgIEEgZmlsZSBzeXN0ZW0gbWF5IGltcGxlbWVudCBhZGRpdGlvbmFsIGludGVyZmFjZXMsIHN1Y2ggYXMgUmVhZEZpbGVGUywKICAgIHRvIHByb3ZpZGUgYWRkaXRpb25hbCBvciBvcHRpbWl6ZWQgZnVuY3Rpb25hbGl0eS4KCmZ1bmMgU3ViKGZzeXMgRlMsIGRpciBzdHJpbmcpIChGUywgZXJyb3Ip",
                                            "duration": 266678291,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.58:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#FS",
                                                "href": "https://pkg.go.dev/io/fs#FS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.FS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#FS"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 58,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "There are already examples of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " interface in the standard library already, such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#DirFS",
                                          "href": "https://pkg.go.dev/os#DirFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "os.DirFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#DirFS"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "testing/fstest#MapFS",
                                          "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fstest.MapFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                      }
                                    ],
                                    {
                                      "text": ", and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "embed#FS",
                                          "href": "https://pkg.go.dev/embed#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "embed.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/embed#FS"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fs.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "The File Interface",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#File",
                                          "href": "https://pkg.go.dev/io/fs#File",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#File"
                                      }
                                    ],
                                    {
                                      "text": " interface is used to define a file, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-59"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-59"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.59",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-59"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". While the interface for ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " is very simple, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#File",
                                          "href": "https://pkg.go.dev/io/fs#File",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#File"
                                      }
                                    ],
                                    {
                                      "text": " interface is more complex. A file needs to be able to be read, closed, and able to return its own ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FileInfo",
                                          "href": "https://pkg.go.dev/io/fs#FileInfo",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FileInfo",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FileInfo"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-59",
                                    "type": "listing"
                                  },
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fs.File"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fs.File",
                                          "exec": "go doc fs.File"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fs.File\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype File interface {\n\tStat() (FileInfo, error)\n\tRead([]byte) (int, error)\n\tClose() error\n}\n    A File provides access to a single file. The File interface is the minimum\n    implementation required of the file. Directory files should also implement\n    ReadDirFile. A file may implement io.ReaderAt or io.Seeker as optimizations.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fs.File"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBGaWxlIGludGVyZmFjZSB7CglTdGF0KCkgKEZpbGVJbmZvLCBlcnJvcikKCVJlYWQoW11ieXRlKSAoaW50LCBlcnJvcikKCUNsb3NlKCkgZXJyb3IKfQogICAgQSBGaWxlIHByb3ZpZGVzIGFjY2VzcyB0byBhIHNpbmdsZSBmaWxlLiBUaGUgRmlsZSBpbnRlcmZhY2UgaXMgdGhlIG1pbmltdW0KICAgIGltcGxlbWVudGF0aW9uIHJlcXVpcmVkIG9mIHRoZSBmaWxlLiBEaXJlY3RvcnkgZmlsZXMgc2hvdWxkIGFsc28gaW1wbGVtZW50CiAgICBSZWFkRGlyRmlsZS4gQSBmaWxlIG1heSBpbXBsZW1lbnQgaW8uUmVhZGVyQXQgb3IgaW8uU2Vla2VyIGFzIG9wdGltaXphdGlvbnMu",
                                              "duration": 966313042,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fs.File\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\ntype File interface {\n\tStat() (FileInfo, error)\n\tRead([]byte) (int, error)\n\tClose() error\n}\n    A File provides access to a single file. The File interface is the minimum\n    implementation required of the file. Directory files should also implement\n    ReadDirFile. A file may implement io.ReaderAt or io.Seeker as optimizations.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fs.File"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKdHlwZSBGaWxlIGludGVyZmFjZSB7CglTdGF0KCkgKEZpbGVJbmZvLCBlcnJvcikKCVJlYWQoW11ieXRlKSAoaW50LCBlcnJvcikKCUNsb3NlKCkgZXJyb3IKfQogICAgQSBGaWxlIHByb3ZpZGVzIGFjY2VzcyB0byBhIHNpbmdsZSBmaWxlLiBUaGUgRmlsZSBpbnRlcmZhY2UgaXMgdGhlIG1pbmltdW0KICAgIGltcGxlbWVudGF0aW9uIHJlcXVpcmVkIG9mIHRoZSBmaWxlLiBEaXJlY3RvcnkgZmlsZXMgc2hvdWxkIGFsc28gaW1wbGVtZW50CiAgICBSZWFkRGlyRmlsZS4gQSBmaWxlIG1heSBpbXBsZW1lbnQgaW8uUmVhZGVyQXQgb3IgaW8uU2Vla2VyIGFzIG9wdGltaXphdGlvbnMu",
                                            "duration": 966313042,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.59:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#File",
                                                "href": "https://pkg.go.dev/io/fs#File",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.File",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#File"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 59,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "There are examples of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#File",
                                          "href": "https://pkg.go.dev/io/fs#File",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fs.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#File"
                                      }
                                    ],
                                    {
                                      "text": " in the standard library already, such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#File",
                                          "href": "https://pkg.go.dev/os#File",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "os.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#File"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "testing/fstest#MapFile",
                                          "href": "https://pkg.go.dev/testing/fstest#MapFile",
                                          "target": "_blank"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs.md",
                                            "nodes": [
                                              {
                                                "text": "fstest.MapFile",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/testing/fstest#MapFile"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-60"
                                        },
                                        "file": "fs.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-60"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.60",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-60"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-60",
                                    "type": "listing"
                                  },
                                  "file": "fs.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fstest.MapFile"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fstest.MapFile",
                                          "exec": "go doc fstest.MapFile"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fstest.MapFile\n\npackage fstest // import \u0026#34;testing/fstest\u0026#34;\n\ntype MapFile struct {\n\tData    []byte      // file content\n\tMode    fs.FileMode // FileInfo.Mode\n\tModTime time.Time   // FileInfo.ModTime\n\tSys     any         // FileInfo.Sys\n}\n    A MapFile describes a single file in a MapFS.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fstest.MapFile"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmc3Rlc3QgLy8gaW1wb3J0ICJ0ZXN0aW5nL2ZzdGVzdCIKCnR5cGUgTWFwRmlsZSBzdHJ1Y3QgewoJRGF0YSAgICBbXWJ5dGUgICAgICAvLyBmaWxlIGNvbnRlbnQKCU1vZGUgICAgZnMuRmlsZU1vZGUgLy8gRmlsZUluZm8uTW9kZQoJTW9kVGltZSB0aW1lLlRpbWUgICAvLyBGaWxlSW5mby5Nb2RUaW1lCglTeXMgICAgIGFueSAgICAgICAgIC8vIEZpbGVJbmZvLlN5cwp9CiAgICBBIE1hcEZpbGUgZGVzY3JpYmVzIGEgc2luZ2xlIGZpbGUgaW4gYSBNYXBGUy4=",
                                              "duration": 122787458,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fstest.MapFile\n\npackage fstest // import \u0026#34;testing/fstest\u0026#34;\n\ntype MapFile struct {\n\tData    []byte      // file content\n\tMode    fs.FileMode // FileInfo.Mode\n\tModTime time.Time   // FileInfo.ModTime\n\tSys     any         // FileInfo.Sys\n}\n    A MapFile describes a single file in a MapFS.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fstest.MapFile"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmc3Rlc3QgLy8gaW1wb3J0ICJ0ZXN0aW5nL2ZzdGVzdCIKCnR5cGUgTWFwRmlsZSBzdHJ1Y3QgewoJRGF0YSAgICBbXWJ5dGUgICAgICAvLyBmaWxlIGNvbnRlbnQKCU1vZGUgICAgZnMuRmlsZU1vZGUgLy8gRmlsZUluZm8uTW9kZQoJTW9kVGltZSB0aW1lLlRpbWUgICAvLyBGaWxlSW5mby5Nb2RUaW1lCglTeXMgICAgIGFueSAgICAgICAgIC8vIEZpbGVJbmZvLlN5cwp9CiAgICBBIE1hcEZpbGUgZGVzY3JpYmVzIGEgc2luZ2xlIGZpbGUgaW4gYSBNYXBGUy4=",
                                            "duration": 122787458,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.60:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "testing/fstest#MapFile",
                                                "href": "https://pkg.go.dev/testing/fstest#MapFile",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fstest.MapFile",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/testing/fstest#MapFile"
                                            }
                                          ],
                                          {
                                            "text": " implements ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#File",
                                                "href": "https://pkg.go.dev/io/fs#File",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.File",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#File"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 60,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "The FS Package",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "fs/using.md"
                      },
                      "dir": "fs",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "fs/using.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "fs/using.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Using the FS Interface",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "Previously, we had been using ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "filepath#WalkDir",
                                          "href": "https://pkg.go.dev/filepath#WalkDir",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "filepath.WalkDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/filepath#WalkDir"
                                      }
                                    ],
                                    {
                                      "text": " to walk the directory tree. This worked by walking the file system directly. As a result, we have to make sure that the file system is in the correct state before we can use it. As we have seen, this can cause a lot of setup work to be done. Either we have to keep a completely different folders for each test scenario we have, or we have to create all of the files and folders at the start of the test before we begin. This is a lot of work, and is often error prone.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-61",
                                    "type": "listing"
                                  },
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fs.WalkDir"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fs.WalkDir",
                                          "exec": "go doc fs.WalkDir"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fs.WalkDir\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\nfunc WalkDir(fsys FS, root string, fn WalkDirFunc) error\n    WalkDir walks the file tree rooted at root, calling fn for each file or\n    directory in the tree, including root.\n\n    All errors that arise visiting files and directories are filtered by fn:\n    see the fs.WalkDirFunc documentation for details.\n\n    The files are walked in lexical order, which makes the output deterministic\n    but requires WalkDir to read an entire directory into memory before\n    proceeding to walk that directory.\n\n    WalkDir does not follow symbolic links found in directories, but if root\n    itself is a symbolic link, its target will be walked.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fs.WalkDir"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKZnVuYyBXYWxrRGlyKGZzeXMgRlMsIHJvb3Qgc3RyaW5nLCBmbiBXYWxrRGlyRnVuYykgZXJyb3IKICAgIFdhbGtEaXIgd2Fsa3MgdGhlIGZpbGUgdHJlZSByb290ZWQgYXQgcm9vdCwgY2FsbGluZyBmbiBmb3IgZWFjaCBmaWxlIG9yCiAgICBkaXJlY3RvcnkgaW4gdGhlIHRyZWUsIGluY2x1ZGluZyByb290LgoKICAgIEFsbCBlcnJvcnMgdGhhdCBhcmlzZSB2aXNpdGluZyBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgYXJlIGZpbHRlcmVkIGJ5IGZuOgogICAgc2VlIHRoZSBmcy5XYWxrRGlyRnVuYyBkb2N1bWVudGF0aW9uIGZvciBkZXRhaWxzLgoKICAgIFRoZSBmaWxlcyBhcmUgd2Fsa2VkIGluIGxleGljYWwgb3JkZXIsIHdoaWNoIG1ha2VzIHRoZSBvdXRwdXQgZGV0ZXJtaW5pc3RpYwogICAgYnV0IHJlcXVpcmVzIFdhbGtEaXIgdG8gcmVhZCBhbiBlbnRpcmUgZGlyZWN0b3J5IGludG8gbWVtb3J5IGJlZm9yZQogICAgcHJvY2VlZGluZyB0byB3YWxrIHRoYXQgZGlyZWN0b3J5LgoKICAgIFdhbGtEaXIgZG9lcyBub3QgZm9sbG93IHN5bWJvbGljIGxpbmtzIGZvdW5kIGluIGRpcmVjdG9yaWVzLCBidXQgaWYgcm9vdAogICAgaXRzZWxmIGlzIGEgc3ltYm9saWMgbGluaywgaXRzIHRhcmdldCB3aWxsIGJlIHdhbGtlZC4=",
                                              "duration": 188931750,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fs.WalkDir\n\npackage fs // import \u0026#34;io/fs\u0026#34;\n\nfunc WalkDir(fsys FS, root string, fn WalkDirFunc) error\n    WalkDir walks the file tree rooted at root, calling fn for each file or\n    directory in the tree, including root.\n\n    All errors that arise visiting files and directories are filtered by fn:\n    see the fs.WalkDirFunc documentation for details.\n\n    The files are walked in lexical order, which makes the output deterministic\n    but requires WalkDir to read an entire directory into memory before\n    proceeding to walk that directory.\n\n    WalkDir does not follow symbolic links found in directories, but if root\n    itself is a symbolic link, its target will be walked.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fs.WalkDir"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmcyAvLyBpbXBvcnQgImlvL2ZzIgoKZnVuYyBXYWxrRGlyKGZzeXMgRlMsIHJvb3Qgc3RyaW5nLCBmbiBXYWxrRGlyRnVuYykgZXJyb3IKICAgIFdhbGtEaXIgd2Fsa3MgdGhlIGZpbGUgdHJlZSByb290ZWQgYXQgcm9vdCwgY2FsbGluZyBmbiBmb3IgZWFjaCBmaWxlIG9yCiAgICBkaXJlY3RvcnkgaW4gdGhlIHRyZWUsIGluY2x1ZGluZyByb290LgoKICAgIEFsbCBlcnJvcnMgdGhhdCBhcmlzZSB2aXNpdGluZyBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgYXJlIGZpbHRlcmVkIGJ5IGZuOgogICAgc2VlIHRoZSBmcy5XYWxrRGlyRnVuYyBkb2N1bWVudGF0aW9uIGZvciBkZXRhaWxzLgoKICAgIFRoZSBmaWxlcyBhcmUgd2Fsa2VkIGluIGxleGljYWwgb3JkZXIsIHdoaWNoIG1ha2VzIHRoZSBvdXRwdXQgZGV0ZXJtaW5pc3RpYwogICAgYnV0IHJlcXVpcmVzIFdhbGtEaXIgdG8gcmVhZCBhbiBlbnRpcmUgZGlyZWN0b3J5IGludG8gbWVtb3J5IGJlZm9yZQogICAgcHJvY2VlZGluZyB0byB3YWxrIHRoYXQgZGlyZWN0b3J5LgoKICAgIFdhbGtEaXIgZG9lcyBub3QgZm9sbG93IHN5bWJvbGljIGxpbmtzIGZvdW5kIGluIGRpcmVjdG9yaWVzLCBidXQgaWYgcm9vdAogICAgaXRzZWxmIGlzIGEgc3ltYm9saWMgbGluaywgaXRzIHRhcmdldCB3aWxsIGJlIHdhbGtlZC4=",
                                            "duration": 188931750,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.61:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#WalkDir",
                                                "href": "https://pkg.go.dev/io/fs#WalkDir",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.WalkDir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#WalkDir"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 61,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "If we use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#WalkDir",
                                          "href": "https://pkg.go.dev/io/fs#WalkDir",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "fs.WalkDir",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#WalkDir"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-61"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-61"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.61",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-61"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", instead, which takes, as its first argument, a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " implementation. Instead of walking the file system the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " is walked instead.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-62",
                                    "type": "listing"
                                  },
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "walk",
                                              "src": "fs/src/using/demo.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Walk(cab fs.FS) ([]string, error) {\n\tvar entries []string\n\n\terr := fs.WalkDir(cab, \".\", func(path string, d fs.DirEntry, err error) error {\n\n\t\t// if there was an error, return it\n\t\t// if there is an error, it is most likely\n\t\t// because an error was an encoutered trying\n\t\t// to read the top level directory\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// if the entry is a directory, handle it\n\t\tif d.IsDir() {\n\n\t\t\t// name of the file or directory\n\t\t\tname := d.Name()\n\n\t\t\t// if the directory is a dot return nil\n\t\t\t// this may be the root directory\n\t\t\tif name == \".\" || name == \"..\" {\n\t\t\t\treturn nil\n\t\t\t}\n\n\t\t\t// if the directory name is \"testdata\"\n\t\t\t// or it starts with \".\"\n\t\t\t// or it starts with \"_\"\n\t\t\t// then return filepath.SkipDir\n\t\t\tif name == \"testdata\" || strings.HasPrefix(name, \".\") || strings.HasPrefix(name, \"_\") {\n\t\t\t\treturn fs.SkipDir\n\t\t\t}\n\n\t\t\treturn nil\n\t\t}\n\n\t\t// append the entry to the list\n\t\tentries = append(entries, path)\n\n\t\t// return nil to tell walk to continue\n\t\treturn nil\n\t})\n\n\treturn entries, err\n}",
                                                "file": "fs/src/using/demo.go",
                                                "lang": "go",
                                                "name": "walk",
                                                "start": 8,
                                                "end": 57,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.62:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#WalkDir",
                                                "href": "https://pkg.go.dev/io/fs#WalkDir",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.WalkDir",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#WalkDir"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 62,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-62"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-62"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.62",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-62"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we can continue to use the same code inside of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#WalkFunc",
                                          "href": "https://pkg.go.dev/io/fs#WalkFunc",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "fs.WalkFunc",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#WalkFunc"
                                      }
                                    ],
                                    {
                                      "text": " function as we did before. Our test code only needs two small changes now to make it work. The first is we an implementation of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " interface to pass to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function. For now, we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#DirFS",
                                          "href": "https://pkg.go.dev/os#DirFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "os.DirFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#DirFS"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-63"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-63"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.63",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-63"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". The implementation will be backed directly by the file system.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-63",
                                    "type": "listing"
                                  },
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "os.DirFS"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "os.DirFS",
                                          "exec": "go doc os.DirFS"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc os.DirFS\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc DirFS(dir string) fs.FS\n    DirFS returns a file system (an fs.FS) for the tree of files rooted at the\n    directory dir.\n\n    Note that DirFS(\u0026#34;/prefix\u0026#34;) only guarantees that the Open calls\n    it makes to the operating system will begin with \u0026#34;/prefix\u0026#34;:\n    DirFS(\u0026#34;/prefix\u0026#34;).Open(\u0026#34;file\u0026#34;) is the same as os.Open(\u0026#34;/prefix/file\u0026#34;).\n    So if /prefix/file is a symbolic link pointing outside the /prefix tree,\n    then using DirFS does not stop the access any more than using os.Open does.\n    Additionally, the root of the fs.FS returned for a relative path,\n    DirFS(\u0026#34;prefix\u0026#34;), will be affected by later calls to Chdir. DirFS is\n    therefore not a general substitute for a chroot-style security mechanism\n    when the directory tree contains arbitrary content.\n\n    The directory dir must not be \u0026#34;\u0026#34;.\n\n    The result implements io/fs.StatFS, io/fs.ReadFileFS and io/fs.ReadDirFS.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "os.DirFS"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBEaXJGUyhkaXIgc3RyaW5nKSBmcy5GUwogICAgRGlyRlMgcmV0dXJucyBhIGZpbGUgc3lzdGVtIChhbiBmcy5GUykgZm9yIHRoZSB0cmVlIG9mIGZpbGVzIHJvb3RlZCBhdCB0aGUKICAgIGRpcmVjdG9yeSBkaXIuCgogICAgTm90ZSB0aGF0IERpckZTKCIvcHJlZml4Iikgb25seSBndWFyYW50ZWVzIHRoYXQgdGhlIE9wZW4gY2FsbHMKICAgIGl0IG1ha2VzIHRvIHRoZSBvcGVyYXRpbmcgc3lzdGVtIHdpbGwgYmVnaW4gd2l0aCAiL3ByZWZpeCI6CiAgICBEaXJGUygiL3ByZWZpeCIpLk9wZW4oImZpbGUiKSBpcyB0aGUgc2FtZSBhcyBvcy5PcGVuKCIvcHJlZml4L2ZpbGUiKS4KICAgIFNvIGlmIC9wcmVmaXgvZmlsZSBpcyBhIHN5bWJvbGljIGxpbmsgcG9pbnRpbmcgb3V0c2lkZSB0aGUgL3ByZWZpeCB0cmVlLAogICAgdGhlbiB1c2luZyBEaXJGUyBkb2VzIG5vdCBzdG9wIHRoZSBhY2Nlc3MgYW55IG1vcmUgdGhhbiB1c2luZyBvcy5PcGVuIGRvZXMuCiAgICBBZGRpdGlvbmFsbHksIHRoZSByb290IG9mIHRoZSBmcy5GUyByZXR1cm5lZCBmb3IgYSByZWxhdGl2ZSBwYXRoLAogICAgRGlyRlMoInByZWZpeCIpLCB3aWxsIGJlIGFmZmVjdGVkIGJ5IGxhdGVyIGNhbGxzIHRvIENoZGlyLiBEaXJGUyBpcwogICAgdGhlcmVmb3JlIG5vdCBhIGdlbmVyYWwgc3Vic3RpdHV0ZSBmb3IgYSBjaHJvb3Qtc3R5bGUgc2VjdXJpdHkgbWVjaGFuaXNtCiAgICB3aGVuIHRoZSBkaXJlY3RvcnkgdHJlZSBjb250YWlucyBhcmJpdHJhcnkgY29udGVudC4KCiAgICBUaGUgZGlyZWN0b3J5IGRpciBtdXN0IG5vdCBiZSAiIi4KCiAgICBUaGUgcmVzdWx0IGltcGxlbWVudHMgaW8vZnMuU3RhdEZTLCBpby9mcy5SZWFkRmlsZUZTIGFuZCBpby9mcy5SZWFkRGlyRlMu",
                                              "duration": 358128500,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc os.DirFS\n\npackage os // import \u0026#34;os\u0026#34;\n\nfunc DirFS(dir string) fs.FS\n    DirFS returns a file system (an fs.FS) for the tree of files rooted at the\n    directory dir.\n\n    Note that DirFS(\u0026#34;/prefix\u0026#34;) only guarantees that the Open calls\n    it makes to the operating system will begin with \u0026#34;/prefix\u0026#34;:\n    DirFS(\u0026#34;/prefix\u0026#34;).Open(\u0026#34;file\u0026#34;) is the same as os.Open(\u0026#34;/prefix/file\u0026#34;).\n    So if /prefix/file is a symbolic link pointing outside the /prefix tree,\n    then using DirFS does not stop the access any more than using os.Open does.\n    Additionally, the root of the fs.FS returned for a relative path,\n    DirFS(\u0026#34;prefix\u0026#34;), will be affected by later calls to Chdir. DirFS is\n    therefore not a general substitute for a chroot-style security mechanism\n    when the directory tree contains arbitrary content.\n\n    The directory dir must not be \u0026#34;\u0026#34;.\n\n    The result implements io/fs.StatFS, io/fs.ReadFileFS and io/fs.ReadDirFS.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "os.DirFS"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBvcyAvLyBpbXBvcnQgIm9zIgoKZnVuYyBEaXJGUyhkaXIgc3RyaW5nKSBmcy5GUwogICAgRGlyRlMgcmV0dXJucyBhIGZpbGUgc3lzdGVtIChhbiBmcy5GUykgZm9yIHRoZSB0cmVlIG9mIGZpbGVzIHJvb3RlZCBhdCB0aGUKICAgIGRpcmVjdG9yeSBkaXIuCgogICAgTm90ZSB0aGF0IERpckZTKCIvcHJlZml4Iikgb25seSBndWFyYW50ZWVzIHRoYXQgdGhlIE9wZW4gY2FsbHMKICAgIGl0IG1ha2VzIHRvIHRoZSBvcGVyYXRpbmcgc3lzdGVtIHdpbGwgYmVnaW4gd2l0aCAiL3ByZWZpeCI6CiAgICBEaXJGUygiL3ByZWZpeCIpLk9wZW4oImZpbGUiKSBpcyB0aGUgc2FtZSBhcyBvcy5PcGVuKCIvcHJlZml4L2ZpbGUiKS4KICAgIFNvIGlmIC9wcmVmaXgvZmlsZSBpcyBhIHN5bWJvbGljIGxpbmsgcG9pbnRpbmcgb3V0c2lkZSB0aGUgL3ByZWZpeCB0cmVlLAogICAgdGhlbiB1c2luZyBEaXJGUyBkb2VzIG5vdCBzdG9wIHRoZSBhY2Nlc3MgYW55IG1vcmUgdGhhbiB1c2luZyBvcy5PcGVuIGRvZXMuCiAgICBBZGRpdGlvbmFsbHksIHRoZSByb290IG9mIHRoZSBmcy5GUyByZXR1cm5lZCBmb3IgYSByZWxhdGl2ZSBwYXRoLAogICAgRGlyRlMoInByZWZpeCIpLCB3aWxsIGJlIGFmZmVjdGVkIGJ5IGxhdGVyIGNhbGxzIHRvIENoZGlyLiBEaXJGUyBpcwogICAgdGhlcmVmb3JlIG5vdCBhIGdlbmVyYWwgc3Vic3RpdHV0ZSBmb3IgYSBjaHJvb3Qtc3R5bGUgc2VjdXJpdHkgbWVjaGFuaXNtCiAgICB3aGVuIHRoZSBkaXJlY3RvcnkgdHJlZSBjb250YWlucyBhcmJpdHJhcnkgY29udGVudC4KCiAgICBUaGUgZGlyZWN0b3J5IGRpciBtdXN0IG5vdCBiZSAiIi4KCiAgICBUaGUgcmVzdWx0IGltcGxlbWVudHMgaW8vZnMuU3RhdEZTLCBpby9mcy5SZWFkRmlsZUZTIGFuZCBpby9mcy5SZWFkRGlyRlMu",
                                            "duration": 358128500,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.63:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#DirFS",
                                                "href": "https://pkg.go.dev/os#DirFS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "os.DirFS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#DirFS"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 63,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fs/using.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "File Paths",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "The other change we need to make is the expected paths. Before, we were expecting paths such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "text": "/data/a.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " returned from our ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function. However, when working with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " implementations, the paths returned are relative to the root of the implementation. In this case, we are using ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "text": "os.DirFS(\"data\")",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " to create the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " implementation. This places ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " at the root of the file system implementation and paths returned from the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function will be relative to this root.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "blockquote",
                                "file": "fs/using.md",
                                "nodes": [
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  },
                                  [
                                    {
                                      "atom": "p",
                                      "file": "fs/using.md",
                                      "nodes": [
                                        {
                                          "text": "Note: Paths are expected to use ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "/",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        {
                                          "text": " as the path separator, regardless of the operating system.",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Paragraph"
                                    }
                                  ],
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  }
                                ],
                                "type": "*hype.Element"
                              },
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "We need to update our test code to for the relative paths, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "text": "a.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", to be returned instead of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "text": "/data/a.txt",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-64",
                                    "type": "listing"
                                  },
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "fs/src/using/demo_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Walk(t *testing.T) {\n\tt.Parallel()\n\n\texp := []string{\n\t\t\"a.txt\",\n\t\t\"b.txt\",\n\t\t\"e/f/g.txt\",\n\t\t\"e/f/h.txt\",\n\t\t\"e/j.txt\",\n\t}\n\n\tcab := os.DirFS(\"data\")\n\n\tact, err := Walk(cab)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tes := strings.Join(exp, \", \")\n\tas := strings.Join(act, \", \")\n\n\tif es != as {\n\t\tt.Fatalf(\"expected %s, got %s\", es, as)\n\t}\n}",
                                                "file": "fs/src/using/demo_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 9,
                                                "end": 36,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "fs",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "fs/src/using",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n--- PASS: Test_Walk (0.00s)\nPASS\nok  \tdemo\t0.673s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/using",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKLS0tIFBBU1M6IFRlc3RfV2FsayAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuNjczcw==",
                                              "duration": 2137029334,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n--- PASS: Test_Walk (0.00s)\nPASS\nok  \tdemo\t0.673s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/using",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKLS0tIFBBU1M6IFRlc3RfV2FsayAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuNjczcw==",
                                            "duration": 2137029334,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.64:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Testing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "Walk",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 64,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/using.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from the test output in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-64"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-64"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.64",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-64"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we have successfully updated our code to use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/using.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/using.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " interface.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Using the FS Interface",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "fs/mock.md"
                      },
                      "dir": "fs",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "fs/mock.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "fs/mock.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Mocking a File System",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "One of the biggest advantages of now having interfaces for the file system is that it allows us to mock it out for testing. We no longer need to either have the files already on disk or have to create them before we can test our code. Instead, we just need to provide an interface that has that information already in it.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "To help make testing easier, we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fstest",
                                          "href": "https://pkg.go.dev/fstest",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fstest",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fstest"
                                      }
                                    ],
                                    {
                                      "text": " package. In particular, we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "testing/fstest#MapFS",
                                          "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fstest.MapFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                      }
                                    ],
                                    {
                                      "text": " type, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-65"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-65"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.65",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-65"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", to mock out a file system using a map.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-65",
                                    "type": "listing"
                                  },
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fstest.MapFS"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fstest.MapFS",
                                          "exec": "go doc fstest.MapFS"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fstest.MapFS\n\npackage fstest // import \u0026#34;testing/fstest\u0026#34;\n\ntype MapFS map[string]*MapFile\n    A MapFS is a simple in-memory file system for use in tests, represented as\n    a map from path names (arguments to Open) to information about the files or\n    directories they represent.\n\n    The map need not include parent directories for files contained in the map;\n    those will be synthesized if needed. But a directory can still be included\n    by setting the MapFile.Mode\u0026#39;s ModeDir bit; this may be necessary for\n    detailed control over the directory\u0026#39;s FileInfo or to create an empty\n    directory.\n\n    File system operations read directly from the map, so that the file system\n    can be changed by editing the map as needed. An implication is that file\n    system operations must not run concurrently with changes to the map, which\n    would be a race. Another implication is that opening or reading a directory\n    requires iterating over the entire map, so a MapFS should typically be used\n    with not more than a few hundred entries or directory reads.\n\nfunc (fsys MapFS) Glob(pattern string) ([]string, error)\nfunc (fsys MapFS) Open(name string) (fs.File, error)\nfunc (fsys MapFS) ReadDir(name string) ([]fs.DirEntry, error)\nfunc (fsys MapFS) ReadFile(name string) ([]byte, error)\nfunc (fsys MapFS) Stat(name string) (fs.FileInfo, error)\nfunc (fsys MapFS) Sub(dir string) (fs.FS, error)",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fstest.MapFS"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmc3Rlc3QgLy8gaW1wb3J0ICJ0ZXN0aW5nL2ZzdGVzdCIKCnR5cGUgTWFwRlMgbWFwW3N0cmluZ10qTWFwRmlsZQogICAgQSBNYXBGUyBpcyBhIHNpbXBsZSBpbi1tZW1vcnkgZmlsZSBzeXN0ZW0gZm9yIHVzZSBpbiB0ZXN0cywgcmVwcmVzZW50ZWQgYXMKICAgIGEgbWFwIGZyb20gcGF0aCBuYW1lcyAoYXJndW1lbnRzIHRvIE9wZW4pIHRvIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmaWxlcyBvcgogICAgZGlyZWN0b3JpZXMgdGhleSByZXByZXNlbnQuCgogICAgVGhlIG1hcCBuZWVkIG5vdCBpbmNsdWRlIHBhcmVudCBkaXJlY3RvcmllcyBmb3IgZmlsZXMgY29udGFpbmVkIGluIHRoZSBtYXA7CiAgICB0aG9zZSB3aWxsIGJlIHN5bnRoZXNpemVkIGlmIG5lZWRlZC4gQnV0IGEgZGlyZWN0b3J5IGNhbiBzdGlsbCBiZSBpbmNsdWRlZAogICAgYnkgc2V0dGluZyB0aGUgTWFwRmlsZS5Nb2RlJ3MgTW9kZURpciBiaXQ7IHRoaXMgbWF5IGJlIG5lY2Vzc2FyeSBmb3IKICAgIGRldGFpbGVkIGNvbnRyb2wgb3ZlciB0aGUgZGlyZWN0b3J5J3MgRmlsZUluZm8gb3IgdG8gY3JlYXRlIGFuIGVtcHR5CiAgICBkaXJlY3RvcnkuCgogICAgRmlsZSBzeXN0ZW0gb3BlcmF0aW9ucyByZWFkIGRpcmVjdGx5IGZyb20gdGhlIG1hcCwgc28gdGhhdCB0aGUgZmlsZSBzeXN0ZW0KICAgIGNhbiBiZSBjaGFuZ2VkIGJ5IGVkaXRpbmcgdGhlIG1hcCBhcyBuZWVkZWQuIEFuIGltcGxpY2F0aW9uIGlzIHRoYXQgZmlsZQogICAgc3lzdGVtIG9wZXJhdGlvbnMgbXVzdCBub3QgcnVuIGNvbmN1cnJlbnRseSB3aXRoIGNoYW5nZXMgdG8gdGhlIG1hcCwgd2hpY2gKICAgIHdvdWxkIGJlIGEgcmFjZS4gQW5vdGhlciBpbXBsaWNhdGlvbiBpcyB0aGF0IG9wZW5pbmcgb3IgcmVhZGluZyBhIGRpcmVjdG9yeQogICAgcmVxdWlyZXMgaXRlcmF0aW5nIG92ZXIgdGhlIGVudGlyZSBtYXAsIHNvIGEgTWFwRlMgc2hvdWxkIHR5cGljYWxseSBiZSB1c2VkCiAgICB3aXRoIG5vdCBtb3JlIHRoYW4gYSBmZXcgaHVuZHJlZCBlbnRyaWVzIG9yIGRpcmVjdG9yeSByZWFkcy4KCmZ1bmMgKGZzeXMgTWFwRlMpIEdsb2IocGF0dGVybiBzdHJpbmcpIChbXXN0cmluZywgZXJyb3IpCmZ1bmMgKGZzeXMgTWFwRlMpIE9wZW4obmFtZSBzdHJpbmcpIChmcy5GaWxlLCBlcnJvcikKZnVuYyAoZnN5cyBNYXBGUykgUmVhZERpcihuYW1lIHN0cmluZykgKFtdZnMuRGlyRW50cnksIGVycm9yKQpmdW5jIChmc3lzIE1hcEZTKSBSZWFkRmlsZShuYW1lIHN0cmluZykgKFtdYnl0ZSwgZXJyb3IpCmZ1bmMgKGZzeXMgTWFwRlMpIFN0YXQobmFtZSBzdHJpbmcpIChmcy5GaWxlSW5mbywgZXJyb3IpCmZ1bmMgKGZzeXMgTWFwRlMpIFN1YihkaXIgc3RyaW5nKSAoZnMuRlMsIGVycm9yKQ==",
                                              "duration": 998349375,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fstest.MapFS\n\npackage fstest // import \u0026#34;testing/fstest\u0026#34;\n\ntype MapFS map[string]*MapFile\n    A MapFS is a simple in-memory file system for use in tests, represented as\n    a map from path names (arguments to Open) to information about the files or\n    directories they represent.\n\n    The map need not include parent directories for files contained in the map;\n    those will be synthesized if needed. But a directory can still be included\n    by setting the MapFile.Mode\u0026#39;s ModeDir bit; this may be necessary for\n    detailed control over the directory\u0026#39;s FileInfo or to create an empty\n    directory.\n\n    File system operations read directly from the map, so that the file system\n    can be changed by editing the map as needed. An implication is that file\n    system operations must not run concurrently with changes to the map, which\n    would be a race. Another implication is that opening or reading a directory\n    requires iterating over the entire map, so a MapFS should typically be used\n    with not more than a few hundred entries or directory reads.\n\nfunc (fsys MapFS) Glob(pattern string) ([]string, error)\nfunc (fsys MapFS) Open(name string) (fs.File, error)\nfunc (fsys MapFS) ReadDir(name string) ([]fs.DirEntry, error)\nfunc (fsys MapFS) ReadFile(name string) ([]byte, error)\nfunc (fsys MapFS) Stat(name string) (fs.FileInfo, error)\nfunc (fsys MapFS) Sub(dir string) (fs.FS, error)",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fstest.MapFS"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmc3Rlc3QgLy8gaW1wb3J0ICJ0ZXN0aW5nL2ZzdGVzdCIKCnR5cGUgTWFwRlMgbWFwW3N0cmluZ10qTWFwRmlsZQogICAgQSBNYXBGUyBpcyBhIHNpbXBsZSBpbi1tZW1vcnkgZmlsZSBzeXN0ZW0gZm9yIHVzZSBpbiB0ZXN0cywgcmVwcmVzZW50ZWQgYXMKICAgIGEgbWFwIGZyb20gcGF0aCBuYW1lcyAoYXJndW1lbnRzIHRvIE9wZW4pIHRvIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmaWxlcyBvcgogICAgZGlyZWN0b3JpZXMgdGhleSByZXByZXNlbnQuCgogICAgVGhlIG1hcCBuZWVkIG5vdCBpbmNsdWRlIHBhcmVudCBkaXJlY3RvcmllcyBmb3IgZmlsZXMgY29udGFpbmVkIGluIHRoZSBtYXA7CiAgICB0aG9zZSB3aWxsIGJlIHN5bnRoZXNpemVkIGlmIG5lZWRlZC4gQnV0IGEgZGlyZWN0b3J5IGNhbiBzdGlsbCBiZSBpbmNsdWRlZAogICAgYnkgc2V0dGluZyB0aGUgTWFwRmlsZS5Nb2RlJ3MgTW9kZURpciBiaXQ7IHRoaXMgbWF5IGJlIG5lY2Vzc2FyeSBmb3IKICAgIGRldGFpbGVkIGNvbnRyb2wgb3ZlciB0aGUgZGlyZWN0b3J5J3MgRmlsZUluZm8gb3IgdG8gY3JlYXRlIGFuIGVtcHR5CiAgICBkaXJlY3RvcnkuCgogICAgRmlsZSBzeXN0ZW0gb3BlcmF0aW9ucyByZWFkIGRpcmVjdGx5IGZyb20gdGhlIG1hcCwgc28gdGhhdCB0aGUgZmlsZSBzeXN0ZW0KICAgIGNhbiBiZSBjaGFuZ2VkIGJ5IGVkaXRpbmcgdGhlIG1hcCBhcyBuZWVkZWQuIEFuIGltcGxpY2F0aW9uIGlzIHRoYXQgZmlsZQogICAgc3lzdGVtIG9wZXJhdGlvbnMgbXVzdCBub3QgcnVuIGNvbmN1cnJlbnRseSB3aXRoIGNoYW5nZXMgdG8gdGhlIG1hcCwgd2hpY2gKICAgIHdvdWxkIGJlIGEgcmFjZS4gQW5vdGhlciBpbXBsaWNhdGlvbiBpcyB0aGF0IG9wZW5pbmcgb3IgcmVhZGluZyBhIGRpcmVjdG9yeQogICAgcmVxdWlyZXMgaXRlcmF0aW5nIG92ZXIgdGhlIGVudGlyZSBtYXAsIHNvIGEgTWFwRlMgc2hvdWxkIHR5cGljYWxseSBiZSB1c2VkCiAgICB3aXRoIG5vdCBtb3JlIHRoYW4gYSBmZXcgaHVuZHJlZCBlbnRyaWVzIG9yIGRpcmVjdG9yeSByZWFkcy4KCmZ1bmMgKGZzeXMgTWFwRlMpIEdsb2IocGF0dGVybiBzdHJpbmcpIChbXXN0cmluZywgZXJyb3IpCmZ1bmMgKGZzeXMgTWFwRlMpIE9wZW4obmFtZSBzdHJpbmcpIChmcy5GaWxlLCBlcnJvcikKZnVuYyAoZnN5cyBNYXBGUykgUmVhZERpcihuYW1lIHN0cmluZykgKFtdZnMuRGlyRW50cnksIGVycm9yKQpmdW5jIChmc3lzIE1hcEZTKSBSZWFkRmlsZShuYW1lIHN0cmluZykgKFtdYnl0ZSwgZXJyb3IpCmZ1bmMgKGZzeXMgTWFwRlMpIFN0YXQobmFtZSBzdHJpbmcpIChmcy5GaWxlSW5mbywgZXJyb3IpCmZ1bmMgKGZzeXMgTWFwRlMpIFN1YihkaXIgc3RyaW5nKSAoZnMuRlMsIGVycm9yKQ==",
                                            "duration": 998349375,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.65:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "testing/fstest#MapFS",
                                                "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fstest.MapFS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 65,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "testing/fstest#MapFile",
                                          "href": "https://pkg.go.dev/testing/fstest#MapFile",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fstest.MapFile",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/testing/fstest#MapFile"
                                      }
                                    ],
                                    {
                                      "text": " type, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-66"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-66"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.66",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-66"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", is provided to help with creating files in memory and implementing the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#File",
                                          "href": "https://pkg.go.dev/io/fs#File",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fs.File",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#File"
                                      }
                                    ],
                                    {
                                      "text": " interface.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-66",
                                    "type": "listing"
                                  },
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fstest.MapFile"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fstest.MapFile",
                                          "exec": "go doc fstest.MapFile"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fstest.MapFile\n\npackage fstest // import \u0026#34;testing/fstest\u0026#34;\n\ntype MapFile struct {\n\tData    []byte      // file content\n\tMode    fs.FileMode // FileInfo.Mode\n\tModTime time.Time   // FileInfo.ModTime\n\tSys     any         // FileInfo.Sys\n}\n    A MapFile describes a single file in a MapFS.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fstest.MapFile"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmc3Rlc3QgLy8gaW1wb3J0ICJ0ZXN0aW5nL2ZzdGVzdCIKCnR5cGUgTWFwRmlsZSBzdHJ1Y3QgewoJRGF0YSAgICBbXWJ5dGUgICAgICAvLyBmaWxlIGNvbnRlbnQKCU1vZGUgICAgZnMuRmlsZU1vZGUgLy8gRmlsZUluZm8uTW9kZQoJTW9kVGltZSB0aW1lLlRpbWUgICAvLyBGaWxlSW5mby5Nb2RUaW1lCglTeXMgICAgIGFueSAgICAgICAgIC8vIEZpbGVJbmZvLlN5cwp9CiAgICBBIE1hcEZpbGUgZGVzY3JpYmVzIGEgc2luZ2xlIGZpbGUgaW4gYSBNYXBGUy4=",
                                              "duration": 1290460958,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fstest.MapFile\n\npackage fstest // import \u0026#34;testing/fstest\u0026#34;\n\ntype MapFile struct {\n\tData    []byte      // file content\n\tMode    fs.FileMode // FileInfo.Mode\n\tModTime time.Time   // FileInfo.ModTime\n\tSys     any         // FileInfo.Sys\n}\n    A MapFile describes a single file in a MapFS.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fstest.MapFile"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmc3Rlc3QgLy8gaW1wb3J0ICJ0ZXN0aW5nL2ZzdGVzdCIKCnR5cGUgTWFwRmlsZSBzdHJ1Y3QgewoJRGF0YSAgICBbXWJ5dGUgICAgICAvLyBmaWxlIGNvbnRlbnQKCU1vZGUgICAgZnMuRmlsZU1vZGUgLy8gRmlsZUluZm8uTW9kZQoJTW9kVGltZSB0aW1lLlRpbWUgICAvLyBGaWxlSW5mby5Nb2RUaW1lCglTeXMgICAgIGFueSAgICAgICAgIC8vIEZpbGVJbmZvLlN5cwp9CiAgICBBIE1hcEZpbGUgZGVzY3JpYmVzIGEgc2luZ2xlIGZpbGUgaW4gYSBNYXBGUy4=",
                                            "duration": 1290460958,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.66:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "testing/fstest#MapFile",
                                                "href": "https://pkg.go.dev/testing/fstest#MapFile",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fstest.MapFile",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/testing/fstest#MapFile"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 66,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fs/mock.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Using MapFS",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "Because the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function already takes the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " interface, we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "testing/fstest#MapFS",
                                          "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fstest.MapFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                      }
                                    ],
                                    {
                                      "text": " type to create a file system that has the files we need for our test in it.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-67"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-67"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.67",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-67"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we create a helper function that will create a new ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "testing/fstest#MapFS",
                                          "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fstest.MapFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                      }
                                    ],
                                    {
                                      "text": " type and fill it with the files we need.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-67",
                                    "type": "listing"
                                  },
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "fs/src/mock/demo_test.go#helper"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func createTestFS(t testing.TB) fstest.MapFS {\n\tt.Helper()\n\n\tcab := fstest.MapFS{}\n\n\tfiles := []string{\n\t\t\".hidden/d.txt\",\n\t\t\"a.txt\",\n\t\t\"b.txt\",\n\t\t\"e/f/_ignore/i.txt\",\n\t\t\"e/f/g.txt\",\n\t\t\"e/f/h.txt\",\n\t\t\"e/j.txt\",\n\t\t\"testdata/c.txt\",\n\t}\n\n\tfor _, path := range files {\n\t\tcab[path] = \u0026fstest.MapFile{\n\t\t\tData: []byte(strings.ToUpper(path)),\n\t\t}\n\t}\n\treturn cab\n}",
                                                "file": "fs/src/mock/demo_test.go",
                                                "lang": "go",
                                                "name": "helper",
                                                "start": 9,
                                                "end": 34,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.67:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Creating a helper function to populate a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "testing/fstest#MapFS",
                                                "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fstest.MapFS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 67,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "If we look at the file system directly, we can see that there are no additional files on disk for us to use in our tests. We are relying on the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "testing/fstest#MapFS",
                                          "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fstest.MapFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                      }
                                    ],
                                    {
                                      "text": " type to provide the files we need.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-68",
                                    "type": "listing"
                                  },
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "tree",
                                          "-a"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "tree -a",
                                          "src": "fs/src/mock"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ tree -a\n\n.\n├── demo.go\n├── demo_test.go\n└── go.mod\n\n1 directory, 3 files",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "tree",
                                                "-a"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/mock",
                                              "stdout": "LgrilJzilIDilIAgZGVtby5nbwrilJzilIDilIAgZGVtb190ZXN0LmdvCuKUlOKUgOKUgCBnby5tb2QKCjEgZGlyZWN0b3J5LCAzIGZpbGVz",
                                              "duration": 75022666,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ tree -a\n\n.\n├── demo.go\n├── demo_test.go\n└── go.mod\n\n1 directory, 3 files",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "tree",
                                              "-a"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/mock",
                                            "stdout": "LgrilJzilIDilIAgZGVtby5nbwrilJzilIDilIAgZGVtb190ZXN0LmdvCuKUlOKUgOKUgCBnby5tb2QKCjEgZGlyZWN0b3J5LCAzIGZpbGVz",
                                            "duration": 75022666,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.68:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "No additional test files are needed when using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "testing/fstest#MapFS",
                                                "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fstest.MapFS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 68,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "Inside of the test itself, we can use the helper function to get the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "testing/fstest#MapFS",
                                          "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "fstest.MapFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                      }
                                    ],
                                    {
                                      "text": " and pass that to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function, instead of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "os#DirFS",
                                          "href": "https://pkg.go.dev/os#DirFS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/mock.md",
                                            "nodes": [
                                              {
                                                "text": "os.DirFS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/os#DirFS"
                                      }
                                    ],
                                    {
                                      "text": " implementation we were using before.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-69",
                                    "type": "listing"
                                  },
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "fs/src/mock/demo_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Walk(t *testing.T) {\n\tt.Parallel()\n\n\tcab := createTestFS(t)\n\n\texp := []string{\n\t\t\"a.txt\",\n\t\t\"b.txt\",\n\t\t\"e/f/g.txt\",\n\t\t\"e/f/h.txt\",\n\t\t\"e/j.txt\",\n\t}\n\n\tact, err := Walk(cab)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tes := strings.Join(exp, \", \")\n\tas := strings.Join(act, \", \")\n\n\tif es != as {\n\t\tt.Fatalf(\"expected %s, got %s\", es, as)\n\t}\n}",
                                                "file": "fs/src/mock/demo_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 36,
                                                "end": 63,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "fs",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "fs/src/mock",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n--- PASS: Test_Walk (0.00s)\nPASS\nok  \tdemo\t0.733s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/mock",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKLS0tIFBBU1M6IFRlc3RfV2FsayAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuNzMzcw==",
                                              "duration": 2218091792,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n--- PASS: Test_Walk (0.00s)\nPASS\nok  \tdemo\t0.733s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/mock",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKLS0tIFBBU1M6IFRlc3RfV2FsayAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuNzMzcw==",
                                            "duration": 2218091792,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.69:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using the helper function to get the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "testing/fstest#MapFS",
                                                "href": "https://pkg.go.dev/testing/fstest#MapFS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fstest.MapFS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/testing/fstest#MapFS"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 69,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/mock.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from our test output, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-69"
                                        },
                                        "file": "fs/mock.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-69"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.69",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-69"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we are now able to test our code without having to worry about the files on disk.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Mocking a File System",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "fs/embed.md"
                      },
                      "dir": "fs",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "fs/embed.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "fs/embed.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Embedding Files",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "As was mentioned earlier, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fs",
                                          "href": "https://pkg.go.dev/fs",
                                          "target": "_blank"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/embed.md",
                                            "nodes": [
                                              {
                                                "text": "fs",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fs"
                                      }
                                    ],
                                    {
                                      "text": " package, and the subsequent changes to the standard library, were added to allow for the embedding of files, such as HTML, JavaScript, and CSS, into the final binary.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "To use this feature, we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "embed",
                                          "href": "https://pkg.go.dev/embed",
                                          "target": "_blank"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/embed.md",
                                            "nodes": [
                                              {
                                                "text": "embed",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/embed"
                                      }
                                    ],
                                    {
                                      "text": " package and the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "//go:embed",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directive to define which file, or files, to embed, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-70"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-70"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.70",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-70"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-70",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "embed"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "embed",
                                          "exec": "go doc embed",
                                          "truncate": "9"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc embed\n\npackage embed // import \u0026#34;embed\u0026#34;\n\nPackage embed provides access to files embedded in the running Go program.\n\nGo source files that import \u0026#34;embed\u0026#34; can use the //go:embed directive to\ninitialize a variable of type string, []byte, or FS with the contents of files\nread from the package directory or subdirectories at compile time.\n...",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "embed"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBlbWJlZCAvLyBpbXBvcnQgImVtYmVkIgoKUGFja2FnZSBlbWJlZCBwcm92aWRlcyBhY2Nlc3MgdG8gZmlsZXMgZW1iZWRkZWQgaW4gdGhlIHJ1bm5pbmcgR28gcHJvZ3JhbS4KCkdvIHNvdXJjZSBmaWxlcyB0aGF0IGltcG9ydCAiZW1iZWQiIGNhbiB1c2UgdGhlIC8vZ286ZW1iZWQgZGlyZWN0aXZlIHRvCmluaXRpYWxpemUgYSB2YXJpYWJsZSBvZiB0eXBlIHN0cmluZywgW11ieXRlLCBvciBGUyB3aXRoIHRoZSBjb250ZW50cyBvZiBmaWxlcwpyZWFkIGZyb20gdGhlIHBhY2thZ2UgZGlyZWN0b3J5IG9yIHN1YmRpcmVjdG9yaWVzIGF0IGNvbXBpbGUgdGltZS4KCkZvciBleGFtcGxlLCBoZXJlIGFyZSB0aHJlZSB3YXlzIHRvIGVtYmVkIGEgZmlsZSBuYW1lZCBoZWxsby50eHQgYW5kIHRoZW4gcHJpbnQKaXRzIGNvbnRlbnRzIGF0IHJ1biB0aW1lLgoKRW1iZWRkaW5nIG9uZSBmaWxlIGludG8gYSBzdHJpbmc6CgogICAgaW1wb3J0IF8gImVtYmVkIgoKICAgIC8vZ286ZW1iZWQgaGVsbG8udHh0CiAgICB2YXIgcyBzdHJpbmcKICAgIHByaW50KHMpCgpFbWJlZGRpbmcgb25lIGZpbGUgaW50byBhIHNsaWNlIG9mIGJ5dGVzOgoKICAgIGltcG9ydCBfICJlbWJlZCIKCiAgICAvL2dvOmVtYmVkIGhlbGxvLnR4dAogICAgdmFyIGIgW11ieXRlCiAgICBwcmludChzdHJpbmcoYikpCgpFbWJlZGRlZCBvbmUgb3IgbW9yZSBmaWxlcyBpbnRvIGEgZmlsZSBzeXN0ZW06CgogICAgaW1wb3J0ICJlbWJlZCIKCiAgICAvL2dvOmVtYmVkIGhlbGxvLnR4dAogICAgdmFyIGYgZW1iZWQuRlMKICAgIGRhdGEsIF8gOj0gZi5SZWFkRmlsZSgiaGVsbG8udHh0IikKICAgIHByaW50KHN0cmluZyhkYXRhKSkKCiMgRGlyZWN0aXZlcwoKQSAvL2dvOmVtYmVkIGRpcmVjdGl2ZSBhYm92ZSBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHNwZWNpZmllcyB3aGljaCBmaWxlcyB0bwplbWJlZCwgdXNpbmcgb25lIG9yIG1vcmUgcGF0aC5NYXRjaCBwYXR0ZXJucy4KClRoZSBkaXJlY3RpdmUgbXVzdCBpbW1lZGlhdGVseSBwcmVjZWRlIGEgbGluZSBjb250YWluaW5nIHRoZSBkZWNsYXJhdGlvbiBvZiBhCnNpbmdsZSB2YXJpYWJsZS4gT25seSBibGFuayBsaW5lcyBhbmQg4oCYLy/igJkgbGluZSBjb21tZW50cyBhcmUgcGVybWl0dGVkIGJldHdlZW4KdGhlIGRpcmVjdGl2ZSBhbmQgdGhlIGRlY2xhcmF0aW9uLgoKVGhlIHR5cGUgb2YgdGhlIHZhcmlhYmxlIG11c3QgYmUgYSBzdHJpbmcgdHlwZSwgb3IgYSBzbGljZSBvZiBhIGJ5dGUgdHlwZSwKb3IgRlMgKG9yIGFuIGFsaWFzIG9mIEZTKS4KCkZvciBleGFtcGxlOgoKICAgIHBhY2thZ2Ugc2VydmVyCgogICAgaW1wb3J0ICJlbWJlZCIKCiAgICAvLyBjb250ZW50IGhvbGRzIG91ciBzdGF0aWMgd2ViIHNlcnZlciBjb250ZW50LgogICAgLy9nbzplbWJlZCBpbWFnZS8qIHRlbXBsYXRlLyoKICAgIC8vZ286ZW1iZWQgaHRtbC9pbmRleC5odG1sCiAgICB2YXIgY29udGVudCBlbWJlZC5GUwoKVGhlIEdvIGJ1aWxkIHN5c3RlbSB3aWxsIHJlY29nbml6ZSB0aGUgZGlyZWN0aXZlcyBhbmQgYXJyYW5nZSBmb3IgdGhlIGRlY2xhcmVkCnZhcmlhYmxlIChpbiB0aGUgZXhhbXBsZSBhYm92ZSwgY29udGVudCkgdG8gYmUgcG9wdWxhdGVkIHdpdGggdGhlIG1hdGNoaW5nIGZpbGVzCmZyb20gdGhlIGZpbGUgc3lzdGVtLgoKVGhlIC8vZ286ZW1iZWQgZGlyZWN0aXZlIGFjY2VwdHMgbXVsdGlwbGUgc3BhY2Utc2VwYXJhdGVkIHBhdHRlcm5zIGZvciBicmV2aXR5LApidXQgaXQgY2FuIGFsc28gYmUgcmVwZWF0ZWQsIHRvIGF2b2lkIHZlcnkgbG9uZyBsaW5lcyB3aGVuIHRoZXJlIGFyZSBtYW55CnBhdHRlcm5zLiBUaGUgcGF0dGVybnMgYXJlIGludGVycHJldGVkIHJlbGF0aXZlIHRvIHRoZSBwYWNrYWdlIGRpcmVjdG9yeQpjb250YWluaW5nIHRoZSBzb3VyY2UgZmlsZS4gVGhlIHBhdGggc2VwYXJhdG9yIGlzIGEgZm9yd2FyZCBzbGFzaCwgZXZlbiBvbgpXaW5kb3dzIHN5c3RlbXMuIFBhdHRlcm5zIG1heSBub3QgY29udGFpbiDigJgu4oCZIG9yIOKAmC4u4oCZIG9yIGVtcHR5IHBhdGggZWxlbWVudHMsCm5vciBtYXkgdGhleSBiZWdpbiBvciBlbmQgd2l0aCBhIHNsYXNoLiBUbyBtYXRjaCBldmVyeXRoaW5nIGluIHRoZSBjdXJyZW50CmRpcmVjdG9yeSwgdXNlIOKAmCrigJkgaW5zdGVhZCBvZiDigJgu4oCZLiBUbyBhbGxvdyBmb3IgbmFtaW5nIGZpbGVzIHdpdGggc3BhY2VzIGluCnRoZWlyIG5hbWVzLCBwYXR0ZXJucyBjYW4gYmUgd3JpdHRlbiBhcyBHbyBkb3VibGUtcXVvdGVkIG9yIGJhY2stcXVvdGVkIHN0cmluZwpsaXRlcmFscy4KCklmIGEgcGF0dGVybiBuYW1lcyBhIGRpcmVjdG9yeSwgYWxsIGZpbGVzIGluIHRoZSBzdWJ0cmVlIHJvb3RlZCBhdCB0aGF0CmRpcmVjdG9yeSBhcmUgZW1iZWRkZWQgKHJlY3Vyc2l2ZWx5KSwgZXhjZXB0IHRoYXQgZmlsZXMgd2l0aCBuYW1lcyBiZWdpbm5pbmcKd2l0aCDigJgu4oCZIG9yIOKAmF/igJkgYXJlIGV4Y2x1ZGVkLiBTbyB0aGUgdmFyaWFibGUgaW4gdGhlIGFib3ZlIGV4YW1wbGUgaXMgYWxtb3N0CmVxdWl2YWxlbnQgdG86CgogICAgLy8gY29udGVudCBpcyBvdXIgc3RhdGljIHdlYiBzZXJ2ZXIgY29udGVudC4KICAgIC8vZ286ZW1iZWQgaW1hZ2UgdGVtcGxhdGUgaHRtbC9pbmRleC5odG1sCiAgICB2YXIgY29udGVudCBlbWJlZC5GUwoKVGhlIGRpZmZlcmVuY2UgaXMgdGhhdCDigJhpbWFnZS8q4oCZIGVtYmVkcyDigJhpbWFnZS8udGVtcGZpbGXigJkgd2hpbGUg4oCYaW1hZ2XigJkgZG9lcwpub3QuIE5laXRoZXIgZW1iZWRzIOKAmGltYWdlL2Rpci8udGVtcGZpbGXigJkuCgpJZiBhIHBhdHRlcm4gYmVnaW5zIHdpdGggdGhlIHByZWZpeCDigJhhbGw64oCZLCB0aGVuIHRoZSBydWxlIGZvciB3YWxraW5nCmRpcmVjdG9yaWVzIGlzIGNoYW5nZWQgdG8gaW5jbHVkZSB0aG9zZSBmaWxlcyBiZWdpbm5pbmcgd2l0aCDigJgu4oCZIG9yIOKAmF/igJkuIEZvcgpleGFtcGxlLCDigJhhbGw6aW1hZ2XigJkgZW1iZWRzIGJvdGgg4oCYaW1hZ2UvLnRlbXBmaWxl4oCZIGFuZCDigJhpbWFnZS9kaXIvLnRlbXBmaWxl4oCZLgoKVGhlIC8vZ286ZW1iZWQgZGlyZWN0aXZlIGNhbiBiZSB1c2VkIHdpdGggYm90aCBleHBvcnRlZCBhbmQgdW5leHBvcnRlZAp2YXJpYWJsZXMsIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSBwYWNrYWdlIHdhbnRzIHRvIG1ha2UgdGhlIGRhdGEgYXZhaWxhYmxlIHRvCm90aGVyIHBhY2thZ2VzLiBJdCBjYW4gb25seSBiZSB1c2VkIHdpdGggdmFyaWFibGVzIGF0IHBhY2thZ2Ugc2NvcGUsIG5vdCB3aXRoCmxvY2FsIHZhcmlhYmxlcy4KClBhdHRlcm5zIG11c3Qgbm90IG1hdGNoIGZpbGVzIG91dHNpZGUgdGhlIHBhY2thZ2UncyBtb2R1bGUsIHN1Y2ggYXMg4oCYLmdpdC8q4oCZIG9yCnN5bWJvbGljIGxpbmtzLiBQYXR0ZXJucyBtdXN0IG5vdCBtYXRjaCBmaWxlcyB3aG9zZSBuYW1lcyBpbmNsdWRlIHRoZSBzcGVjaWFsCnB1bmN0dWF0aW9uIGNoYXJhY3RlcnMgIiAqIDwgPiA/IGAgJyB8IC8gXCBhbmQgOi4gTWF0Y2hlcyBmb3IgZW1wdHkgZGlyZWN0b3JpZXMKYXJlIGlnbm9yZWQuIEFmdGVyIHRoYXQsIGVhY2ggcGF0dGVybiBpbiBhIC8vZ286ZW1iZWQgbGluZSBtdXN0IG1hdGNoIGF0IGxlYXN0Cm9uZSBmaWxlIG9yIG5vbi1lbXB0eSBkaXJlY3RvcnkuCgpJZiBhbnkgcGF0dGVybnMgYXJlIGludmFsaWQgb3IgaGF2ZSBpbnZhbGlkIG1hdGNoZXMsIHRoZSBidWlsZCB3aWxsIGZhaWwuCgojIFN0cmluZ3MgYW5kIEJ5dGVzCgpUaGUgLy9nbzplbWJlZCBsaW5lIGZvciBhIHZhcmlhYmxlIG9mIHR5cGUgc3RyaW5nIG9yIFtdYnl0ZSBjYW4gaGF2ZSBvbmx5IGEKc2luZ2xlIHBhdHRlcm4sIGFuZCB0aGF0IHBhdHRlcm4gY2FuIG1hdGNoIG9ubHkgYSBzaW5nbGUgZmlsZS4gVGhlIHN0cmluZyBvcgpbXWJ5dGUgaXMgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgY29udGVudHMgb2YgdGhhdCBmaWxlLgoKVGhlIC8vZ286ZW1iZWQgZGlyZWN0aXZlIHJlcXVpcmVzIGltcG9ydGluZyAiZW1iZWQiLCBldmVuIHdoZW4gdXNpbmcgYSBzdHJpbmcgb3IKW11ieXRlLiBJbiBzb3VyY2UgZmlsZXMgdGhhdCBkb24ndCByZWZlciB0byBlbWJlZC5GUywgdXNlIGEgYmxhbmsgaW1wb3J0IChpbXBvcnQKXyAiZW1iZWQiKS4KCiMgRmlsZSBTeXN0ZW1zCgpGb3IgZW1iZWRkaW5nIGEgc2luZ2xlIGZpbGUsIGEgdmFyaWFibGUgb2YgdHlwZSBzdHJpbmcgb3IgW11ieXRlIGlzIG9mdGVuIGJlc3QuClRoZSBGUyB0eXBlIGVuYWJsZXMgZW1iZWRkaW5nIGEgdHJlZSBvZiBmaWxlcywgc3VjaCBhcyBhIGRpcmVjdG9yeSBvZiBzdGF0aWMgd2ViCnNlcnZlciBjb250ZW50LCBhcyBpbiB0aGUgZXhhbXBsZSBhYm92ZS4KCkZTIGltcGxlbWVudHMgdGhlIGlvL2ZzIHBhY2thZ2UncyBGUyBpbnRlcmZhY2UsIHNvIGl0IGNhbiBiZSB1c2VkIHdpdGggYW55CnBhY2thZ2UgdGhhdCB1bmRlcnN0YW5kcyBmaWxlIHN5c3RlbXMsIGluY2x1ZGluZyBuZXQvaHR0cCwgdGV4dC90ZW1wbGF0ZSwKYW5kIGh0bWwvdGVtcGxhdGUuCgpGb3IgZXhhbXBsZSwgZ2l2ZW4gdGhlIGNvbnRlbnQgdmFyaWFibGUgaW4gdGhlIGV4YW1wbGUgYWJvdmUsIHdlIGNhbiB3cml0ZToKCiAgICBodHRwLkhhbmRsZSgiL3N0YXRpYy8iLCBodHRwLlN0cmlwUHJlZml4KCIvc3RhdGljLyIsIGh0dHAuRmlsZVNlcnZlcihodHRwLkZTKGNvbnRlbnQpKSkpCgogICAgdGVtcGxhdGUuUGFyc2VGUyhjb250ZW50LCAiKi50bXBsIikKCiMgVG9vbHMKClRvIHN1cHBvcnQgdG9vbHMgdGhhdCBhbmFseXplIEdvIHBhY2thZ2VzLCB0aGUgcGF0dGVybnMgZm91bmQgaW4KLy9nbzplbWJlZCBsaW5lcyBhcmUgYXZhaWxhYmxlIGluIOKAnGdvIGxpc3TigJ0gb3V0cHV0LiBTZWUgdGhlIEVtYmVkUGF0dGVybnMsClRlc3RFbWJlZFBhdHRlcm5zLCBhbmQgWFRlc3RFbWJlZFBhdHRlcm5zIGZpZWxkcyBpbiB0aGUg4oCcZ28gaGVscCBsaXN04oCdIG91dHB1dC4KCnR5cGUgRlMgc3RydWN0eyAuLi4gfQ==",
                                              "duration": 1128002667,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc embed\n\npackage embed // import \u0026#34;embed\u0026#34;\n\nPackage embed provides access to files embedded in the running Go program.\n\nGo source files that import \u0026#34;embed\u0026#34; can use the //go:embed directive to\ninitialize a variable of type string, []byte, or FS with the contents of files\nread from the package directory or subdirectories at compile time.\n...",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "embed"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBlbWJlZCAvLyBpbXBvcnQgImVtYmVkIgoKUGFja2FnZSBlbWJlZCBwcm92aWRlcyBhY2Nlc3MgdG8gZmlsZXMgZW1iZWRkZWQgaW4gdGhlIHJ1bm5pbmcgR28gcHJvZ3JhbS4KCkdvIHNvdXJjZSBmaWxlcyB0aGF0IGltcG9ydCAiZW1iZWQiIGNhbiB1c2UgdGhlIC8vZ286ZW1iZWQgZGlyZWN0aXZlIHRvCmluaXRpYWxpemUgYSB2YXJpYWJsZSBvZiB0eXBlIHN0cmluZywgW11ieXRlLCBvciBGUyB3aXRoIHRoZSBjb250ZW50cyBvZiBmaWxlcwpyZWFkIGZyb20gdGhlIHBhY2thZ2UgZGlyZWN0b3J5IG9yIHN1YmRpcmVjdG9yaWVzIGF0IGNvbXBpbGUgdGltZS4KCkZvciBleGFtcGxlLCBoZXJlIGFyZSB0aHJlZSB3YXlzIHRvIGVtYmVkIGEgZmlsZSBuYW1lZCBoZWxsby50eHQgYW5kIHRoZW4gcHJpbnQKaXRzIGNvbnRlbnRzIGF0IHJ1biB0aW1lLgoKRW1iZWRkaW5nIG9uZSBmaWxlIGludG8gYSBzdHJpbmc6CgogICAgaW1wb3J0IF8gImVtYmVkIgoKICAgIC8vZ286ZW1iZWQgaGVsbG8udHh0CiAgICB2YXIgcyBzdHJpbmcKICAgIHByaW50KHMpCgpFbWJlZGRpbmcgb25lIGZpbGUgaW50byBhIHNsaWNlIG9mIGJ5dGVzOgoKICAgIGltcG9ydCBfICJlbWJlZCIKCiAgICAvL2dvOmVtYmVkIGhlbGxvLnR4dAogICAgdmFyIGIgW11ieXRlCiAgICBwcmludChzdHJpbmcoYikpCgpFbWJlZGRlZCBvbmUgb3IgbW9yZSBmaWxlcyBpbnRvIGEgZmlsZSBzeXN0ZW06CgogICAgaW1wb3J0ICJlbWJlZCIKCiAgICAvL2dvOmVtYmVkIGhlbGxvLnR4dAogICAgdmFyIGYgZW1iZWQuRlMKICAgIGRhdGEsIF8gOj0gZi5SZWFkRmlsZSgiaGVsbG8udHh0IikKICAgIHByaW50KHN0cmluZyhkYXRhKSkKCiMgRGlyZWN0aXZlcwoKQSAvL2dvOmVtYmVkIGRpcmVjdGl2ZSBhYm92ZSBhIHZhcmlhYmxlIGRlY2xhcmF0aW9uIHNwZWNpZmllcyB3aGljaCBmaWxlcyB0bwplbWJlZCwgdXNpbmcgb25lIG9yIG1vcmUgcGF0aC5NYXRjaCBwYXR0ZXJucy4KClRoZSBkaXJlY3RpdmUgbXVzdCBpbW1lZGlhdGVseSBwcmVjZWRlIGEgbGluZSBjb250YWluaW5nIHRoZSBkZWNsYXJhdGlvbiBvZiBhCnNpbmdsZSB2YXJpYWJsZS4gT25seSBibGFuayBsaW5lcyBhbmQg4oCYLy/igJkgbGluZSBjb21tZW50cyBhcmUgcGVybWl0dGVkIGJldHdlZW4KdGhlIGRpcmVjdGl2ZSBhbmQgdGhlIGRlY2xhcmF0aW9uLgoKVGhlIHR5cGUgb2YgdGhlIHZhcmlhYmxlIG11c3QgYmUgYSBzdHJpbmcgdHlwZSwgb3IgYSBzbGljZSBvZiBhIGJ5dGUgdHlwZSwKb3IgRlMgKG9yIGFuIGFsaWFzIG9mIEZTKS4KCkZvciBleGFtcGxlOgoKICAgIHBhY2thZ2Ugc2VydmVyCgogICAgaW1wb3J0ICJlbWJlZCIKCiAgICAvLyBjb250ZW50IGhvbGRzIG91ciBzdGF0aWMgd2ViIHNlcnZlciBjb250ZW50LgogICAgLy9nbzplbWJlZCBpbWFnZS8qIHRlbXBsYXRlLyoKICAgIC8vZ286ZW1iZWQgaHRtbC9pbmRleC5odG1sCiAgICB2YXIgY29udGVudCBlbWJlZC5GUwoKVGhlIEdvIGJ1aWxkIHN5c3RlbSB3aWxsIHJlY29nbml6ZSB0aGUgZGlyZWN0aXZlcyBhbmQgYXJyYW5nZSBmb3IgdGhlIGRlY2xhcmVkCnZhcmlhYmxlIChpbiB0aGUgZXhhbXBsZSBhYm92ZSwgY29udGVudCkgdG8gYmUgcG9wdWxhdGVkIHdpdGggdGhlIG1hdGNoaW5nIGZpbGVzCmZyb20gdGhlIGZpbGUgc3lzdGVtLgoKVGhlIC8vZ286ZW1iZWQgZGlyZWN0aXZlIGFjY2VwdHMgbXVsdGlwbGUgc3BhY2Utc2VwYXJhdGVkIHBhdHRlcm5zIGZvciBicmV2aXR5LApidXQgaXQgY2FuIGFsc28gYmUgcmVwZWF0ZWQsIHRvIGF2b2lkIHZlcnkgbG9uZyBsaW5lcyB3aGVuIHRoZXJlIGFyZSBtYW55CnBhdHRlcm5zLiBUaGUgcGF0dGVybnMgYXJlIGludGVycHJldGVkIHJlbGF0aXZlIHRvIHRoZSBwYWNrYWdlIGRpcmVjdG9yeQpjb250YWluaW5nIHRoZSBzb3VyY2UgZmlsZS4gVGhlIHBhdGggc2VwYXJhdG9yIGlzIGEgZm9yd2FyZCBzbGFzaCwgZXZlbiBvbgpXaW5kb3dzIHN5c3RlbXMuIFBhdHRlcm5zIG1heSBub3QgY29udGFpbiDigJgu4oCZIG9yIOKAmC4u4oCZIG9yIGVtcHR5IHBhdGggZWxlbWVudHMsCm5vciBtYXkgdGhleSBiZWdpbiBvciBlbmQgd2l0aCBhIHNsYXNoLiBUbyBtYXRjaCBldmVyeXRoaW5nIGluIHRoZSBjdXJyZW50CmRpcmVjdG9yeSwgdXNlIOKAmCrigJkgaW5zdGVhZCBvZiDigJgu4oCZLiBUbyBhbGxvdyBmb3IgbmFtaW5nIGZpbGVzIHdpdGggc3BhY2VzIGluCnRoZWlyIG5hbWVzLCBwYXR0ZXJucyBjYW4gYmUgd3JpdHRlbiBhcyBHbyBkb3VibGUtcXVvdGVkIG9yIGJhY2stcXVvdGVkIHN0cmluZwpsaXRlcmFscy4KCklmIGEgcGF0dGVybiBuYW1lcyBhIGRpcmVjdG9yeSwgYWxsIGZpbGVzIGluIHRoZSBzdWJ0cmVlIHJvb3RlZCBhdCB0aGF0CmRpcmVjdG9yeSBhcmUgZW1iZWRkZWQgKHJlY3Vyc2l2ZWx5KSwgZXhjZXB0IHRoYXQgZmlsZXMgd2l0aCBuYW1lcyBiZWdpbm5pbmcKd2l0aCDigJgu4oCZIG9yIOKAmF/igJkgYXJlIGV4Y2x1ZGVkLiBTbyB0aGUgdmFyaWFibGUgaW4gdGhlIGFib3ZlIGV4YW1wbGUgaXMgYWxtb3N0CmVxdWl2YWxlbnQgdG86CgogICAgLy8gY29udGVudCBpcyBvdXIgc3RhdGljIHdlYiBzZXJ2ZXIgY29udGVudC4KICAgIC8vZ286ZW1iZWQgaW1hZ2UgdGVtcGxhdGUgaHRtbC9pbmRleC5odG1sCiAgICB2YXIgY29udGVudCBlbWJlZC5GUwoKVGhlIGRpZmZlcmVuY2UgaXMgdGhhdCDigJhpbWFnZS8q4oCZIGVtYmVkcyDigJhpbWFnZS8udGVtcGZpbGXigJkgd2hpbGUg4oCYaW1hZ2XigJkgZG9lcwpub3QuIE5laXRoZXIgZW1iZWRzIOKAmGltYWdlL2Rpci8udGVtcGZpbGXigJkuCgpJZiBhIHBhdHRlcm4gYmVnaW5zIHdpdGggdGhlIHByZWZpeCDigJhhbGw64oCZLCB0aGVuIHRoZSBydWxlIGZvciB3YWxraW5nCmRpcmVjdG9yaWVzIGlzIGNoYW5nZWQgdG8gaW5jbHVkZSB0aG9zZSBmaWxlcyBiZWdpbm5pbmcgd2l0aCDigJgu4oCZIG9yIOKAmF/igJkuIEZvcgpleGFtcGxlLCDigJhhbGw6aW1hZ2XigJkgZW1iZWRzIGJvdGgg4oCYaW1hZ2UvLnRlbXBmaWxl4oCZIGFuZCDigJhpbWFnZS9kaXIvLnRlbXBmaWxl4oCZLgoKVGhlIC8vZ286ZW1iZWQgZGlyZWN0aXZlIGNhbiBiZSB1c2VkIHdpdGggYm90aCBleHBvcnRlZCBhbmQgdW5leHBvcnRlZAp2YXJpYWJsZXMsIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSBwYWNrYWdlIHdhbnRzIHRvIG1ha2UgdGhlIGRhdGEgYXZhaWxhYmxlIHRvCm90aGVyIHBhY2thZ2VzLiBJdCBjYW4gb25seSBiZSB1c2VkIHdpdGggdmFyaWFibGVzIGF0IHBhY2thZ2Ugc2NvcGUsIG5vdCB3aXRoCmxvY2FsIHZhcmlhYmxlcy4KClBhdHRlcm5zIG11c3Qgbm90IG1hdGNoIGZpbGVzIG91dHNpZGUgdGhlIHBhY2thZ2UncyBtb2R1bGUsIHN1Y2ggYXMg4oCYLmdpdC8q4oCZIG9yCnN5bWJvbGljIGxpbmtzLiBQYXR0ZXJucyBtdXN0IG5vdCBtYXRjaCBmaWxlcyB3aG9zZSBuYW1lcyBpbmNsdWRlIHRoZSBzcGVjaWFsCnB1bmN0dWF0aW9uIGNoYXJhY3RlcnMgIiAqIDwgPiA/IGAgJyB8IC8gXCBhbmQgOi4gTWF0Y2hlcyBmb3IgZW1wdHkgZGlyZWN0b3JpZXMKYXJlIGlnbm9yZWQuIEFmdGVyIHRoYXQsIGVhY2ggcGF0dGVybiBpbiBhIC8vZ286ZW1iZWQgbGluZSBtdXN0IG1hdGNoIGF0IGxlYXN0Cm9uZSBmaWxlIG9yIG5vbi1lbXB0eSBkaXJlY3RvcnkuCgpJZiBhbnkgcGF0dGVybnMgYXJlIGludmFsaWQgb3IgaGF2ZSBpbnZhbGlkIG1hdGNoZXMsIHRoZSBidWlsZCB3aWxsIGZhaWwuCgojIFN0cmluZ3MgYW5kIEJ5dGVzCgpUaGUgLy9nbzplbWJlZCBsaW5lIGZvciBhIHZhcmlhYmxlIG9mIHR5cGUgc3RyaW5nIG9yIFtdYnl0ZSBjYW4gaGF2ZSBvbmx5IGEKc2luZ2xlIHBhdHRlcm4sIGFuZCB0aGF0IHBhdHRlcm4gY2FuIG1hdGNoIG9ubHkgYSBzaW5nbGUgZmlsZS4gVGhlIHN0cmluZyBvcgpbXWJ5dGUgaXMgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgY29udGVudHMgb2YgdGhhdCBmaWxlLgoKVGhlIC8vZ286ZW1iZWQgZGlyZWN0aXZlIHJlcXVpcmVzIGltcG9ydGluZyAiZW1iZWQiLCBldmVuIHdoZW4gdXNpbmcgYSBzdHJpbmcgb3IKW11ieXRlLiBJbiBzb3VyY2UgZmlsZXMgdGhhdCBkb24ndCByZWZlciB0byBlbWJlZC5GUywgdXNlIGEgYmxhbmsgaW1wb3J0IChpbXBvcnQKXyAiZW1iZWQiKS4KCiMgRmlsZSBTeXN0ZW1zCgpGb3IgZW1iZWRkaW5nIGEgc2luZ2xlIGZpbGUsIGEgdmFyaWFibGUgb2YgdHlwZSBzdHJpbmcgb3IgW11ieXRlIGlzIG9mdGVuIGJlc3QuClRoZSBGUyB0eXBlIGVuYWJsZXMgZW1iZWRkaW5nIGEgdHJlZSBvZiBmaWxlcywgc3VjaCBhcyBhIGRpcmVjdG9yeSBvZiBzdGF0aWMgd2ViCnNlcnZlciBjb250ZW50LCBhcyBpbiB0aGUgZXhhbXBsZSBhYm92ZS4KCkZTIGltcGxlbWVudHMgdGhlIGlvL2ZzIHBhY2thZ2UncyBGUyBpbnRlcmZhY2UsIHNvIGl0IGNhbiBiZSB1c2VkIHdpdGggYW55CnBhY2thZ2UgdGhhdCB1bmRlcnN0YW5kcyBmaWxlIHN5c3RlbXMsIGluY2x1ZGluZyBuZXQvaHR0cCwgdGV4dC90ZW1wbGF0ZSwKYW5kIGh0bWwvdGVtcGxhdGUuCgpGb3IgZXhhbXBsZSwgZ2l2ZW4gdGhlIGNvbnRlbnQgdmFyaWFibGUgaW4gdGhlIGV4YW1wbGUgYWJvdmUsIHdlIGNhbiB3cml0ZToKCiAgICBodHRwLkhhbmRsZSgiL3N0YXRpYy8iLCBodHRwLlN0cmlwUHJlZml4KCIvc3RhdGljLyIsIGh0dHAuRmlsZVNlcnZlcihodHRwLkZTKGNvbnRlbnQpKSkpCgogICAgdGVtcGxhdGUuUGFyc2VGUyhjb250ZW50LCAiKi50bXBsIikKCiMgVG9vbHMKClRvIHN1cHBvcnQgdG9vbHMgdGhhdCBhbmFseXplIEdvIHBhY2thZ2VzLCB0aGUgcGF0dGVybnMgZm91bmQgaW4KLy9nbzplbWJlZCBsaW5lcyBhcmUgYXZhaWxhYmxlIGluIOKAnGdvIGxpc3TigJ0gb3V0cHV0LiBTZWUgdGhlIEVtYmVkUGF0dGVybnMsClRlc3RFbWJlZFBhdHRlcm5zLCBhbmQgWFRlc3RFbWJlZFBhdHRlcm5zIGZpZWxkcyBpbiB0aGUg4oCcZ28gaGVscCBsaXN04oCdIG91dHB1dC4KCnR5cGUgRlMgc3RydWN0eyAuLi4gfQ==",
                                            "duration": 1128002667,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.70:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "embed",
                                                "href": "https://pkg.go.dev/embed",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "embed",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/embed"
                                            }
                                          ],
                                          {
                                            "text": " package.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 70,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fs/embed.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Using Embedded Files",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "As per the documentation we can either embed a single file as either a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " or a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "[]byte",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". For our purposes, and more often than not, we will be embedding multiple files, so we will need a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/embed.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " implementation to hold the files. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "embed#FS",
                                          "href": "https://pkg.go.dev/embed#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/embed.md",
                                            "nodes": [
                                              {
                                                "text": "embed.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/embed#FS"
                                      }
                                    ],
                                    {
                                      "text": " type, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-71"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-71"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.71",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-71"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", implements the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "io/fs#FS",
                                          "href": "https://pkg.go.dev/io/fs#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/embed.md",
                                            "nodes": [
                                              {
                                                "text": "fs.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/io/fs#FS"
                                      }
                                    ],
                                    {
                                      "text": " interface and provides a read-only file system for the embedded files.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-71",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "embed.FS"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "embed.FS",
                                          "exec": "go doc embed.FS"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc embed.FS\n\npackage embed // import \u0026#34;embed\u0026#34;\n\ntype FS struct {\n\t// Has unexported fields.\n}\n    An FS is a read-only collection of files, usually initialized with a\n    //go:embed directive. When declared without a //go:embed directive, an FS is\n    an empty file system.\n\n    An FS is a read-only value, so it is safe to use from multiple goroutines\n    simultaneously and also safe to assign values of type FS to each other.\n\n    FS implements fs.FS, so it can be used with any package that understands\n    file system interfaces, including net/http, text/template, and\n    html/template.\n\n    See the package documentation for more details about initializing an FS.\n\nfunc (f FS) Open(name string) (fs.File, error)\nfunc (f FS) ReadDir(name string) ([]fs.DirEntry, error)\nfunc (f FS) ReadFile(name string) ([]byte, error)",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "embed.FS"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBlbWJlZCAvLyBpbXBvcnQgImVtYmVkIgoKdHlwZSBGUyBzdHJ1Y3QgewoJLy8gSGFzIHVuZXhwb3J0ZWQgZmllbGRzLgp9CiAgICBBbiBGUyBpcyBhIHJlYWQtb25seSBjb2xsZWN0aW9uIG9mIGZpbGVzLCB1c3VhbGx5IGluaXRpYWxpemVkIHdpdGggYQogICAgLy9nbzplbWJlZCBkaXJlY3RpdmUuIFdoZW4gZGVjbGFyZWQgd2l0aG91dCBhIC8vZ286ZW1iZWQgZGlyZWN0aXZlLCBhbiBGUyBpcwogICAgYW4gZW1wdHkgZmlsZSBzeXN0ZW0uCgogICAgQW4gRlMgaXMgYSByZWFkLW9ubHkgdmFsdWUsIHNvIGl0IGlzIHNhZmUgdG8gdXNlIGZyb20gbXVsdGlwbGUgZ29yb3V0aW5lcwogICAgc2ltdWx0YW5lb3VzbHkgYW5kIGFsc28gc2FmZSB0byBhc3NpZ24gdmFsdWVzIG9mIHR5cGUgRlMgdG8gZWFjaCBvdGhlci4KCiAgICBGUyBpbXBsZW1lbnRzIGZzLkZTLCBzbyBpdCBjYW4gYmUgdXNlZCB3aXRoIGFueSBwYWNrYWdlIHRoYXQgdW5kZXJzdGFuZHMKICAgIGZpbGUgc3lzdGVtIGludGVyZmFjZXMsIGluY2x1ZGluZyBuZXQvaHR0cCwgdGV4dC90ZW1wbGF0ZSwgYW5kCiAgICBodG1sL3RlbXBsYXRlLgoKICAgIFNlZSB0aGUgcGFja2FnZSBkb2N1bWVudGF0aW9uIGZvciBtb3JlIGRldGFpbHMgYWJvdXQgaW5pdGlhbGl6aW5nIGFuIEZTLgoKZnVuYyAoZiBGUykgT3BlbihuYW1lIHN0cmluZykgKGZzLkZpbGUsIGVycm9yKQpmdW5jIChmIEZTKSBSZWFkRGlyKG5hbWUgc3RyaW5nKSAoW11mcy5EaXJFbnRyeSwgZXJyb3IpCmZ1bmMgKGYgRlMpIFJlYWRGaWxlKG5hbWUgc3RyaW5nKSAoW11ieXRlLCBlcnJvcik=",
                                              "duration": 1138884125,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc embed.FS\n\npackage embed // import \u0026#34;embed\u0026#34;\n\ntype FS struct {\n\t// Has unexported fields.\n}\n    An FS is a read-only collection of files, usually initialized with a\n    //go:embed directive. When declared without a //go:embed directive, an FS is\n    an empty file system.\n\n    An FS is a read-only value, so it is safe to use from multiple goroutines\n    simultaneously and also safe to assign values of type FS to each other.\n\n    FS implements fs.FS, so it can be used with any package that understands\n    file system interfaces, including net/http, text/template, and\n    html/template.\n\n    See the package documentation for more details about initializing an FS.\n\nfunc (f FS) Open(name string) (fs.File, error)\nfunc (f FS) ReadDir(name string) ([]fs.DirEntry, error)\nfunc (f FS) ReadFile(name string) ([]byte, error)",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "embed.FS"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBlbWJlZCAvLyBpbXBvcnQgImVtYmVkIgoKdHlwZSBGUyBzdHJ1Y3QgewoJLy8gSGFzIHVuZXhwb3J0ZWQgZmllbGRzLgp9CiAgICBBbiBGUyBpcyBhIHJlYWQtb25seSBjb2xsZWN0aW9uIG9mIGZpbGVzLCB1c3VhbGx5IGluaXRpYWxpemVkIHdpdGggYQogICAgLy9nbzplbWJlZCBkaXJlY3RpdmUuIFdoZW4gZGVjbGFyZWQgd2l0aG91dCBhIC8vZ286ZW1iZWQgZGlyZWN0aXZlLCBhbiBGUyBpcwogICAgYW4gZW1wdHkgZmlsZSBzeXN0ZW0uCgogICAgQW4gRlMgaXMgYSByZWFkLW9ubHkgdmFsdWUsIHNvIGl0IGlzIHNhZmUgdG8gdXNlIGZyb20gbXVsdGlwbGUgZ29yb3V0aW5lcwogICAgc2ltdWx0YW5lb3VzbHkgYW5kIGFsc28gc2FmZSB0byBhc3NpZ24gdmFsdWVzIG9mIHR5cGUgRlMgdG8gZWFjaCBvdGhlci4KCiAgICBGUyBpbXBsZW1lbnRzIGZzLkZTLCBzbyBpdCBjYW4gYmUgdXNlZCB3aXRoIGFueSBwYWNrYWdlIHRoYXQgdW5kZXJzdGFuZHMKICAgIGZpbGUgc3lzdGVtIGludGVyZmFjZXMsIGluY2x1ZGluZyBuZXQvaHR0cCwgdGV4dC90ZW1wbGF0ZSwgYW5kCiAgICBodG1sL3RlbXBsYXRlLgoKICAgIFNlZSB0aGUgcGFja2FnZSBkb2N1bWVudGF0aW9uIGZvciBtb3JlIGRldGFpbHMgYWJvdXQgaW5pdGlhbGl6aW5nIGFuIEZTLgoKZnVuYyAoZiBGUykgT3BlbihuYW1lIHN0cmluZykgKGZzLkZpbGUsIGVycm9yKQpmdW5jIChmIEZTKSBSZWFkRGlyKG5hbWUgc3RyaW5nKSAoW11mcy5EaXJFbnRyeSwgZXJyb3IpCmZ1bmMgKGYgRlMpIFJlYWRGaWxlKG5hbWUgc3RyaW5nKSAoW11ieXRlLCBlcnJvcik=",
                                            "duration": 1138884125,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.71:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "embed#FS",
                                                "href": "https://pkg.go.dev/embed#FS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "embed.FS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/embed#FS"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 71,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-72"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-72"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.72",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-72"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we can define a global variable of type ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "embed#FS",
                                          "href": "https://pkg.go.dev/embed#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/embed.md",
                                            "nodes": [
                                              {
                                                "text": "embed.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/embed#FS"
                                      }
                                    ],
                                    {
                                      "text": " and use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "//go:embed",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directive to define the directories and files to embed.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-72",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "embed",
                                              "src": "fs/src/embed/demo.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "//go:embed data\nvar DataFS embed.FS",
                                                "file": "fs/src/embed/demo.go",
                                                "lang": "go",
                                                "name": "embed",
                                                "start": 9,
                                                "end": 13,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.72:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "//go:embed",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " directive.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 72,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "//go:embed data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directive tells Go to fill the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "DataFS",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " variable with the contents of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory. Files beginning with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "_",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " are ignored by the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "//go:embed",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directive.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "In the tests, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-73"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-73"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.73",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-73"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "DataFS",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " variable to pass to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-73",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "test",
                                              "src": "fs/src/embed/demo_test.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Walk(t *testing.T) {\n\tt.Parallel()\n\n\texp := []string{\n\t\t\"data/a.txt\",\n\t\t\"data/b.txt\",\n\t\t\"data/e/f/g.txt\",\n\t\t\"data/e/f/h.txt\",\n\t\t\"data/e/j.txt\",\n\t}\n\n\tact, err := Walk(DataFS)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tes := strings.Join(exp, \", \")\n\tas := strings.Join(act, \", \")\n\n\tif es != as {\n\t\tt.Fatalf(\"expected %s, got %s\", es, as)\n\t}\n}",
                                                "file": "fs/src/embed/demo_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 8,
                                                "end": 33,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.73:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Testing using the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "embed#FS",
                                                "href": "https://pkg.go.dev/embed#FS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "embed.FS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/embed#FS"
                                            }
                                          ],
                                          {
                                            "text": " as a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io/fs#FS",
                                                "href": "https://pkg.go.dev/io/fs#FS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "fs.FS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io/fs#FS"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 73,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from the test output, the files we wanted were successfully embedded and added to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "DataFS",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " variable.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-74",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "fs/src/embed",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n--- PASS: Test_Walk (0.00s)\nPASS\nok  \tdemo\t0.461s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKLS0tIFBBU1M6IFRlc3RfV2FsayAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuNDYxcw==",
                                              "duration": 1063115792,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n--- PASS: Test_Walk (0.00s)\nPASS\nok  \tdemo\t0.461s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKLS0tIFBBU1M6IFRlc3RfV2FsayAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTAuNDYxcw==",
                                            "duration": 1063115792,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.74:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Successful test output using an ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "embed#FS",
                                                "href": "https://pkg.go.dev/embed#FS",
                                                "target": "_blank"
                                              },
                                              "file": "fs",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "fs",
                                                    "nodes": [
                                                      {
                                                        "text": "embed.FS",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/embed#FS"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 74,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fs/embed.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Embedded Files in a Binary",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "To see the embedding in action, we can write a small application that uses our application.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "Consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-75"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-75"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.75",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-75"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". We are calling our ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "demo.Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function from the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "main",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function, using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "demo.DataFS",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " variable, which is an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "embed#FS",
                                          "href": "https://pkg.go.dev/embed#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/embed.md",
                                            "nodes": [
                                              {
                                                "text": "embed.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/embed#FS"
                                      }
                                    ],
                                    {
                                      "text": " implementation. We then print out the results of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "Walk",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-75",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "main",
                                              "src": "fs/src/embed/cmd/demo/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tfiles, err := demo.Walk(demo.DataFS)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfor _, file := range files {\n\t\tfmt.Println(file)\n\t}\n}",
                                                "file": "fs/src/embed/cmd/demo/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 9,
                                                "end": 21,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.75:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "main",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 75,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "When we use ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "go run",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " to run the application, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-76"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-76"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.76",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-76"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we see that the output is as expected.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-76",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "fs/src/embed/cmd/demo"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\ndata/a.txt\ndata/b.txt\ndata/e/f/g.txt\ndata/e/f/h.txt\ndata/e/j.txt",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed/cmd/demo",
                                              "stdout": "ZGF0YS9hLnR4dApkYXRhL2IudHh0CmRhdGEvZS9mL2cudHh0CmRhdGEvZS9mL2gudHh0CmRhdGEvZS9qLnR4dA==",
                                              "duration": 1890138041,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\ndata/a.txt\ndata/b.txt\ndata/e/f/g.txt\ndata/e/f/h.txt\ndata/e/j.txt",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed/cmd/demo",
                                            "stdout": "ZGF0YS9hLnR4dApkYXRhL2IudHh0CmRhdGEvZS9mL2cudHh0CmRhdGEvZS9mL2gudHh0CmRhdGEvZS9qLnR4dA==",
                                            "duration": 1890138041,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.76:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "go run",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " output.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 76,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "Next, let's compile a binary of our application. We will use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "go build",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " command and output the binary to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "bin",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directory.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-77",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "build",
                                          "-o",
                                          "bin/demo"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "build": "-o bin/demo",
                                          "data-go-version": "go1.21.5",
                                          "exec": "go build -o bin/demo",
                                          "src": "fs/src/embed/cmd/demo"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go build -o bin/demo",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "build",
                                                "-o",
                                                "bin/demo"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed/cmd/demo",
                                              "duration": 1397606000,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go build -o bin/demo",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "build",
                                              "-o",
                                              "bin/demo"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed/cmd/demo",
                                            "duration": 1397606000,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.77:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Building a binary with embedded files.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 77,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "Finally, when we run the binary, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-78"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-78"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.78",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-78"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we see that the output is as expected. Our application is able to successfully embed the files we defined. We now have a fully self-contained application that can contains, not just the necessary runtime needed to execute the binary on the desired ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "GOOS",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "GOARCH",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " combinations, but also the files we defined.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-78",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "bin/demo"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "exec": "bin/demo",
                                          "src": "fs/src/embed/cmd/demo"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ bin/demo\n\ndata/a.txt\ndata/b.txt\ndata/e/f/g.txt\ndata/e/f/h.txt\ndata/e/j.txt",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "bin/demo"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed/cmd/demo",
                                              "stdout": "ZGF0YS9hLnR4dApkYXRhL2IudHh0CmRhdGEvZS9mL2cudHh0CmRhdGEvZS9mL2gudHh0CmRhdGEvZS9qLnR4dA==",
                                              "duration": 574170709,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ bin/demo\n\ndata/a.txt\ndata/b.txt\ndata/e/f/g.txt\ndata/e/f/h.txt\ndata/e/j.txt",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "bin/demo"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed/cmd/demo",
                                            "stdout": "ZGF0YS9hLnR4dApkYXRhL2IudHh0CmRhdGEvZS9mL2cudHh0CmRhdGEvZS9mL2gudHh0CmRhdGEvZS9qLnR4dA==",
                                            "duration": 574170709,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.78:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Files are embedded in the binary.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 78,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fs/embed.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Modifying Embedded Files",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "While we only needed to embed one directory, we can also embed multiple directories and files. We can do this by using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "//go:embed",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directive multiple times.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-79",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "embed",
                                              "src": "fs/src/embed-broken/demo.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "//go:embed data\n//go:embed cmd\n//go:embed go.mod\nvar DataFS embed.FS",
                                                "file": "fs/src/embed-broken/demo.go",
                                                "lang": "go",
                                                "name": "embed",
                                                "start": 9,
                                                "end": 15,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.79:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "//go:embed",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " directive.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 79,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from the test output, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-80"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-80"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.80",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-80"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", the extra ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "//go:embed",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " directives embedded the files we did not want and as a result the test failed.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-80",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "fs/src/embed-broken",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n    demo_test.go:29: expected data/a.txt,\n        data/b.txt,\n        data/e/f/g.txt,\n        data/e/f/h.txt,\n        data/e/j.txt, got cmd/demo/main.go,\n        data/a.txt,\n        data/b.txt,\n        data/e/f/g.txt,\n        data/e/f/h.txt,\n        data/e/j.txt,\n        go.mod\n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.394s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed-broken",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKICAgIGRlbW9fdGVzdC5nbzoyOTogZXhwZWN0ZWQgZGF0YS9hLnR4dCwKICAgICAgICBkYXRhL2IudHh0LAogICAgICAgIGRhdGEvZS9mL2cudHh0LAogICAgICAgIGRhdGEvZS9mL2gudHh0LAogICAgICAgIGRhdGEvZS9qLnR4dCwgZ290IGNtZC9kZW1vL21haW4uZ28sCiAgICAgICAgZGF0YS9hLnR4dCwKICAgICAgICBkYXRhL2IudHh0LAogICAgICAgIGRhdGEvZS9mL2cudHh0LAogICAgICAgIGRhdGEvZS9mL2gudHh0LAogICAgICAgIGRhdGEvZS9qLnR4dCwKICAgICAgICBnby5tb2QKLS0tIEZBSUw6IFRlc3RfV2FsayAoMC4wMHMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMC4zOTRz",
                                              "duration": 955859167,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Walk\n=== PAUSE Test_Walk\n=== CONT  Test_Walk\n    demo_test.go:29: expected data/a.txt,\n        data/b.txt,\n        data/e/f/g.txt,\n        data/e/f/h.txt,\n        data/e/j.txt, got cmd/demo/main.go,\n        data/a.txt,\n        data/b.txt,\n        data/e/f/g.txt,\n        data/e/f/h.txt,\n        data/e/j.txt,\n        go.mod\n--- FAIL: Test_Walk (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t0.394s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/embed-broken",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV2Fsawo9PT0gUEFVU0UgVGVzdF9XYWxrCj09PSBDT05UICBUZXN0X1dhbGsKICAgIGRlbW9fdGVzdC5nbzoyOTogZXhwZWN0ZWQgZGF0YS9hLnR4dCwKICAgICAgICBkYXRhL2IudHh0LAogICAgICAgIGRhdGEvZS9mL2cudHh0LAogICAgICAgIGRhdGEvZS9mL2gudHh0LAogICAgICAgIGRhdGEvZS9qLnR4dCwgZ290IGNtZC9kZW1vL21haW4uZ28sCiAgICAgICAgZGF0YS9hLnR4dCwKICAgICAgICBkYXRhL2IudHh0LAogICAgICAgIGRhdGEvZS9mL2cudHh0LAogICAgICAgIGRhdGEvZS9mL2gudHh0LAogICAgICAgIGRhdGEvZS9qLnR4dCwKICAgICAgICBnby5tb2QKLS0tIEZBSUw6IFRlc3RfV2FsayAoMC4wMHMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMC4zOTRz",
                                            "duration": 955859167,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.80:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using multiple ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "//go:embed",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " directives.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 80,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "fs/embed.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Embedding Files as a String or Byte Slice",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "In addition to embedding files, and directories, to a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "embed#FS",
                                          "href": "https://pkg.go.dev/embed#FS",
                                          "target": "_blank"
                                        },
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "fs/embed.md",
                                            "nodes": [
                                              {
                                                "text": "embed.FS",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/embed#FS"
                                      }
                                    ],
                                    {
                                      "text": ", we can also embed the contents of a file as a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " or ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "fs/embed.md",
                                        "nodes": [
                                          {
                                            "text": "[]byte",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". This makes gaining access to the contents of a file easier.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-81",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "fs",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "fs/src/strings/demo.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "text": "package demo\n\nimport _ \u0026#34;embed\u0026#34;\n\n//go:embed data/LICENSE\nvar LICENSE string\n\n//go:embed data/LICENSE\nvar LICENSE_BYTES []byte\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.81:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "//go:embed",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " directive with a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "string",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " and a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "[]byte",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 81,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-82",
                                    "type": "listing"
                                  },
                                  "file": "fs/embed.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "fs/src/strings",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Embed_String\n=== PAUSE Test_Embed_String\n=== RUN   Test_Embed_Bytes\n=== PAUSE Test_Embed_Bytes\n=== CONT  Test_Embed_String\n=== CONT  Test_Embed_Bytes\n--- PASS: Test_Embed_String (0.00s)\n--- PASS: Test_Embed_Bytes (0.00s)\nPASS\nok  \tdemo\t0.372s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/strings",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfRW1iZWRfU3RyaW5nCj09PSBQQVVTRSBUZXN0X0VtYmVkX1N0cmluZwo9PT0gUlVOICAgVGVzdF9FbWJlZF9CeXRlcwo9PT0gUEFVU0UgVGVzdF9FbWJlZF9CeXRlcwo9PT0gQ09OVCAgVGVzdF9FbWJlZF9TdHJpbmcKPT09IENPTlQgIFRlc3RfRW1iZWRfQnl0ZXMKLS0tIFBBU1M6IFRlc3RfRW1iZWRfU3RyaW5nICgwLjAwcykKLS0tIFBBU1M6IFRlc3RfRW1iZWRfQnl0ZXMgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkwLjM3MnM=",
                                              "duration": 1708282708,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Embed_String\n=== PAUSE Test_Embed_String\n=== RUN   Test_Embed_Bytes\n=== PAUSE Test_Embed_Bytes\n=== CONT  Test_Embed_String\n=== CONT  Test_Embed_Bytes\n--- PASS: Test_Embed_String (0.00s)\n--- PASS: Test_Embed_Bytes (0.00s)\nPASS\nok  \tdemo\t0.372s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files/fs/src/strings",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfRW1iZWRfU3RyaW5nCj09PSBQQVVTRSBUZXN0X0VtYmVkX1N0cmluZwo9PT0gUlVOICAgVGVzdF9FbWJlZF9CeXRlcwo9PT0gUEFVU0UgVGVzdF9FbWJlZF9CeXRlcwo9PT0gQ09OVCAgVGVzdF9FbWJlZF9TdHJpbmcKPT09IENPTlQgIFRlc3RfRW1iZWRfQnl0ZXMKLS0tIFBBU1M6IFRlc3RfRW1iZWRfU3RyaW5nICgwLjAwcykKLS0tIFBBU1M6IFRlc3RfRW1iZWRfQnl0ZXMgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkwLjM3MnM=",
                                            "duration": 1708282708,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "fs",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.82:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "//go:embed",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " we can gain direct access to files as a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "string",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " or ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "fs",
                                              "nodes": [
                                                {
                                                  "text": "[]byte",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 82,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Embedding Files",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "page",
                      "file": "module.md",
                      "nodes": [
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "h1",
                            "file": "module.md",
                            "level": 1,
                            "nodes": [
                              {
                                "text": "Summary",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "hype.Heading"
                          }
                        ],
                        {
                          "text": "\n\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "p",
                            "file": "module.md",
                            "nodes": [
                              {
                                "text": "In this ",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "binding",
                                "attributes": {
                                  "part": ""
                                },
                                "file": "module.md",
                                "type": "*hype.Element"
                              },
                              {
                                "text": ", we delved deep into using files with Go. We learned how to create, read, and append to files. We learned about the ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "io/fs#FS",
                                    "href": "https://pkg.go.dev/io/fs#FS",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "fs.FS",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/io/fs#FS"
                                }
                              ],
                              {
                                "text": " and ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "io/fs#File",
                                    "href": "https://pkg.go.dev/io/fs#File",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "fs.File",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/io/fs#File"
                                }
                              ],
                              {
                                "text": " interfaces that make working with readonly file systems easier. We learned how to mock out file systems for testing. We also learned to read and walk directories. Finally, we learned how to use the ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "embed",
                                    "href": "https://pkg.go.dev/embed",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "embed",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/embed"
                                }
                              ],
                              {
                                "text": " package to embed files into our Go binaries.",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Paragraph"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "title": "Summary",
                      "type": "*hype.Page"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  }
                ],
                "type": "*hype.Body"
              }
            ]
          ],
          "type": "*hype.Element"
        }
      ],
      "type": "*hype.Element"
    }
  ],
  "parser": {
    "type": "*hype.Parser",
    "root": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files",
    "section": 1,
    "snippets": {}
  },
  "root": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/14-files",
  "section_id": 1,
  "snippets": {},
  "title": "Working With Files",
  "type": "*hype.Document"
}
