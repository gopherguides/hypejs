{
  "nodes": [
    {
      "file": "module.md",
      "nodes": [
        {
          "atom": "html",
          "file": "module.md",
          "nodes": [
            {
              "atom": "head",
              "file": "module.md",
              "type": "*hype.Element"
            },
            [
              {
                "atom": "body",
                "file": "module.md",
                "nodes": [
                  [
                    {
                      "atom": "page",
                      "file": "module.md",
                      "nodes": [
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "h1",
                            "file": "module.md",
                            "level": 1,
                            "nodes": [
                              {
                                "text": "Errors",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "hype.Heading"
                          }
                        ],
                        {
                          "text": "\n\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "p",
                            "file": "module.md",
                            "nodes": [
                              {
                                "text": "This ",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "binding",
                                "attributes": {
                                  "part": ""
                                },
                                "file": "module.md",
                                "type": "*hype.Element"
                              },
                              {
                                "text": " will cover the benefits of how Go's error model results in more reliable code. We will cover how to handle basic errors and return errors as an interface that satisfies the error type. Additionally, concepts such as custom error types, panics, recovering from panics, and sentinel errors are also covered.",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Paragraph"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "title": "Errors",
                      "type": "*hype.Page"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "errors/basics.md"
                      },
                      "dir": "errors",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "errors/basics.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "errors/basics.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "A lot of languages use the concept of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "href": "https://en.wikipedia.org/wiki/Exception_handling",
                                          "target": "_blank"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "text": "exceptions",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://en.wikipedia.org/wiki/Exception_handling"
                                      }
                                    ],
                                    {
                                      "text": ". When something goes wrong, an exception will be thrown. This exception then needs to be caught. When catching an exception you have the opportunity to log the exception and possibly move on with an alternate code path, or re-raise the exception and let the developer upstream deal with the problem.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-1"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-1"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.1",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-1"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " shows an example of how to handle exceptions in Java.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-1",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-java",
                                              "language": "java",
                                              "src": "errors/src/handling-java/main.java#example"
                                            },
                                            "lang": "java",
                                            "nodes": [
                                              {
                                                "content": "public static void main(String args[]) {\n  try {\n    // Open the file\n    FileInputStream fstream = new FileInputStream(\"example.txt\");\n\n    // Get the object of DataInputStream\n    DataInputStream in = new DataInputStream(fstream);\n    BufferedReader br = new BufferedReader(new InputStreamReader(in));\n    String strLine;\n\n    // Read File Line By Line\n    while ((strLine = br.readLine()) != null) {\n      // Print the content on the console\n      System.out.println(strLine);\n    }\n\n    // Close the input stream\n    in.close();\n  } catch (IOException e) {\n    System.err.println(\"IO Error: \" + e.getMessage());\n  } catch (Exception e) {\n    // Catch exception if any\n    System.err.println(\"Error: \" + e.getMessage());\n  }\n}",
                                                "file": "errors/src/handling-java/main.java",
                                                "lang": "java",
                                                "name": "example",
                                                "start": 5,
                                                "end": 31,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.1:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Exceptions in Java.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 1,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "Go takes a different approach and treats errors as values. These values are returned and managed instead of throwing and capturing exceptions, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-2"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-2"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.2",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-2"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-2",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/handling/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func readFile() error {\n\n\t// open the file\n\tf, err := os.Open(\"example.txt\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// close the file when done\n\tdefer f.Close()\n\n\t// open buffered scanner with file\n\tscanner := bufio.NewScanner(f)\n\n\t// scan through each line of the file\n\tfor scanner.Scan() {\n\n\t\t// print line to the console\n\t\tfmt.Println(scanner.Text())\n\t}\n\n\t// if there was an error while scanning\n\t// return the error to the calling function\n\tif err := scanner.Err(); err != nil {\n\t\treturn err\n\t}\n\n\t// everything was good, return nil\n\treturn nil\n}",
                                                "file": "errors/src/handling/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 17,
                                                "end": 49,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.2:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Errors in Go.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 2,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/basics.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "The \"error\" Interface",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "In Go errors are represented by the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/basics.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " interface.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-3",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.error"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.error",
                                          "exec": "go doc builtin.error"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.error\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\ntype error interface {\n\tError() string\n}\n    The error built-in interface type is the conventional interface for\n    representing an error condition, with the nil value representing no error.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.error"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCnR5cGUgZXJyb3IgaW50ZXJmYWNlIHsKCUVycm9yKCkgc3RyaW5nCn0KICAgIFRoZSBlcnJvciBidWlsdC1pbiBpbnRlcmZhY2UgdHlwZSBpcyB0aGUgY29udmVudGlvbmFsIGludGVyZmFjZSBmb3IKICAgIHJlcHJlc2VudGluZyBhbiBlcnJvciBjb25kaXRpb24sIHdpdGggdGhlIG5pbCB2YWx1ZSByZXByZXNlbnRpbmcgbm8gZXJyb3Iu",
                                              "duration": 2024474042,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.error\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\ntype error interface {\n\tError() string\n}\n    The error built-in interface type is the conventional interface for\n    representing an error condition, with the nil value representing no error.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.error"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCnR5cGUgZXJyb3IgaW50ZXJmYWNlIHsKCUVycm9yKCkgc3RyaW5nCn0KICAgIFRoZSBlcnJvciBidWlsdC1pbiBpbnRlcmZhY2UgdHlwZSBpcyB0aGUgY29udmVudGlvbmFsIGludGVyZmFjZSBmb3IKICAgIHJlcHJlc2VudGluZyBhbiBlcnJvciBjb25kaXRpb24sIHdpdGggdGhlIG5pbCB2YWx1ZSByZXByZXNlbnRpbmcgbm8gZXJyb3Iu",
                                            "duration": 2024474042,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.3:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#error",
                                                "href": "https://pkg.go.dev/builtin#error",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "error",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#error"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 3,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h3",
                                  "file": "errors/basics.md",
                                  "level": 3,
                                  "nodes": [
                                    {
                                      "text": "Creating Errors with \"errors.New\"",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "Go provides two quick ways to implement the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/basics.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " interface in our code.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "The first is through the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#New",
                                          "href": "https://pkg.go.dev/errors#New",
                                          "target": "_blank"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/basics.md",
                                            "nodes": [
                                              {
                                                "text": "errors.New",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#New"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-4"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-4"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.4",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-4"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". This function takes a string and returns an implementation of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/basics.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " that uses the supplied string as the error message.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-4",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "errors.New"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "errors.New",
                                          "exec": "go doc errors.New"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc errors.New\n\npackage errors // import \u0026#34;errors\u0026#34;\n\nfunc New(text string) error\n    New returns an error that formats as the given text. Each call to New\n    returns a distinct error value even if the text is identical.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "errors.New"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBlcnJvcnMgLy8gaW1wb3J0ICJlcnJvcnMiCgpmdW5jIE5ldyh0ZXh0IHN0cmluZykgZXJyb3IKICAgIE5ldyByZXR1cm5zIGFuIGVycm9yIHRoYXQgZm9ybWF0cyBhcyB0aGUgZ2l2ZW4gdGV4dC4gRWFjaCBjYWxsIHRvIE5ldwogICAgcmV0dXJucyBhIGRpc3RpbmN0IGVycm9yIHZhbHVlIGV2ZW4gaWYgdGhlIHRleHQgaXMgaWRlbnRpY2FsLg==",
                                              "duration": 2320422833,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc errors.New\n\npackage errors // import \u0026#34;errors\u0026#34;\n\nfunc New(text string) error\n    New returns an error that formats as the given text. Each call to New\n    returns a distinct error value even if the text is identical.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "errors.New"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBlcnJvcnMgLy8gaW1wb3J0ICJlcnJvcnMiCgpmdW5jIE5ldyh0ZXh0IHN0cmluZykgZXJyb3IKICAgIE5ldyByZXR1cm5zIGFuIGVycm9yIHRoYXQgZm9ybWF0cyBhcyB0aGUgZ2l2ZW4gdGV4dC4gRWFjaCBjYWxsIHRvIE5ldwogICAgcmV0dXJucyBhIGRpc3RpbmN0IGVycm9yIHZhbHVlIGV2ZW4gaWYgdGhlIHRleHQgaXMgaWRlbnRpY2FsLg==",
                                            "duration": 2320422833,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.4:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "errors#New",
                                                "href": "https://pkg.go.dev/errors#New",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "errors.New",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/errors#New"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 4,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h3",
                                  "file": "errors/basics.md",
                                  "level": 3,
                                  "nodes": [
                                    {
                                      "text": "Creating Errors with \"fmt.Errorf\" (Recommended)",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "When creating errors, it is common to want to create a string that contains the error message and the values of variables that caused the error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-5",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/newing/main.go#new"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "err = errors.New(fmt.Sprintf(\"error at %s\", time.Now()))",
                                                "file": "errors/src/newing/main.go",
                                                "lang": "go",
                                                "name": "new",
                                                "start": 18,
                                                "end": 20,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.5:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Creating errors with ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "errors#New",
                                                "href": "https://pkg.go.dev/errors#New",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "errors.New",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/errors#New"
                                            }
                                          ],
                                          {
                                            "text": " and ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "fmt#Sprintf",
                                                "href": "https://pkg.go.dev/fmt#Sprintf",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "fmt.Sprintf",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/fmt#Sprintf"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 5,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "To clean up the pattern seen in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-5"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-5"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.5",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-5"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fmt#Errorf",
                                          "href": "https://pkg.go.dev/fmt#Errorf",
                                          "target": "_blank"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/basics.md",
                                            "nodes": [
                                              {
                                                "text": "fmt.Errorf",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fmt#Errorf"
                                      }
                                    ],
                                    {
                                      "text": " method, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-6"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-6"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.6",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-6"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", can be used.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-6",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "fmt.Errorf"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "fmt.Errorf",
                                          "exec": "go doc fmt.Errorf"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc fmt.Errorf\n\npackage fmt // import \u0026#34;fmt\u0026#34;\n\nfunc Errorf(format string, a ...any) error\n    Errorf formats according to a format specifier and returns the string as a\n    value that satisfies error.\n\n    If the format specifier includes a %w verb with an error operand,\n    the returned error will implement an Unwrap method returning the operand.\n    If there is more than one %w verb, the returned error will implement an\n    Unwrap method returning a []error containing all the %w operands in the\n    order they appear in the arguments. It is invalid to supply the %w verb\n    with an operand that does not implement the error interface. The %w verb is\n    otherwise a synonym for %v.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "fmt.Errorf"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBmbXQgLy8gaW1wb3J0ICJmbXQiCgpmdW5jIEVycm9yZihmb3JtYXQgc3RyaW5nLCBhIC4uLmFueSkgZXJyb3IKICAgIEVycm9yZiBmb3JtYXRzIGFjY29yZGluZyB0byBhIGZvcm1hdCBzcGVjaWZpZXIgYW5kIHJldHVybnMgdGhlIHN0cmluZyBhcyBhCiAgICB2YWx1ZSB0aGF0IHNhdGlzZmllcyBlcnJvci4KCiAgICBJZiB0aGUgZm9ybWF0IHNwZWNpZmllciBpbmNsdWRlcyBhICV3IHZlcmIgd2l0aCBhbiBlcnJvciBvcGVyYW5kLAogICAgdGhlIHJldHVybmVkIGVycm9yIHdpbGwgaW1wbGVtZW50IGFuIFVud3JhcCBtZXRob2QgcmV0dXJuaW5nIHRoZSBvcGVyYW5kLgogICAgSWYgdGhlcmUgaXMgbW9yZSB0aGFuIG9uZSAldyB2ZXJiLCB0aGUgcmV0dXJuZWQgZXJyb3Igd2lsbCBpbXBsZW1lbnQgYW4KICAgIFVud3JhcCBtZXRob2QgcmV0dXJuaW5nIGEgW11lcnJvciBjb250YWluaW5nIGFsbCB0aGUgJXcgb3BlcmFuZHMgaW4gdGhlCiAgICBvcmRlciB0aGV5IGFwcGVhciBpbiB0aGUgYXJndW1lbnRzLiBJdCBpcyBpbnZhbGlkIHRvIHN1cHBseSB0aGUgJXcgdmVyYgogICAgd2l0aCBhbiBvcGVyYW5kIHRoYXQgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBlcnJvciBpbnRlcmZhY2UuIFRoZSAldyB2ZXJiIGlzCiAgICBvdGhlcndpc2UgYSBzeW5vbnltIGZvciAldi4=",
                                              "duration": 2070643625,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc fmt.Errorf\n\npackage fmt // import \u0026#34;fmt\u0026#34;\n\nfunc Errorf(format string, a ...any) error\n    Errorf formats according to a format specifier and returns the string as a\n    value that satisfies error.\n\n    If the format specifier includes a %w verb with an error operand,\n    the returned error will implement an Unwrap method returning the operand.\n    If there is more than one %w verb, the returned error will implement an\n    Unwrap method returning a []error containing all the %w operands in the\n    order they appear in the arguments. It is invalid to supply the %w verb\n    with an operand that does not implement the error interface. The %w verb is\n    otherwise a synonym for %v.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "fmt.Errorf"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBmbXQgLy8gaW1wb3J0ICJmbXQiCgpmdW5jIEVycm9yZihmb3JtYXQgc3RyaW5nLCBhIC4uLmFueSkgZXJyb3IKICAgIEVycm9yZiBmb3JtYXRzIGFjY29yZGluZyB0byBhIGZvcm1hdCBzcGVjaWZpZXIgYW5kIHJldHVybnMgdGhlIHN0cmluZyBhcyBhCiAgICB2YWx1ZSB0aGF0IHNhdGlzZmllcyBlcnJvci4KCiAgICBJZiB0aGUgZm9ybWF0IHNwZWNpZmllciBpbmNsdWRlcyBhICV3IHZlcmIgd2l0aCBhbiBlcnJvciBvcGVyYW5kLAogICAgdGhlIHJldHVybmVkIGVycm9yIHdpbGwgaW1wbGVtZW50IGFuIFVud3JhcCBtZXRob2QgcmV0dXJuaW5nIHRoZSBvcGVyYW5kLgogICAgSWYgdGhlcmUgaXMgbW9yZSB0aGFuIG9uZSAldyB2ZXJiLCB0aGUgcmV0dXJuZWQgZXJyb3Igd2lsbCBpbXBsZW1lbnQgYW4KICAgIFVud3JhcCBtZXRob2QgcmV0dXJuaW5nIGEgW11lcnJvciBjb250YWluaW5nIGFsbCB0aGUgJXcgb3BlcmFuZHMgaW4gdGhlCiAgICBvcmRlciB0aGV5IGFwcGVhciBpbiB0aGUgYXJndW1lbnRzLiBJdCBpcyBpbnZhbGlkIHRvIHN1cHBseSB0aGUgJXcgdmVyYgogICAgd2l0aCBhbiBvcGVyYW5kIHRoYXQgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBlcnJvciBpbnRlcmZhY2UuIFRoZSAldyB2ZXJiIGlzCiAgICBvdGhlcndpc2UgYSBzeW5vbnltIGZvciAldi4=",
                                            "duration": 2070643625,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.6:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "fmt#Errorf",
                                                "href": "https://pkg.go.dev/fmt#Errorf",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "fmt.Errorf",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/fmt#Errorf"
                                            }
                                          ],
                                          {
                                            "text": " method.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 6,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-7"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-7"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.7",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-7"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " the code is now cleaner and more readable than in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-5"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-5"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.5",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-5"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-7",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/newing/main.go#errorf"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "err = fmt.Errorf(\"error at %s\", time.Now())",
                                                "file": "errors/src/newing/main.go",
                                                "lang": "go",
                                                "name": "errorf",
                                                "start": 12,
                                                "end": 14,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.7:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Creating errors with ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "fmt#Errorf",
                                                "href": "https://pkg.go.dev/fmt#Errorf",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "fmt.Errorf",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/fmt#Errorf"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 7,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "blockquote",
                                "file": "errors/basics.md",
                                "nodes": [
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  },
                                  [
                                    {
                                      "atom": "p",
                                      "file": "errors/basics.md",
                                      "nodes": [
                                        {
                                          "text": "Using ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "for": "fmt#Errorf",
                                              "href": "https://pkg.go.dev/fmt#Errorf",
                                              "target": "_blank"
                                            },
                                            "file": "errors/basics.md",
                                            "nodes": [
                                              {
                                                "atom": "code",
                                                "file": "errors/basics.md",
                                                "nodes": [
                                                  {
                                                    "text": "fmt.Errorf",
                                                    "type": "hype.Text"
                                                  }
                                                ],
                                                "type": "*hype.InlineCode"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://pkg.go.dev/fmt#Errorf"
                                          }
                                        ],
                                        {
                                          "text": " will handle ",
                                          "type": "hype.Text"
                                        },
                                        {
                                          "atom": "strong",
                                          "file": "errors/basics.md",
                                          "nodes": [
                                            {
                                              "text": "most",
                                              "type": "hype.Text"
                                            }
                                          ],
                                          "type": "*hype.Element"
                                        },
                                        {
                                          "text": " use cases for creating errors.",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Paragraph"
                                    }
                                  ],
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  }
                                ],
                                "type": "*hype.Element"
                              },
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/basics.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Handling Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "With errors being a type in the Go type system, in this case an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "text": "interface",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " type, errors can be returned from, and accepted as, function arguments.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "In Go, if an error is returned from the function, it should ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "strong",
                                      "file": "errors/basics.md",
                                      "nodes": [
                                        {
                                          "text": "always",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " be returned as the last argument. While the Go compiler won't enforce this, it is the expected idiom in the Go ecosystem.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-8",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go"
                                            },
                                            "file": "errors",
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "text": "// good\nfunc one() error {}\nfunc two() (int, error) {}\n\n// bad\nfunc bad() (error, int) {}\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.FencedCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.8:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Good and bad examples of return an ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#error",
                                                "href": "https://pkg.go.dev/builtin#error",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "error",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#error"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 8,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "As with all interfaces in Go, the zero value of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/basics.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " interface is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". Error checking in Go is done by checking if the returned error is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " or not.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-9",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go"
                                            },
                                            "file": "errors",
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "text": "err := boom()\nif err != nil {\n  // the error was not nil\n  // do something with the error\n}\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.FencedCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.9:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Checking for errors by assert against ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 9,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/basics.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Using Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-10"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-10"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.10",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-10"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " if the key being requested in the map is found, its value will be returned and a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " will be returned instead of an argument. If the key is not found in the map an empty string and an error, created with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fmt#Errorf",
                                          "href": "https://pkg.go.dev/fmt#Errorf",
                                          "target": "_blank"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/basics.md",
                                            "nodes": [
                                              {
                                                "text": "fmt.Errorf",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fmt#Errorf"
                                      }
                                    ],
                                    {
                                      "text": ", are returned.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-10",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/using/using.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Get(key string) (string, error) {\n\tm := map[string]string{\n\t\t\"a\": \"A\",\n\t\t\"b\": \"B\",\n\t}\n\n\tif v, ok := m[key]; ok {\n\t\treturn v, nil\n\t}\n\n\treturn \"\", fmt.Errorf(\"no key found %s\", key)\n}",
                                                "file": "errors/src/using/using.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 19,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.10:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A function that might return an ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#error",
                                                "href": "https://pkg.go.dev/builtin#error",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "error",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#error"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 10,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "A test for the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "text": "Get",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-11"
                                        },
                                        "file": "errors/basics.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-11"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.11",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-11"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", demonstrates the error checking pattern in action.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-11",
                                    "type": "listing"
                                  },
                                  "file": "errors/basics.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/using/using_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Get(t *testing.T) {\n\tt.Parallel()\n\n\tact, err := Get(\"a\")\n\tif err != nil {\n\t\tt.Fatalf(\"expect no error, got %s\", err)\n\t}\n\n\texp := \"A\"\n\tif act != exp {\n\t\tt.Fatalf(\"expected %s, got %s\", exp, act)\n\t}\n\n\t_, err = Get(\"?\")\n\tif err == nil {\n\t\tt.Fatalf(\"expected an error, got nil\")\n\t}\n}",
                                                "file": "errors/src/using/using_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 5,
                                                "end": 25,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.11:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A test for the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Get",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 11,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Errors",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "panic/panic.md"
                      },
                      "dir": "panic",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "panic.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "panic.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Panic",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "blockquote",
                                "file": "panic.md",
                                "nodes": [
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  },
                                  [
                                    {
                                      "atom": "p",
                                      "file": "panic.md",
                                      "nodes": [
                                        {
                                          "text": "\"",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "https://bit.ly/3jqqUk3",
                                              "target": "_blank"
                                            },
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "The Hitchhiker's Guide to the Galaxy",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://bit.ly/3jqqUk3"
                                          }
                                        ],
                                        {
                                          "text": " itself has outsold the Encyclopedia Galactica because it is slightly cheaper, and because it has the words ‘DON'T PANIC' in large, friendly letters on the cover.\"",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Paragraph"
                                    }
                                  ],
                                  {
                                    "text": "\n\n",
                                    "type": "hype.Text"
                                  },
                                  [
                                    {
                                      "atom": "p",
                                      "file": "panic.md",
                                      "nodes": [
                                        {
                                          "text": "Arthur C. Clarke said Douglas Adams' use of ",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "https://en.wikipedia.org/wiki/Phrases_from_The_Hitchhiker%27s_Guide_to_the_Galaxy#Don't_Panic",
                                              "target": "_blank"
                                            },
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "\"don't panic\"",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "https://en.wikipedia.org/wiki/Phrases_from_The_Hitchhiker%27s_Guide_to_the_Galaxy#Don't_Panic"
                                          }
                                        ],
                                        {
                                          "text": " was perhaps the best advice that could be given to humanity.",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Paragraph"
                                    }
                                  ],
                                  {
                                    "text": "\n",
                                    "type": "hype.Text"
                                  }
                                ],
                                "type": "*hype.Element"
                              },
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "panic.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "What is a Panic?",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "Occasionally, your code you will do something that the Go runtime does not like. For example, in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-12"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-12"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.12",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-12"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", if we try to insert a value into an array or slice that is beyond the bounds of the array or slice, the runtime will panic.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-12",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/basics/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\ta := []string{}\n\ta[42] = \"Bring a towel\"\n}",
                                                "file": "panic/src/basics/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 3,
                                                "end": 9,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "panic",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "panic/src/basics"
                                        },
                                        "expected_exit": -1,
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\npanic: runtime error: index out of range [42] with length 0\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:6 +0x24\nexit status 2",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/basics",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IG91dCBvZiByYW5nZSBbNDJdIHdpdGggbGVuZ3RoIDAKCmdvcm91dGluZSAxIFtydW5uaW5nXToKbWFpbi5tYWluKCkKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvcGFuaWMvc3JjL2Jhc2ljcy9tYWluLmdvOjYgKzB4MjQKZXhpdCBzdGF0dXMgMg==",
                                              "duration": 3531196500,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\npanic: runtime error: index out of range [42] with length 0\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:6 +0x24\nexit status 2",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/basics",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IG91dCBvZiByYW5nZSBbNDJdIHdpdGggbGVuZ3RoIDAKCmdvcm91dGluZSAxIFtydW5uaW5nXToKbWFpbi5tYWluKCkKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvcGFuaWMvc3JjL2Jhc2ljcy9tYWluLmdvOjYgKzB4MjQKZXhpdCBzdGF0dXMgMg==",
                                            "duration": 3531196500,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.12:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A panic caused by an out of bounds index.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 12,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "panic.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Raising a Panic",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "A panic in Go can be raised using the built-in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#panic",
                                          "href": "https://pkg.go.dev/builtin#panic",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "panic",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#panic"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-13"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-13"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.13",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-13"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#panic",
                                          "href": "https://pkg.go.dev/builtin#panic",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "panic",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#panic"
                                      }
                                    ],
                                    {
                                      "text": " function takes ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "any",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " value as an argument.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-13",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.panic"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.panic",
                                          "exec": "go doc builtin.panic"
                                        },
                                        "expected_exit": 0,
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.panic\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc panic(v any)\n    The panic built-in function stops normal execution of the current goroutine.\n    When a function F calls panic, normal execution of F stops immediately.\n    Any functions whose execution was deferred by F are run in the usual way,\n    and then F returns to its caller. To the caller G, the invocation of F then\n    behaves like a call to panic, terminating G\u0026#39;s execution and running any\n    deferred functions. This continues until all functions in the executing\n    goroutine have stopped, in reverse order. At that point, the program is\n    terminated with a non-zero exit code. This termination sequence is called\n    panicking and can be controlled by the built-in function recover.\n\n    Starting in Go 1.21, calling panic with a nil interface value or an untyped\n    nil causes a run-time error (a different panic). The GODEBUG setting\n    panicnil=1 disables the run-time error.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.panic"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgcGFuaWModiBhbnkpCiAgICBUaGUgcGFuaWMgYnVpbHQtaW4gZnVuY3Rpb24gc3RvcHMgbm9ybWFsIGV4ZWN1dGlvbiBvZiB0aGUgY3VycmVudCBnb3JvdXRpbmUuCiAgICBXaGVuIGEgZnVuY3Rpb24gRiBjYWxscyBwYW5pYywgbm9ybWFsIGV4ZWN1dGlvbiBvZiBGIHN0b3BzIGltbWVkaWF0ZWx5LgogICAgQW55IGZ1bmN0aW9ucyB3aG9zZSBleGVjdXRpb24gd2FzIGRlZmVycmVkIGJ5IEYgYXJlIHJ1biBpbiB0aGUgdXN1YWwgd2F5LAogICAgYW5kIHRoZW4gRiByZXR1cm5zIHRvIGl0cyBjYWxsZXIuIFRvIHRoZSBjYWxsZXIgRywgdGhlIGludm9jYXRpb24gb2YgRiB0aGVuCiAgICBiZWhhdmVzIGxpa2UgYSBjYWxsIHRvIHBhbmljLCB0ZXJtaW5hdGluZyBHJ3MgZXhlY3V0aW9uIGFuZCBydW5uaW5nIGFueQogICAgZGVmZXJyZWQgZnVuY3Rpb25zLiBUaGlzIGNvbnRpbnVlcyB1bnRpbCBhbGwgZnVuY3Rpb25zIGluIHRoZSBleGVjdXRpbmcKICAgIGdvcm91dGluZSBoYXZlIHN0b3BwZWQsIGluIHJldmVyc2Ugb3JkZXIuIEF0IHRoYXQgcG9pbnQsIHRoZSBwcm9ncmFtIGlzCiAgICB0ZXJtaW5hdGVkIHdpdGggYSBub24temVybyBleGl0IGNvZGUuIFRoaXMgdGVybWluYXRpb24gc2VxdWVuY2UgaXMgY2FsbGVkCiAgICBwYW5pY2tpbmcgYW5kIGNhbiBiZSBjb250cm9sbGVkIGJ5IHRoZSBidWlsdC1pbiBmdW5jdGlvbiByZWNvdmVyLgoKICAgIFN0YXJ0aW5nIGluIEdvIDEuMjEsIGNhbGxpbmcgcGFuaWMgd2l0aCBhIG5pbCBpbnRlcmZhY2UgdmFsdWUgb3IgYW4gdW50eXBlZAogICAgbmlsIGNhdXNlcyBhIHJ1bi10aW1lIGVycm9yIChhIGRpZmZlcmVudCBwYW5pYykuIFRoZSBHT0RFQlVHIHNldHRpbmcKICAgIHBhbmljbmlsPTEgZGlzYWJsZXMgdGhlIHJ1bi10aW1lIGVycm9yLg==",
                                              "duration": 2271779833,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.panic\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc panic(v any)\n    The panic built-in function stops normal execution of the current goroutine.\n    When a function F calls panic, normal execution of F stops immediately.\n    Any functions whose execution was deferred by F are run in the usual way,\n    and then F returns to its caller. To the caller G, the invocation of F then\n    behaves like a call to panic, terminating G\u0026#39;s execution and running any\n    deferred functions. This continues until all functions in the executing\n    goroutine have stopped, in reverse order. At that point, the program is\n    terminated with a non-zero exit code. This termination sequence is called\n    panicking and can be controlled by the built-in function recover.\n\n    Starting in Go 1.21, calling panic with a nil interface value or an untyped\n    nil causes a run-time error (a different panic). The GODEBUG setting\n    panicnil=1 disables the run-time error.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.panic"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgcGFuaWModiBhbnkpCiAgICBUaGUgcGFuaWMgYnVpbHQtaW4gZnVuY3Rpb24gc3RvcHMgbm9ybWFsIGV4ZWN1dGlvbiBvZiB0aGUgY3VycmVudCBnb3JvdXRpbmUuCiAgICBXaGVuIGEgZnVuY3Rpb24gRiBjYWxscyBwYW5pYywgbm9ybWFsIGV4ZWN1dGlvbiBvZiBGIHN0b3BzIGltbWVkaWF0ZWx5LgogICAgQW55IGZ1bmN0aW9ucyB3aG9zZSBleGVjdXRpb24gd2FzIGRlZmVycmVkIGJ5IEYgYXJlIHJ1biBpbiB0aGUgdXN1YWwgd2F5LAogICAgYW5kIHRoZW4gRiByZXR1cm5zIHRvIGl0cyBjYWxsZXIuIFRvIHRoZSBjYWxsZXIgRywgdGhlIGludm9jYXRpb24gb2YgRiB0aGVuCiAgICBiZWhhdmVzIGxpa2UgYSBjYWxsIHRvIHBhbmljLCB0ZXJtaW5hdGluZyBHJ3MgZXhlY3V0aW9uIGFuZCBydW5uaW5nIGFueQogICAgZGVmZXJyZWQgZnVuY3Rpb25zLiBUaGlzIGNvbnRpbnVlcyB1bnRpbCBhbGwgZnVuY3Rpb25zIGluIHRoZSBleGVjdXRpbmcKICAgIGdvcm91dGluZSBoYXZlIHN0b3BwZWQsIGluIHJldmVyc2Ugb3JkZXIuIEF0IHRoYXQgcG9pbnQsIHRoZSBwcm9ncmFtIGlzCiAgICB0ZXJtaW5hdGVkIHdpdGggYSBub24temVybyBleGl0IGNvZGUuIFRoaXMgdGVybWluYXRpb24gc2VxdWVuY2UgaXMgY2FsbGVkCiAgICBwYW5pY2tpbmcgYW5kIGNhbiBiZSBjb250cm9sbGVkIGJ5IHRoZSBidWlsdC1pbiBmdW5jdGlvbiByZWNvdmVyLgoKICAgIFN0YXJ0aW5nIGluIEdvIDEuMjEsIGNhbGxpbmcgcGFuaWMgd2l0aCBhIG5pbCBpbnRlcmZhY2UgdmFsdWUgb3IgYW4gdW50eXBlZAogICAgbmlsIGNhdXNlcyBhIHJ1bi10aW1lIGVycm9yIChhIGRpZmZlcmVudCBwYW5pYykuIFRoZSBHT0RFQlVHIHNldHRpbmcKICAgIHBhbmljbmlsPTEgZGlzYWJsZXMgdGhlIHJ1bi10aW1lIGVycm9yLg==",
                                            "duration": 2271779833,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.13:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#panic",
                                                "href": "https://pkg.go.dev/builtin#panic",
                                                "target": "_blank"
                                              },
                                              "file": "panic",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "panic",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#panic"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 13,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "panic.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Recovering From A Panic",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "With a combination of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "defer",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keyword and the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " function we can recover from panics in our applications and gracefully handle them.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-14",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.recover"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.recover",
                                          "exec": "go doc builtin.recover"
                                        },
                                        "expected_exit": 0,
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.recover\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc recover() any\n    The recover built-in function allows a program to manage behavior of\n    a panicking goroutine. Executing a call to recover inside a deferred\n    function (but not any function called by it) stops the panicking sequence\n    by restoring normal execution and retrieves the error value passed to the\n    call of panic. If recover is called outside the deferred function it will\n    not stop a panicking sequence. In this case, or when the goroutine is not\n    panicking, or if the argument supplied to panic was nil, recover returns\n    nil. Thus the return value from recover reports whether the goroutine is\n    panicking.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.recover"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgcmVjb3ZlcigpIGFueQogICAgVGhlIHJlY292ZXIgYnVpbHQtaW4gZnVuY3Rpb24gYWxsb3dzIGEgcHJvZ3JhbSB0byBtYW5hZ2UgYmVoYXZpb3Igb2YKICAgIGEgcGFuaWNraW5nIGdvcm91dGluZS4gRXhlY3V0aW5nIGEgY2FsbCB0byByZWNvdmVyIGluc2lkZSBhIGRlZmVycmVkCiAgICBmdW5jdGlvbiAoYnV0IG5vdCBhbnkgZnVuY3Rpb24gY2FsbGVkIGJ5IGl0KSBzdG9wcyB0aGUgcGFuaWNraW5nIHNlcXVlbmNlCiAgICBieSByZXN0b3Jpbmcgbm9ybWFsIGV4ZWN1dGlvbiBhbmQgcmV0cmlldmVzIHRoZSBlcnJvciB2YWx1ZSBwYXNzZWQgdG8gdGhlCiAgICBjYWxsIG9mIHBhbmljLiBJZiByZWNvdmVyIGlzIGNhbGxlZCBvdXRzaWRlIHRoZSBkZWZlcnJlZCBmdW5jdGlvbiBpdCB3aWxsCiAgICBub3Qgc3RvcCBhIHBhbmlja2luZyBzZXF1ZW5jZS4gSW4gdGhpcyBjYXNlLCBvciB3aGVuIHRoZSBnb3JvdXRpbmUgaXMgbm90CiAgICBwYW5pY2tpbmcsIG9yIGlmIHRoZSBhcmd1bWVudCBzdXBwbGllZCB0byBwYW5pYyB3YXMgbmlsLCByZWNvdmVyIHJldHVybnMKICAgIG5pbC4gVGh1cyB0aGUgcmV0dXJuIHZhbHVlIGZyb20gcmVjb3ZlciByZXBvcnRzIHdoZXRoZXIgdGhlIGdvcm91dGluZSBpcwogICAgcGFuaWNraW5nLg==",
                                              "duration": 2024148333,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.recover\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc recover() any\n    The recover built-in function allows a program to manage behavior of\n    a panicking goroutine. Executing a call to recover inside a deferred\n    function (but not any function called by it) stops the panicking sequence\n    by restoring normal execution and retrieves the error value passed to the\n    call of panic. If recover is called outside the deferred function it will\n    not stop a panicking sequence. In this case, or when the goroutine is not\n    panicking, or if the argument supplied to panic was nil, recover returns\n    nil. Thus the return value from recover reports whether the goroutine is\n    panicking.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.recover"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgcmVjb3ZlcigpIGFueQogICAgVGhlIHJlY292ZXIgYnVpbHQtaW4gZnVuY3Rpb24gYWxsb3dzIGEgcHJvZ3JhbSB0byBtYW5hZ2UgYmVoYXZpb3Igb2YKICAgIGEgcGFuaWNraW5nIGdvcm91dGluZS4gRXhlY3V0aW5nIGEgY2FsbCB0byByZWNvdmVyIGluc2lkZSBhIGRlZmVycmVkCiAgICBmdW5jdGlvbiAoYnV0IG5vdCBhbnkgZnVuY3Rpb24gY2FsbGVkIGJ5IGl0KSBzdG9wcyB0aGUgcGFuaWNraW5nIHNlcXVlbmNlCiAgICBieSByZXN0b3Jpbmcgbm9ybWFsIGV4ZWN1dGlvbiBhbmQgcmV0cmlldmVzIHRoZSBlcnJvciB2YWx1ZSBwYXNzZWQgdG8gdGhlCiAgICBjYWxsIG9mIHBhbmljLiBJZiByZWNvdmVyIGlzIGNhbGxlZCBvdXRzaWRlIHRoZSBkZWZlcnJlZCBmdW5jdGlvbiBpdCB3aWxsCiAgICBub3Qgc3RvcCBhIHBhbmlja2luZyBzZXF1ZW5jZS4gSW4gdGhpcyBjYXNlLCBvciB3aGVuIHRoZSBnb3JvdXRpbmUgaXMgbm90CiAgICBwYW5pY2tpbmcsIG9yIGlmIHRoZSBhcmd1bWVudCBzdXBwbGllZCB0byBwYW5pYyB3YXMgbmlsLCByZWNvdmVyIHJldHVybnMKICAgIG5pbC4gVGh1cyB0aGUgcmV0dXJuIHZhbHVlIGZyb20gcmVjb3ZlciByZXBvcnRzIHdoZXRoZXIgdGhlIGdvcm91dGluZSBpcwogICAgcGFuaWNraW5nLg==",
                                            "duration": 2024148333,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.14:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#recover",
                                                "href": "https://pkg.go.dev/builtin#recover",
                                                "target": "_blank"
                                              },
                                              "file": "panic",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "recover",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#recover"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 14,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-15"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-15"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.15",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-15"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", before we run the code that will panic, we use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "defer",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keyword to execute an anonymous function that will run before the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "main",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function exits. Inside of the deferred function we can call the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " function and check its return value for ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". A non-",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " value will be returned from the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " function if a panic occurred.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "Now, when the panic occurs, it is caught by the deferred ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " and can be handled gracefully.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-15",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/recover/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tdefer func() {\n\t\tif i := recover(); i != nil {\n\t\t\tfmt.Println(\"oh no, a panic occurred:\", i)\n\t\t}\n\t}()\n\n\ta := []string{}\n\ta[42] = \"Bring a towel\"\n}",
                                                "file": "panic/src/recover/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 17,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "panic",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "panic/src/recover"
                                        },
                                        "expected_exit": 0,
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\noh no, a panic occurred: runtime error: index out of range [42] with length 0",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/recover",
                                              "stdout": "b2ggbm8sIGEgcGFuaWMgb2NjdXJyZWQ6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IG91dCBvZiByYW5nZSBbNDJdIHdpdGggbGVuZ3RoIDA=",
                                              "duration": 3066097208,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\noh no, a panic occurred: runtime error: index out of range [42] with length 0",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/recover",
                                            "stdout": "b2ggbm8sIGEgcGFuaWMgb2NjdXJyZWQ6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IG91dCBvZiByYW5nZSBbNDJdIHdpdGggbGVuZ3RoIDA=",
                                            "duration": 3066097208,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.15:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Recovering from a panic.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 15,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "While this is not the common use case for using ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": ", it does show the mechanics of how it works. It is more common to use recover when your application calls a user defined function that is passed in as an argument.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-16"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-16"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.16",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-16"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " is an example of a function that takes a user defined function to match a specific string. If the function passed in panics, it will result in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "sanitize",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function panicking as well.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-16",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/matcher/bad/main.go#matcher"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "type matcher func(rune) bool\n\nfunc sanitize(m matcher, s string) (string, error) {\n\tvar val string\n\n\t// iterate over the runes in the string\n\tfor _, c := range s {\n\n\t\t// call the matcher function\n\t\t// with the rune as the argument\n\t\tif m(c) {\n\t\t\t// append `*` to the result\n\t\t\tval = val + \"*\"\n\t\t\t// continue to the next rune\n\t\t\tcontinue\n\t\t}\n\n\t\t// append the rune to the result\n\t\tval = val + string(c)\n\t}\n\n\t// return the sanitized string\n\treturn val, nil\n}",
                                                "file": "panic/src/matcher/bad/main.go",
                                                "lang": "go",
                                                "name": "matcher",
                                                "start": 33,
                                                "end": 59,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/matcher/bad/main.go#bad"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\n\t// create a matcher function\n\tm := func(r rune) bool {\n\t\t// simulate doing something bad...\n\t\tpanic(\"hahaha\")\n\n\t\t// unreachable code\n\t\treturn false\n\t}\n\n\t// sanitize the string\n\ts, err := sanitize(m, \"go is awesome\")\n\tif err != nil {\n\t\t// handle the error\n\t\tlog.Fatal(err)\n\t}\n\n\t// print the sanitized string\n\tfmt.Println(s)\n}",
                                                "file": "panic/src/matcher/bad/main.go",
                                                "lang": "go",
                                                "name": "bad",
                                                "start": 8,
                                                "end": 31,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "panic",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "panic/src/matcher/bad"
                                        },
                                        "expected_exit": -1,
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\npanic: hahaha\n\ngoroutine 1 [running]:\nmain.main.func1(0xa41ee0?)\n\t./main.go:14 +0x2c\nmain.sanitize(0x10099af00, {0x10095ea20, 0xd})\n\t./main.go:44 +0xa4\nmain.main()\n\t./main.go:21 +0x30\nexit status 2",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/matcher/bad",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "cGFuaWM6IGhhaGFoYQoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4uZnVuYzEoMHhhNDFlZTA/KQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvbWF0Y2hlci9iYWQvbWFpbi5nbzoxNCArMHgyYwptYWluLnNhbml0aXplKDB4MTAwOTlhZjAwLCB7MHgxMDA5NWVhMjAsIDB4ZH0pCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9tYXRjaGVyL2JhZC9tYWluLmdvOjQ0ICsweGE0Cm1haW4ubWFpbigpCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9tYXRjaGVyL2JhZC9tYWluLmdvOjIxICsweDMwCmV4aXQgc3RhdHVzIDI=",
                                              "duration": 2516479917,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\npanic: hahaha\n\ngoroutine 1 [running]:\nmain.main.func1(0xa41ee0?)\n\t./main.go:14 +0x2c\nmain.sanitize(0x10099af00, {0x10095ea20, 0xd})\n\t./main.go:44 +0xa4\nmain.main()\n\t./main.go:21 +0x30\nexit status 2",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/matcher/bad",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "cGFuaWM6IGhhaGFoYQoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4uZnVuYzEoMHhhNDFlZTA/KQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvbWF0Y2hlci9iYWQvbWFpbi5nbzoxNCArMHgyYwptYWluLnNhbml0aXplKDB4MTAwOTlhZjAwLCB7MHgxMDA5NWVhMjAsIDB4ZH0pCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9tYXRjaGVyL2JhZC9tYWluLmdvOjQ0ICsweGE0Cm1haW4ubWFpbigpCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9tYXRjaGVyL2JhZC9tYWluLmdvOjIxICsweDMwCmV4aXQgc3RhdHVzIDI=",
                                            "duration": 2516479917,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.16:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A function that sanitizes a given string.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 16,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "However, if we use a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "sanitize",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function, we can gracefully handle any potential panic that the user provided function may create. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-17"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-17"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.17",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-17"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " to handle panics in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "sanitize",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-17",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/matcher/good/main.go#matcher"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func sanitize(m matcher, s string) (val string, err error) {\n\t// guard against an invalid matcher that could panic\n\tdefer func() {\n\t\tif e := recover(); e != nil {\n\t\t\terr = fmt.Errorf(\"invalid matcher. panic occurred: %v\", e)\n\t\t}\n\t}()\n\n\tfor _, c := range s {\n\t\tif m(c) {\n\t\t\tval = val + \"*\"\n\t\t\tcontinue\n\t\t}\n\t\tval = val + string(c)\n\t}\n\treturn\n}",
                                                "file": "panic/src/matcher/good/main.go",
                                                "lang": "go",
                                                "name": "matcher",
                                                "start": 25,
                                                "end": 44,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "panic",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "panic/src/matcher/good"
                                        },
                                        "expected_exit": 0,
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\ninvalid matcher. panic occurred: hahaha",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/matcher/good",
                                              "stdout": "aW52YWxpZCBtYXRjaGVyLiBwYW5pYyBvY2N1cnJlZDogaGFoYWhh",
                                              "duration": 2408103666,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\ninvalid matcher. panic occurred: hahaha",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/matcher/good",
                                            "stdout": "aW52YWxpZCBtYXRjaGVyLiBwYW5pYyBvY2N1cnJlZDogaGFoYWhh",
                                            "duration": 2408103666,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.17:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A function that sanitizes a given string.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 17,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "Now, if a user inadvertently raises a panic in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "matcher",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function provided, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "sanitize",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function will handle it gracefully and return an error, instead of panicking as well.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "panic.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Capturing and Returning Panic Values",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "When something panics in Go you have three options for how to handle the panic. ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-18"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-18"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.18",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-18"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " lists the three options.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-18",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ol",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "panic",
                                              "list-type": "ol",
                                              "nodes": [
                                                {
                                                  "text": "You can let the panic crash the application and deal with the fall out.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "panic",
                                              "list-type": "ol",
                                              "nodes": [
                                                {
                                                  "text": "You can recover from the panic, log it, and move on.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "panic",
                                              "list-type": "ol",
                                              "nodes": [
                                                {
                                                  "text": "You can properly capture the panicked value and return it as an error.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.OL"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.18:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Three options for handling panics.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 18,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "This last option, in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-18"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-18"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.18",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-18"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", gives you the most control over recovering from panics. However, it requires a number of steps, and functions, to make this happen.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "Consider the function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "DoSomething(int)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-19"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-19"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.19",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-19"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " that takes an integer and either returns ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " or panics.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-19",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/recover-broken/recover.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func DoSomething(input int) error {\n\tswitch input {\n\tcase 0:\n\t\t// input was 0, return no error (nil)\n\t\treturn nil\n\tcase 1:\n\t\t// input was 1, panic with the string \"one\"\n\t\tpanic(\"one\")\n\t}\n\n\t// no case was matched\n\treturn nil\n}",
                                                "file": "panic/src/recover-broken/recover.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 3,
                                                "end": 18,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.19:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A function that returns ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " or panics.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 19,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-20"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-20"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.20",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-20"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we have a test for the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "DoSomething(int)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function. When we call the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "DoSomething(int)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function with the value ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "1",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", the test panics.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-20",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/recover-broken/recover_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_DoSomething(t *testing.T) {\n\tt.Parallel()\n\n\terr := DoSomething(0)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\terr = DoSomething(1)\n\n\tif err != nil {\n\t\tt.Fatal(\"expected nil, got\", err)\n\t}\n}",
                                                "file": "panic/src/recover-broken/recover_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 7,
                                                "end": 23,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "panic",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "panic/src/recover-broken",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_DoSomething\n=== PAUSE Test_DoSomething\n=== CONT  Test_DoSomething\n--- FAIL: Test_DoSomething (0.00s)\npanic: one [recovered]\n\tpanic: one\n\ngoroutine 5 [running]:\ntesting.tRunner.func1.2({0x1003b4ee0, 0x1003db8c8})\n\t/usr/local/go/src/testing/testing.go:1545 +0x1c4\ntesting.tRunner.func1()\n\t/usr/local/go/src/testing/testing.go:1548 +0x360\npanic({0x1003b4ee0?, 0x1003db8c8?})\n\t/usr/local/go/src/runtime/panic.go:914 +0x218\ndemo.DoSomething(...)\n\t./recover.go:11\ndemo.Test_DoSomething(0x0?)\n\t./recover_test.go:16 +0x34\ntesting.tRunner(0x14000003860, 0x1003db0c0)\n\t/usr/local/go/src/testing/testing.go:1595 +0xe8\ncreated by testing.(*T).Run in goroutine 1\n\t/usr/local/go/src/testing/testing.go:1648 +0x33c\nexit status 2\nFAIL\tdemo\t1.854s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/recover-broken",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfRG9Tb21ldGhpbmcKPT09IFBBVVNFIFRlc3RfRG9Tb21ldGhpbmcKPT09IENPTlQgIFRlc3RfRG9Tb21ldGhpbmcKLS0tIEZBSUw6IFRlc3RfRG9Tb21ldGhpbmcgKDAuMDBzKQpwYW5pYzogb25lIFtyZWNvdmVyZWRdCglwYW5pYzogb25lCgpnb3JvdXRpbmUgNSBbcnVubmluZ106CnRlc3RpbmcudFJ1bm5lci5mdW5jMS4yKHsweDEwMDNiNGVlMCwgMHgxMDAzZGI4Yzh9KQoJL3Vzci9sb2NhbC9nby9zcmMvdGVzdGluZy90ZXN0aW5nLmdvOjE1NDUgKzB4MWM0CnRlc3RpbmcudFJ1bm5lci5mdW5jMSgpCgkvdXNyL2xvY2FsL2dvL3NyYy90ZXN0aW5nL3Rlc3RpbmcuZ286MTU0OCArMHgzNjAKcGFuaWMoezB4MTAwM2I0ZWUwPywgMHgxMDAzZGI4Yzg/fSkKCS91c3IvbG9jYWwvZ28vc3JjL3J1bnRpbWUvcGFuaWMuZ286OTE0ICsweDIxOApkZW1vLkRvU29tZXRoaW5nKC4uLikKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvcGFuaWMvc3JjL3JlY292ZXItYnJva2VuL3JlY292ZXIuZ286MTEKZGVtby5UZXN0X0RvU29tZXRoaW5nKDB4MD8pCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9yZWNvdmVyLWJyb2tlbi9yZWNvdmVyX3Rlc3QuZ286MTYgKzB4MzQKdGVzdGluZy50UnVubmVyKDB4MTQwMDAwMDM4NjAsIDB4MTAwM2RiMGMwKQoJL3Vzci9sb2NhbC9nby9zcmMvdGVzdGluZy90ZXN0aW5nLmdvOjE1OTUgKzB4ZTgKY3JlYXRlZCBieSB0ZXN0aW5nLigqVCkuUnVuIGluIGdvcm91dGluZSAxCgkvdXNyL2xvY2FsL2dvL3NyYy90ZXN0aW5nL3Rlc3RpbmcuZ286MTY0OCArMHgzM2MKZXhpdCBzdGF0dXMgMgpGQUlMCWRlbW8JMS44NTRz",
                                              "duration": 4698238959,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_DoSomething\n=== PAUSE Test_DoSomething\n=== CONT  Test_DoSomething\n--- FAIL: Test_DoSomething (0.00s)\npanic: one [recovered]\n\tpanic: one\n\ngoroutine 5 [running]:\ntesting.tRunner.func1.2({0x1003b4ee0, 0x1003db8c8})\n\t/usr/local/go/src/testing/testing.go:1545 +0x1c4\ntesting.tRunner.func1()\n\t/usr/local/go/src/testing/testing.go:1548 +0x360\npanic({0x1003b4ee0?, 0x1003db8c8?})\n\t/usr/local/go/src/runtime/panic.go:914 +0x218\ndemo.DoSomething(...)\n\t./recover.go:11\ndemo.Test_DoSomething(0x0?)\n\t./recover_test.go:16 +0x34\ntesting.tRunner(0x14000003860, 0x1003db0c0)\n\t/usr/local/go/src/testing/testing.go:1595 +0xe8\ncreated by testing.(*T).Run in goroutine 1\n\t/usr/local/go/src/testing/testing.go:1648 +0x33c\nexit status 2\nFAIL\tdemo\t1.854s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/recover-broken",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfRG9Tb21ldGhpbmcKPT09IFBBVVNFIFRlc3RfRG9Tb21ldGhpbmcKPT09IENPTlQgIFRlc3RfRG9Tb21ldGhpbmcKLS0tIEZBSUw6IFRlc3RfRG9Tb21ldGhpbmcgKDAuMDBzKQpwYW5pYzogb25lIFtyZWNvdmVyZWRdCglwYW5pYzogb25lCgpnb3JvdXRpbmUgNSBbcnVubmluZ106CnRlc3RpbmcudFJ1bm5lci5mdW5jMS4yKHsweDEwMDNiNGVlMCwgMHgxMDAzZGI4Yzh9KQoJL3Vzci9sb2NhbC9nby9zcmMvdGVzdGluZy90ZXN0aW5nLmdvOjE1NDUgKzB4MWM0CnRlc3RpbmcudFJ1bm5lci5mdW5jMSgpCgkvdXNyL2xvY2FsL2dvL3NyYy90ZXN0aW5nL3Rlc3RpbmcuZ286MTU0OCArMHgzNjAKcGFuaWMoezB4MTAwM2I0ZWUwPywgMHgxMDAzZGI4Yzg/fSkKCS91c3IvbG9jYWwvZ28vc3JjL3J1bnRpbWUvcGFuaWMuZ286OTE0ICsweDIxOApkZW1vLkRvU29tZXRoaW5nKC4uLikKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvcGFuaWMvc3JjL3JlY292ZXItYnJva2VuL3JlY292ZXIuZ286MTEKZGVtby5UZXN0X0RvU29tZXRoaW5nKDB4MD8pCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9yZWNvdmVyLWJyb2tlbi9yZWNvdmVyX3Rlc3QuZ286MTYgKzB4MzQKdGVzdGluZy50UnVubmVyKDB4MTQwMDAwMDM4NjAsIDB4MTAwM2RiMGMwKQoJL3Vzci9sb2NhbC9nby9zcmMvdGVzdGluZy90ZXN0aW5nLmdvOjE1OTUgKzB4ZTgKY3JlYXRlZCBieSB0ZXN0aW5nLigqVCkuUnVuIGluIGdvcm91dGluZSAxCgkvdXNyL2xvY2FsL2dvL3NyYy90ZXN0aW5nL3Rlc3RpbmcuZ286MTY0OCArMHgzM2MKZXhpdCBzdGF0dXMgMgpGQUlMCWRlbW8JMS44NTRz",
                                            "duration": 4698238959,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.20:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A test for the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "text": "DoSomething(1)",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function in ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-19"
                                              },
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-19"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.19",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-19"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 20,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "To fix this problem we need to properly recover from the panic being raised in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "DoSomething(int)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function. ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-21"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-21"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.21",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-21"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " outlines the steps required to properly recover from a panic.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-21",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ol",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "panic",
                                              "list-type": "ol",
                                              "nodes": [
                                                {
                                                  "text": "Use a ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "defer",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ],
                                                {
                                                  "text": " with a ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "a",
                                                    "attributes": {
                                                      "for": "builtin#recover",
                                                      "href": "https://pkg.go.dev/builtin#recover",
                                                      "target": "_blank"
                                                    },
                                                    "file": "panic",
                                                    "nodes": [
                                                      [
                                                        {
                                                          "atom": "code",
                                                          "file": "panic",
                                                          "nodes": [
                                                            {
                                                              "text": "recover",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.InlineCode"
                                                        }
                                                      ]
                                                    ],
                                                    "type": "*hype.Link",
                                                    "url": "https://pkg.go.dev/builtin#recover"
                                                  }
                                                ],
                                                {
                                                  "text": " to catch the panic.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "panic",
                                              "list-type": "ol",
                                              "nodes": [
                                                {
                                                  "text": "Use type assertion on the value returned from the panic to see if it was an ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "a",
                                                    "attributes": {
                                                      "for": "builtin#error",
                                                      "href": "https://pkg.go.dev/builtin#error",
                                                      "target": "_blank"
                                                    },
                                                    "file": "panic",
                                                    "nodes": [
                                                      [
                                                        {
                                                          "atom": "code",
                                                          "file": "panic",
                                                          "nodes": [
                                                            {
                                                              "text": "error",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.InlineCode"
                                                        }
                                                      ]
                                                    ],
                                                    "type": "*hype.Link",
                                                    "url": "https://pkg.go.dev/builtin#error"
                                                  }
                                                ],
                                                {
                                                  "text": ".",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "panic",
                                              "list-type": "ol",
                                              "nodes": [
                                                {
                                                  "text": "Use a ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "named",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ],
                                                {
                                                  "text": " return to allow sending back of the error from the deferred recover.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.OL"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.21:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Steps for recovering from a panic.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 21,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-22"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-22"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.22",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-22"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we implement the steps outlined in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-21"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-21"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.21",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-21"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " to properly recover from the panic. As we see in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-22"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-22"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.22",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-22"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we implemented the fix in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "DoSomething(int)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function, and not in the test. This is because it is the responsibility of the function that panics to properly recover from it.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-22",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/recover-named/recover.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func DoSomething(input int) (err error) {\n\t// defer a function to recover from the panic\n\tdefer func() {\n\t\tp := recover()\n\t\tif p == nil {\n\t\t\t// a nil was return, no panic was raised\n\t\t\t// return from the deferred function.\n\t\t\treturn\n\t\t}\n\n\t\t// check if the recovered value is already an error\n\t\tif e, ok := p.(error); ok {\n\t\t\t// assign the recovered error to the perr variable\n\t\t\t// outside of the anonymous function scope\n\t\t\terr = e\n\t\t\treturn\n\t\t}\n\n\t\t// a non-error value was recovered\n\t\t// create a new error, `ErrNonErrCaught`, with\n\t\t// information about the recovered value\n\t\tmsg := fmt.Sprintf(\"non-error panic type %T %s\", p, p)\n\t\terr = ErrNonErrCaught(msg)\n\t}()\n\n\tswitch input {\n\tcase 0:\n\t\t// input was 0, return no error (nil)\n\t\treturn nil\n\tcase 1:\n\t\t// input was 1, panic with the string \"one\"\n\t\tpanic(\"one\")\n\t}\n\n\t// no case was matched\n\treturn nil\n}\n\ntype ErrNonErrCaught string\n\nfunc (e ErrNonErrCaught) Error() string {\n\treturn string(e)\n}",
                                                "file": "panic/src/recover-named/recover.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 7,
                                                "end": 52,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.22:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Properly returning from a panic.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 22,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "First, we have changed our function signature to use a named return for the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "(err error)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". This will allow us to set the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " value inside the deferred function. Once inside the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "DoSomething(int)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function, we use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "defer",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keyword and an anonymous function to catch the panic. Inside of the anonymous function, we use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " function to recover from the panic, and assign the value returned to the variable ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "p",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "As we see in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-14"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-14"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.14",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-14"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " function returns ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "any",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". This means that the value can be of any type, a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "int",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": ", or ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". As result, we must use type assertions to check the type of the value returned from the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " function. If the value is an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": ", we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "text": "named",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " return to send the value back to the caller. If not, we create a new ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " with the value returned from the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#recover",
                                          "href": "https://pkg.go.dev/builtin#recover",
                                          "target": "_blank"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "panic.md",
                                            "nodes": [
                                              {
                                                "text": "recover",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#recover"
                                      }
                                    ],
                                    {
                                      "text": " function.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "As we see in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-23"
                                        },
                                        "file": "panic.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-23"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.23",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-23"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", when run the tests now are no longer panicking, and the test passes.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-23",
                                    "type": "listing"
                                  },
                                  "file": "panic.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "panic",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "panic/src/recover-named/recover_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_DoSomething(t *testing.T) {\n\tt.Parallel()\n\n\terr := DoSomething(0)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\terr = DoSomething(1)\n\n\tif err != ErrNonErrCaught(\"non-error panic type string one\") {\n\t\tt.Fatal(\"expected ErrNonErrCaught, got\", err)\n\t}\n}",
                                                "file": "panic/src/recover-named/recover_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 7,
                                                "end": 23,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "panic",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "panic/src/recover-named",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_DoSomething\n=== PAUSE Test_DoSomething\n=== CONT  Test_DoSomething\n--- PASS: Test_DoSomething (0.00s)\nPASS\nok  \tdemo\t2.224s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/recover-named",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfRG9Tb21ldGhpbmcKPT09IFBBVVNFIFRlc3RfRG9Tb21ldGhpbmcKPT09IENPTlQgIFRlc3RfRG9Tb21ldGhpbmcKLS0tIFBBU1M6IFRlc3RfRG9Tb21ldGhpbmcgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkyLjIyNHM=",
                                              "duration": 5095207459,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_DoSomething\n=== PAUSE Test_DoSomething\n=== CONT  Test_DoSomething\n--- PASS: Test_DoSomething (0.00s)\nPASS\nok  \tdemo\t2.224s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/recover-named",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfRG9Tb21ldGhpbmcKPT09IFBBVVNFIFRlc3RfRG9Tb21ldGhpbmcKPT09IENPTlQgIFRlc3RfRG9Tb21ldGhpbmcKLS0tIFBBU1M6IFRlc3RfRG9Tb21ldGhpbmcgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkyLjIyNHM=",
                                            "duration": 5095207459,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "panic",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.23:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Tests now pass after proper panic recovery.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 23,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Panic",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "include",
                            "attributes": {
                              "src": "panic/_dont.md"
                            },
                            "dir": ".",
                            "file": "panic.md",
                            "nodes": [
                              [
                                {
                                  "atom": "page",
                                  "file": "panic/_dont.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "h1",
                                        "file": "panic/_dont.md",
                                        "level": 1,
                                        "nodes": [
                                          {
                                            "text": "Don't Panic",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "hype.Heading"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "blockquote",
                                      "file": "panic/_dont.md",
                                      "nodes": [
                                        {
                                          "text": "\n",
                                          "type": "hype.Text"
                                        },
                                        {
                                          "atom": "strong",
                                          "file": "panic/_dont.md",
                                          "nodes": [
                                            {
                                              "text": "NEVER RAISE A PANIC IN YOUR CODE",
                                              "type": "hype.Text"
                                            }
                                          ],
                                          "type": "*hype.Element"
                                        },
                                        {
                                          "text": "\n",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "Ok, maybe ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "strong",
                                            "file": "panic/_dont.md",
                                            "nodes": [
                                              {
                                                "text": "never",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " is too strong of a stance. However, in general, it's considered non-idiomatic to panic instead of returning an error outside of specific conditions.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "When a panic occurs, unless there is a recover in place, the program will shut down (usually not gracefully). It is usually a much better practice to return an error, and let the code upstream handle the error.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "The general rule is that if you are writing a package, you should not panic. The reason for this is that the caller should always have control of the program, and a package should not dictate control flow of a program.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "On the other hand, if you are the caller (maybe you are in control of the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "main",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function in the program), then you already have total control of the program flow, and if needed, a panic may be appropriate. Many times this is manifested in the form of a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "log#Fatal",
                                                "href": "https://pkg.go.dev/log#Fatal",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "log.Fatal",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/log#Fatal"
                                            }
                                          ],
                                          {
                                            "text": ", ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-24"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-24"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.24",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-24"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", which will exit the program with a non-zero exit code.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-24",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "doc",
                                                "log.Fatal"
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "doc": "log.Fatal",
                                                "exec": "go doc log.Fatal"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go doc log.Fatal\n\npackage log // import \u0026#34;log\u0026#34;\n\nfunc Fatal(v ...any)\n    Fatal is equivalent to Print() followed by a call to os.Exit(1).",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "doc",
                                                      "log.Fatal"
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                                    "stdout": "cGFja2FnZSBsb2cgLy8gaW1wb3J0ICJsb2ciCgpmdW5jIEZhdGFsKHYgLi4uYW55KQogICAgRmF0YWwgaXMgZXF1aXZhbGVudCB0byBQcmludCgpIGZvbGxvd2VkIGJ5IGEgY2FsbCB0byBvcy5FeGl0KDEpLg==",
                                                    "duration": 2630507334,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go doc log.Fatal\n\npackage log // import \u0026#34;log\u0026#34;\n\nfunc Fatal(v ...any)\n    Fatal is equivalent to Print() followed by a call to os.Exit(1).",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "doc",
                                                    "log.Fatal"
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                                  "stdout": "cGFja2FnZSBsb2cgLy8gaW1wb3J0ICJsb2ciCgpmdW5jIEZhdGFsKHYgLi4uYW55KQogICAgRmF0YWwgaXMgZXF1aXZhbGVudCB0byBQcmludCgpIGZvbGxvd2VkIGJ5IGEgY2FsbCB0byBvcy5FeGl0KDEpLg==",
                                                  "duration": 2630507334,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.24:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "The ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "a",
                                                    "attributes": {
                                                      "for": "log#Fatal",
                                                      "href": "https://pkg.go.dev/log#Fatal",
                                                      "target": "_blank"
                                                    },
                                                    "file": "panic",
                                                    "nodes": [
                                                      [
                                                        {
                                                          "atom": "code",
                                                          "file": "panic",
                                                          "nodes": [
                                                            {
                                                              "text": "log.Fatal",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.InlineCode"
                                                        }
                                                      ]
                                                    ],
                                                    "type": "*hype.Link",
                                                    "url": "https://pkg.go.dev/log#Fatal"
                                                  }
                                                ],
                                                {
                                                  "text": " function.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 24,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "Lastly, any code that panics may be more difficult to test. For all of these reasons, it is best to consider alternatives to a panicking. After all, most panics can be prevented by sensible code and well designed tests.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "h2",
                                        "file": "panic/_dont.md",
                                        "level": 2,
                                        "nodes": [
                                          {
                                            "text": "Checking for Nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "hype.Heading"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "The most common source of panics in Go are calls being made on ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " values. Any type in go that has a zero value of ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " can be a source of these panics. Types such as interfaces, maps, pointers, channels, and functions all fall into this category. Checking whether these types are ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " before using them can easily avoid these panics.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "A common example of this is when a type has an embedded type that is a pointer. In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-25"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-25"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.25",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-25"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "User",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " is embedded in ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "Admin",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " as a pointer. Because it's embedded, the methods are promoted. This means that the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "Admin",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " type now has a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "String",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method. However, on the last line of code where ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "a.String()",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " is being called, the receiver to the method is actually the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "User",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ". Because ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "User",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " is ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ", it was never set, the code will panic when it tries to access the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "String",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-25",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/nil/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport \u0026#34;fmt\u0026#34;\n\ntype User struct {\n\tname string\n}\n\nfunc (u User) String() string {\n\treturn u.name\n}\n\ntype Admin struct {\n\t*User\n\tPerms map[string]bool\n}\n\nfunc main() {\n\ta := \u0026amp;Admin{}\n\tfmt.Println(a.String())\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/nil"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x0 pc=0x10277abbc]\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:20 +0x1c\nexit status 2",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/nil",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgwIHBjPTB4MTAyNzdhYmJjXQoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvbmlsL21haW4uZ286MjAgKzB4MWMKZXhpdCBzdGF0dXMgMg==",
                                                    "duration": 3342830750,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x0 pc=0x10277abbc]\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:20 +0x1c\nexit status 2",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/nil",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgwIHBjPTB4MTAyNzdhYmJjXQoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvbmlsL21haW4uZ286MjAgKzB4MWMKZXhpdCBzdGF0dXMgMg==",
                                                  "duration": 3342830750,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.25:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "A panic when calling a method on a ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "nil",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ],
                                                {
                                                  "text": " value.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 25,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-26"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-26"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.26",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-26"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "Admin",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " type is properly initialized with a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "User",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ". Now, when the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "String",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method is called, the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "User",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " is not ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ", and the method properly executes.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-26",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/non-nil/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport \u0026#34;fmt\u0026#34;\n\ntype User struct {\n\tname string\n}\n\nfunc (u User) String() string {\n\treturn u.name\n}\n\ntype Admin struct {\n\t*User\n\tPerms map[string]bool\n}\n\nfunc main() {\n\ta := \u0026amp;Admin{\n\t\tUser: \u0026amp;User{name: \u0026#34;Kurt\u0026#34;},\n\t}\n\tfmt.Println(a.String())\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "run": ".",
                                                "src": "panic/src/non-nil"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nKurt",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/non-nil",
                                                    "stdout": "S3VydA==",
                                                    "duration": 3929781834,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nKurt",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/non-nil",
                                                  "stdout": "S3VydA==",
                                                  "duration": 3929781834,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.26:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Proper initialization to prevent panicking.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 26,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "h2",
                                        "file": "panic/_dont.md",
                                        "level": 2,
                                        "nodes": [
                                          {
                                            "text": "Maps",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "hype.Heading"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "When creating maps, it is required to ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "initialize",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " the memory space behind them. Consider ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-27"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-27"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.27",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-27"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": " as an example. We have created a map variable, but we have not initialized it. This causes a panic when we try to access the map.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-27",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/maps/broken/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport \u0026#34;fmt\u0026#34;\n\nfunc main() {\n\n\t// create a new map variable\n\tvar m map[string]int\n\n\t// insert a key-value pair\n\tm[\u0026#34;Amy\u0026#34;] = 27\n\n\t// print the map\n\tfmt.Printf(\u0026#34;%+v\\n\u0026#34;, m)\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/maps/broken"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\npanic: assignment to entry in nil map\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:11 +0x34\nexit status 2",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/maps/broken",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "cGFuaWM6IGFzc2lnbm1lbnQgdG8gZW50cnkgaW4gbmlsIG1hcAoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvbWFwcy9icm9rZW4vbWFpbi5nbzoxMSArMHgzNApleGl0IHN0YXR1cyAy",
                                                    "duration": 4325997292,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\npanic: assignment to entry in nil map\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:11 +0x34\nexit status 2",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/maps/broken",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "cGFuaWM6IGFzc2lnbm1lbnQgdG8gZW50cnkgaW4gbmlsIG1hcAoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvbWFwcy9icm9rZW4vbWFpbi5nbzoxMSArMHgzNApleGl0IHN0YXR1cyAy",
                                                  "duration": 4325997292,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.27:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "A panic when creating a map with a nil value.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 27,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "The easiest solution is to use the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": ":=",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " operator to initialize the map when the variable is declared. In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-28"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-28"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.28",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-28"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", we have initialized the map and the code runs successfully.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-28",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/maps/init/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport \u0026#34;fmt\u0026#34;\n\nfunc main() {\n\n\t// initialize a new map\n\tm := map[string]int{}\n\n\t// insert a key-value pair\n\tm[\u0026#34;Amy\u0026#34;] = 27\n\n\t// print the map\n\tfmt.Printf(\u0026#34;%+v\\n\u0026#34;, m)\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "run": ".",
                                                "src": "panic/src/maps/init"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nmap[Amy:27]",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/maps/init",
                                                    "stdout": "bWFwW0FteToyN10=",
                                                    "duration": 4531300125,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nmap[Amy:27]",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/maps/init",
                                                  "stdout": "bWFwW0FteToyN10=",
                                                  "duration": 4531300125,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.28:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Avoiding panics when creating maps.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 28,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "However, if a map is declared with long variable declaration, and not initialized, later in the code the map will need to be initialized or it will panic when used.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-29",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/maps/check/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport \u0026#34;fmt\u0026#34;\n\nfunc main() {\n\n\t// create a new map variable\n\tvar m map[string]int\n\n\tif m == nil {\n\t\t// initialize the map\n\t\tm = map[string]int{}\n\t}\n\n\t// insert a key-value pair\n\tm[\u0026#34;Amy\u0026#34;] = 27\n\n\t// print the map\n\tfmt.Printf(\u0026#34;%+v\\n\u0026#34;, m)\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "run": ".",
                                                "src": "panic/src/maps/check"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nmap[Amy:27]",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/maps/check",
                                                    "stdout": "bWFwW0FteToyN10=",
                                                    "duration": 4467087792,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nmap[Amy:27]",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/maps/check",
                                                  "stdout": "bWFwW0FteToyN10=",
                                                  "duration": 4467087792,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.29:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Checking a map for ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "nil",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ],
                                                {
                                                  "text": " before accessing.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 29,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "Finally, as in ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-30"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-30"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.30",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-30"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", we can use the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#make",
                                                "href": "https://pkg.go.dev/builtin#make",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "make",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#make"
                                            }
                                          ],
                                          {
                                            "text": " function to initialize the map. While this works, it is consider non-idiomatic to use ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#make",
                                                "href": "https://pkg.go.dev/builtin#make",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "make",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#make"
                                            }
                                          ],
                                          {
                                            "text": " to initialize a map.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-30",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/maps/make/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport \u0026#34;fmt\u0026#34;\n\nfunc main() {\n\n\t// initialize a new map\n\tm := make(map[string]int)\n\n\t// insert a key-value pair\n\tm[\u0026#34;Amy\u0026#34;] = 27\n\n\t// print the map\n\tfmt.Printf(\u0026#34;%+v\\n\u0026#34;, m)\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "run": ".",
                                                "src": "panic/src/maps/make"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nmap[Amy:27]",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/maps/make",
                                                    "stdout": "bWFwW0FteToyN10=",
                                                    "duration": 3659204125,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nmap[Amy:27]",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/maps/make",
                                                  "stdout": "bWFwW0FteToyN10=",
                                                  "duration": 3659204125,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.30:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Using ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "a",
                                                    "attributes": {
                                                      "for": "builtin#make",
                                                      "href": "https://pkg.go.dev/builtin#make",
                                                      "target": "_blank"
                                                    },
                                                    "file": "panic",
                                                    "nodes": [
                                                      [
                                                        {
                                                          "atom": "code",
                                                          "file": "panic",
                                                          "nodes": [
                                                            {
                                                              "text": "make",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.InlineCode"
                                                        }
                                                      ]
                                                    ],
                                                    "type": "*hype.Link",
                                                    "url": "https://pkg.go.dev/builtin#make"
                                                  }
                                                ],
                                                {
                                                  "text": " to initialize a map.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 30,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "h2",
                                        "file": "panic/_dont.md",
                                        "level": 2,
                                        "nodes": [
                                          {
                                            "text": "Pointers",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "hype.Heading"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "Before a pointer can be used, it has to be initialized. The following code checks to see if a pointer is ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ", not initialized, and then properly initializes it.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-31",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/pointers/broken/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport (\n\t\u0026#34;bytes\u0026#34;\n\t\u0026#34;fmt\u0026#34;\n)\n\nfunc main() {\n\n\t// create a new pointer\n\t// to a bytes.Buffer\n\tvar bb *bytes.Buffer\n\n\t// use the pointer to\n\t// write data to the buffer\n\tbb.WriteString(\u0026#34;Hello, world!\u0026#34;)\n\n\t// print the buffer\n\tfmt.Println(bb.String())\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/pointers/broken"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x20 pc=0x102e0ffbc]\n\ngoroutine 1 [running]:\nbytes.(*Buffer).WriteString(0x1400006a728?, {0x102e34439?, 0x60?})\n\t/usr/local/go/src/bytes/buffer.go:188 +0x1c\nmain.main()\n\t./main.go:16 +0x2c\nexit status 2",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/pointers/broken",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgyMCBwYz0weDEwMmUwZmZiY10KCmdvcm91dGluZSAxIFtydW5uaW5nXToKYnl0ZXMuKCpCdWZmZXIpLldyaXRlU3RyaW5nKDB4MTQwMDAwNmE3Mjg/LCB7MHgxMDJlMzQ0Mzk/LCAweDYwP30pCgkvdXNyL2xvY2FsL2dvL3NyYy9ieXRlcy9idWZmZXIuZ286MTg4ICsweDFjCm1haW4ubWFpbigpCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9wb2ludGVycy9icm9rZW4vbWFpbi5nbzoxNiArMHgyYwpleGl0IHN0YXR1cyAy",
                                                    "duration": 3276466167,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x20 pc=0x102e0ffbc]\n\ngoroutine 1 [running]:\nbytes.(*Buffer).WriteString(0x1400006a728?, {0x102e34439?, 0x60?})\n\t/usr/local/go/src/bytes/buffer.go:188 +0x1c\nmain.main()\n\t./main.go:16 +0x2c\nexit status 2",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/pointers/broken",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgyMCBwYz0weDEwMmUwZmZiY10KCmdvcm91dGluZSAxIFtydW5uaW5nXToKYnl0ZXMuKCpCdWZmZXIpLldyaXRlU3RyaW5nKDB4MTQwMDAwNmE3Mjg/LCB7MHgxMDJlMzQ0Mzk/LCAweDYwP30pCgkvdXNyL2xvY2FsL2dvL3NyYy9ieXRlcy9idWZmZXIuZ286MTg4ICsweDFjCm1haW4ubWFpbigpCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9wb2ludGVycy9icm9rZW4vbWFpbi5nbzoxNiArMHgyYwpleGl0IHN0YXR1cyAy",
                                                  "duration": 3276466167,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.31:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "A panic caused by a ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "nil",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ],
                                                {
                                                  "text": " pointer.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 31,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-32",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/pointers/fixed/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport (\n\t\u0026#34;bytes\u0026#34;\n\t\u0026#34;fmt\u0026#34;\n)\n\nfunc main() {\n\n\t// create and initialize\n\t// a new pointer\n\t// to a bytes.Buffer\n\tbb := \u0026amp;bytes.Buffer{}\n\n\t// use the pointer to\n\t// write data to the buffer\n\tbb.WriteString(\u0026#34;Hello, world!\u0026#34;)\n\n\t// print the buffer\n\tfmt.Println(bb.String())\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "run": ".",
                                                "src": "panic/src/pointers/fixed"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nHello, world!",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/pointers/fixed",
                                                    "stdout": "SGVsbG8sIHdvcmxkIQ==",
                                                    "duration": 2789895125,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nHello, world!",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/pointers/fixed",
                                                  "stdout": "SGVsbG8sIHdvcmxkIQ==",
                                                  "duration": 2789895125,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.32:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Properly initializing a pointer before use.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 32,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "h2",
                                        "file": "panic/_dont.md",
                                        "level": 2,
                                        "nodes": [
                                          {
                                            "text": "Interfaces",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "hype.Heading"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-33"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-33"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.33",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-33"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", we have create a new variable, ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "w",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ", of type ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer",
                                                "href": "https://pkg.go.dev/io#Writer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer"
                                            }
                                          ],
                                          {
                                            "text": ". This variable has not be initialized with an implementation of the interface. This causes a panic when we try to use the variable.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-33",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/interface/broken/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport (\n\t\u0026#34;fmt\u0026#34;\n\t\u0026#34;io\u0026#34;\n)\n\nfunc main() {\n\n\t// create a new writer variable\n\tvar w io.Writer\n\n\t// print to the writer\n\tfmt.Fprintln(w, \u0026#34;Hello, world!\u0026#34;)\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/interface/broken"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x1000a8e38]\n\ngoroutine 1 [running]:\nfmt.Fprintln({0x0, 0x0}, {0x140000a4f18, 0x1, 0x1})\n\t/usr/local/go/src/fmt/print.go:305 +0x48\nmain.main()\n\t./main.go:14 +0x4c\nexit status 2",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/interface/broken",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgxOCBwYz0weDEwMDBhOGUzOF0KCmdvcm91dGluZSAxIFtydW5uaW5nXToKZm10LkZwcmludGxuKHsweDAsIDB4MH0sIHsweDE0MDAwMGE0ZjE4LCAweDEsIDB4MX0pCgkvdXNyL2xvY2FsL2dvL3NyYy9mbXQvcHJpbnQuZ286MzA1ICsweDQ4Cm1haW4ubWFpbigpCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9pbnRlcmZhY2UvYnJva2VuL21haW4uZ286MTQgKzB4NGMKZXhpdCBzdGF0dXMgMg==",
                                                    "duration": 3472134250,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x1000a8e38]\n\ngoroutine 1 [running]:\nfmt.Fprintln({0x0, 0x0}, {0x140000a4f18, 0x1, 0x1})\n\t/usr/local/go/src/fmt/print.go:305 +0x48\nmain.main()\n\t./main.go:14 +0x4c\nexit status 2",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/interface/broken",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgxOCBwYz0weDEwMDBhOGUzOF0KCmdvcm91dGluZSAxIFtydW5uaW5nXToKZm10LkZwcmludGxuKHsweDAsIDB4MH0sIHsweDE0MDAwMGE0ZjE4LCAweDEsIDB4MX0pCgkvdXNyL2xvY2FsL2dvL3NyYy9mbXQvcHJpbnQuZ286MzA1ICsweDQ4Cm1haW4ubWFpbigpCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL3BhbmljL3NyYy9pbnRlcmZhY2UvYnJva2VuL21haW4uZ286MTQgKzB4NGMKZXhpdCBzdGF0dXMgMg==",
                                                  "duration": 3472134250,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.33:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "A panic caused by a ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "nil",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ],
                                                {
                                                  "text": " interface.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 33,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-34"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-34"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.34",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-34"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", we have initialized the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "w",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " variable with an implementation of the interface, in this case ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Stdout",
                                                "href": "https://pkg.go.dev/io#Stdout",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Stdout",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Stdout"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-34",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/interface/fixed/main.go"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "text": "package main\n\nimport (\n\t\u0026#34;fmt\u0026#34;\n\t\u0026#34;os\u0026#34;\n)\n\nfunc main() {\n\n\t// create a new writer variable\n\t// with STDOUT as the\n\t// writer implementation\n\tw := os.Stdout\n\n\t// print to the writer\n\tfmt.Fprintln(w, \u0026#34;Hello, world!\u0026#34;)\n}\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "run": ".",
                                                "src": "panic/src/interface/fixed"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nHello, world!",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/interface/fixed",
                                                    "stdout": "SGVsbG8sIHdvcmxkIQ==",
                                                    "duration": 3993461042,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nHello, world!",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/interface/fixed",
                                                  "stdout": "SGVsbG8sIHdvcmxkIQ==",
                                                  "duration": 3993461042,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.34:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Initializing an interface before use.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 34,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "More commonly, a panic will occur when an interface is embedded into a type, and that interface was not backed by an instance.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-35"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-35"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.35",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-35"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": " we are defining a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "Stream",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " struct that embeds the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer",
                                                "href": "https://pkg.go.dev/io#Writer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer"
                                            }
                                          ],
                                          {
                                            "text": " interface. By embedding the interface, the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "Stream",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " type is now also an implementation ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer",
                                                "href": "https://pkg.go.dev/io#Writer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer"
                                            }
                                          ],
                                          {
                                            "text": " as the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer.Write",
                                                "href": "https://pkg.go.dev/io#Writer.Write",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer.Write",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer.Write"
                                            }
                                          ],
                                          {
                                            "text": " method is promoted to the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "Stream",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-35",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/interface/empty/main.go#type"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "type Stream struct {\n\tio.Writer\n}",
                                                      "file": "panic/src/interface/empty/main.go",
                                                      "lang": "go",
                                                      "name": "type",
                                                      "start": 8,
                                                      "end": 13,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.35:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "A custom type that embeds an interface.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 35,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "However, if an instance of a writer is never assigned to the embedded ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer",
                                                "href": "https://pkg.go.dev/io#Writer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer"
                                            }
                                          ],
                                          {
                                            "text": ", as in ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-36"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-36"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.36",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-36"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", the code will panic when it tries to call the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer.Write",
                                                "href": "https://pkg.go.dev/io#Writer.Write",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer.Write",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer.Write"
                                            }
                                          ],
                                          {
                                            "text": " method, as the receiver is ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ".",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-36",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/interface/empty/main.go#example"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func main() {\n\n\t// initialize a stream\n\t// without a writer\n\ts := Stream{}\n\n\tfmt.Fprintf(s, \"Hello Gophers!\")\n}",
                                                      "file": "panic/src/interface/empty/main.go",
                                                      "lang": "go",
                                                      "name": "example",
                                                      "start": 15,
                                                      "end": 25,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/interface/empty"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x102d0f33c]\n\ngoroutine 1 [running]:\nmain.(*Stream).Write(0x14000128410?, {0x1400011a020?, 0xe?, 0x0?})\n\t\u0026lt;autogenerated\u0026gt;:1 +0x2c\nfmt.Fprintf({0x102d4ea08, 0x1400010a020}, {0x102d108f9, 0xe}, {0x0, 0x0, 0x0})\n\t/usr/local/go/src/fmt/print.go:225 +0x84\nmain.main()\n\t./main.go:22 +0x54\nexit status 2",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/interface/empty",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgxOCBwYz0weDEwMmQwZjMzY10KCmdvcm91dGluZSAxIFtydW5uaW5nXToKbWFpbi4oKlN0cmVhbSkuV3JpdGUoMHgxNDAwMDEyODQxMD8sIHsweDE0MDAwMTFhMDIwPywgMHhlPywgMHgwP30pCgk8YXV0b2dlbmVyYXRlZD46MSArMHgyYwpmbXQuRnByaW50Zih7MHgxMDJkNGVhMDgsIDB4MTQwMDAxMGEwMjB9LCB7MHgxMDJkMTA4ZjksIDB4ZX0sIHsweDAsIDB4MCwgMHgwfSkKCS91c3IvbG9jYWwvZ28vc3JjL2ZtdC9wcmludC5nbzoyMjUgKzB4ODQKbWFpbi5tYWluKCkKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvcGFuaWMvc3JjL2ludGVyZmFjZS9lbXB0eS9tYWluLmdvOjIyICsweDU0CmV4aXQgc3RhdHVzIDI=",
                                                    "duration": 4127398459,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x102d0f33c]\n\ngoroutine 1 [running]:\nmain.(*Stream).Write(0x14000128410?, {0x1400011a020?, 0xe?, 0x0?})\n\t\u0026lt;autogenerated\u0026gt;:1 +0x2c\nfmt.Fprintf({0x102d4ea08, 0x1400010a020}, {0x102d108f9, 0xe}, {0x0, 0x0, 0x0})\n\t/usr/local/go/src/fmt/print.go:225 +0x84\nmain.main()\n\t./main.go:22 +0x54\nexit status 2",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/interface/empty",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgxOCBwYz0weDEwMmQwZjMzY10KCmdvcm91dGluZSAxIFtydW5uaW5nXToKbWFpbi4oKlN0cmVhbSkuV3JpdGUoMHgxNDAwMDEyODQxMD8sIHsweDE0MDAwMTFhMDIwPywgMHhlPywgMHgwP30pCgk8YXV0b2dlbmVyYXRlZD46MSArMHgyYwpmbXQuRnByaW50Zih7MHgxMDJkNGVhMDgsIDB4MTQwMDAxMGEwMjB9LCB7MHgxMDJkMTA4ZjksIDB4ZX0sIHsweDAsIDB4MCwgMHgwfSkKCS91c3IvbG9jYWwvZ28vc3JjL2ZtdC9wcmludC5nbzoyMjUgKzB4ODQKbWFpbi5tYWluKCkKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvcGFuaWMvc3JjL2ludGVyZmFjZS9lbXB0eS9tYWluLmdvOjIyICsweDU0CmV4aXQgc3RhdHVzIDI=",
                                                  "duration": 4127398459,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.36:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "A panic caused by a ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "nil",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ],
                                                {
                                                  "text": " interface.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 36,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-37"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-37"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.37",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-37"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", we fix the code by properly assigning an implementation of an ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer",
                                                "href": "https://pkg.go.dev/io#Writer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer"
                                            }
                                          ],
                                          {
                                            "text": " interface, in this case ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#Stdout",
                                                "href": "https://pkg.go.dev/os#Stdout",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "os.Stdout",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#Stdout"
                                            }
                                          ],
                                          {
                                            "text": " to the embedded ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer",
                                                "href": "https://pkg.go.dev/io#Writer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer"
                                            }
                                          ],
                                          {
                                            "text": " in the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "Stream",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-37",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/interface/backed/main.go#example"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func main() {\n\n\t// initialize a stream\n\t// with STDOUT as the writer\n\ts := Stream{\n\t\tWriter: os.Stdout,\n\t}\n\n\tfmt.Fprintf(s, \"Hello Gophers!\")\n}",
                                                      "file": "panic/src/interface/backed/main.go",
                                                      "lang": "go",
                                                      "name": "example",
                                                      "start": 13,
                                                      "end": 25,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "run": ".",
                                                "src": "panic/src/interface/backed"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nHello Gophers!",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/interface/backed",
                                                    "stdout": "SGVsbG8gR29waGVycyE=",
                                                    "duration": 3591777917,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nHello Gophers!",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/interface/backed",
                                                  "stdout": "SGVsbG8gR29waGVycyE=",
                                                  "duration": 3591777917,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.37:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Properly assigning an implementation of an embedded ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "a",
                                                    "attributes": {
                                                      "for": "io#Writer",
                                                      "href": "https://pkg.go.dev/io#Writer",
                                                      "target": "_blank"
                                                    },
                                                    "file": "panic",
                                                    "nodes": [
                                                      [
                                                        {
                                                          "atom": "code",
                                                          "file": "panic",
                                                          "nodes": [
                                                            {
                                                              "text": "io.Writer",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.InlineCode"
                                                        }
                                                      ]
                                                    ],
                                                    "type": "*hype.Link",
                                                    "url": "https://pkg.go.dev/io#Writer"
                                                  }
                                                ],
                                                {
                                                  "text": ".",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 37,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "h2",
                                        "file": "panic/_dont.md",
                                        "level": 2,
                                        "nodes": [
                                          {
                                            "text": "Functions",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "hype.Heading"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "A function's zero value is ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "nil",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ". As such, a function needs to be assigned before using it. In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-38"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-38"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.38",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-38"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", we have created a function variable, ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "fn",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ", that is not backed by an actual function. This causes a panic when we try to call the function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-38",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/func/broken/main.go#example"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func main() {\n\n\t// create a new function\n\t// type variable\n\tvar fn func() string\n\n\t// print the results\n\t// of the function\n\tfmt.Println(fn())\n}",
                                                      "file": "panic/src/func/broken/main.go",
                                                      "lang": "go",
                                                      "name": "example",
                                                      "start": 7,
                                                      "end": 19,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/func/broken"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x0 pc=0x1007e6bbc]\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:16 +0x1c\nexit status 2",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/func/broken",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgwIHBjPTB4MTAwN2U2YmJjXQoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvZnVuYy9icm9rZW4vbWFpbi5nbzoxNiArMHgxYwpleGl0IHN0YXR1cyAy",
                                                    "duration": 2737692417,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x2 addr=0x0 pc=0x1007e6bbc]\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:16 +0x1c\nexit status 2",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/func/broken",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGludmFsaWQgbWVtb3J5IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2UKW3NpZ25hbCBTSUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uIGNvZGU9MHgyIGFkZHI9MHgwIHBjPTB4MTAwN2U2YmJjXQoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvZnVuYy9icm9rZW4vbWFpbi5nbzoxNiArMHgxYwpleGl0IHN0YXR1cyAy",
                                                  "duration": 2737692417,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.38:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Using an uninitialized function variable.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 38,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-39"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-39"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.39",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-39"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", we have assigned a function to the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "fn",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " variable and the application runs successfully.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-39",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/func/fixed/main.go#example"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func main() {\n\n\t// create a new function\n\t// type variable\n\tvar fn func() string\n\n\t// back the fn variable\n\t// with a function\n\tfn = func() string {\n\t\treturn \"Hello, World!\"\n\t}\n\n\t// print the results\n\t// of the function\n\tfmt.Println(fn())\n}",
                                                      "file": "panic/src/func/fixed/main.go",
                                                      "lang": "go",
                                                      "name": "example",
                                                      "start": 7,
                                                      "end": 25,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "run": ".",
                                                "src": "panic/src/func/fixed"
                                              },
                                              "expected_exit": 0,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nHello, World!",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/func/fixed",
                                                    "stdout": "SGVsbG8sIFdvcmxkIQ==",
                                                    "duration": 4059711417,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nHello, World!",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/func/fixed",
                                                  "stdout": "SGVsbG8sIFdvcmxkIQ==",
                                                  "duration": 4059711417,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.39:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Assigning a function definition to the ",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "panic",
                                                    "nodes": [
                                                      {
                                                        "text": "fn",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ],
                                                {
                                                  "text": " variable.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 39,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "h2",
                                        "file": "panic/_dont.md",
                                        "level": 2,
                                        "nodes": [
                                          {
                                            "text": "Type Assertions",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "hype.Heading"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "When type asserting in Go, if the interface being asserted against fails, Go will panic as a result.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-40",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/assert/broken/main.go#write"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func WriteToFile(w io.Writer, data []byte) error {\n\n\t// assert that w is a file\n\tf := w.(*os.File)\n\n\t// defer closing the file\n\tdefer f.Close()\n\n\t// log the file name\n\tfmt.Printf(\"writing to file %s\\n\", f.Name())\n\n\t// write the data\n\t_, err := f.Write(data)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}",
                                                      "file": "panic/src/assert/broken/main.go",
                                                      "lang": "go",
                                                      "name": "write",
                                                      "start": 34,
                                                      "end": 55,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.40:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Panic caused by a failed type assertion.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 40,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "Consider the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "WriteToFile(io.Writer, []byte)",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function defined in ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-40"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-40"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.40",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-40"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ". This function takes an ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer",
                                                "href": "https://pkg.go.dev/io#Writer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer"
                                            }
                                          ],
                                          {
                                            "text": " as an argument, along with a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "[]byte",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " slice of data to write. Inside of the function, the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "io#Writer",
                                                "href": "https://pkg.go.dev/io#Writer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "io.Writer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/io#Writer"
                                            }
                                          ],
                                          {
                                            "text": " argument, ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "w",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": ", is being type asserted to the concrete type ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#File",
                                                "href": "https://pkg.go.dev/os#File",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "os.File",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#File"
                                            }
                                          ],
                                          {
                                            "text": ". In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-41"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-41"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.41",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-41"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", we are calling this function with a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "bytes#Buffer",
                                                "href": "https://pkg.go.dev/bytes#Buffer",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "bytes.Buffer",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/bytes#Buffer"
                                            }
                                          ],
                                          {
                                            "text": " as the first argument, which is not an instance of ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "os#File",
                                                "href": "https://pkg.go.dev/os#File",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "os.File",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/os#File"
                                            }
                                          ],
                                          {
                                            "text": ". This causes a panic.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-41",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/assert/broken/main.go#example"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func main() {\n\n\t// create a buffer\n\t// to write to\n\tbb := \u0026bytes.Buffer{}\n\n\t// data to be written\n\tdata := []byte(\"Hello, world!\")\n\n\t// call WriteToFile\n\t// passing the buffer\n\t// and the data\n\terr := WriteToFile(bb, data)\n\n\t// check for errors\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n}",
                                                      "file": "panic/src/assert/broken/main.go",
                                                      "lang": "go",
                                                      "name": "example",
                                                      "start": 10,
                                                      "end": 32,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/assert/broken"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\npanic: interface conversion: io.Writer is *bytes.Buffer, not *os.File\n\ngoroutine 1 [running]:\nmain.WriteToFile({0x104a7f008?, 0x140000acf00?}, {0x140000acee3?, 0x1049ea548?, 0x140000a6000?})\n\t./main.go:38 +0x150\nmain.main()\n\t./main.go:23 +0x68\nexit status 2",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/assert/broken",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "cGFuaWM6IGludGVyZmFjZSBjb252ZXJzaW9uOiBpby5Xcml0ZXIgaXMgKmJ5dGVzLkJ1ZmZlciwgbm90ICpvcy5GaWxlCgpnb3JvdXRpbmUgMSBbcnVubmluZ106Cm1haW4uV3JpdGVUb0ZpbGUoezB4MTA0YTdmMDA4PywgMHgxNDAwMDBhY2YwMD99LCB7MHgxNDAwMDBhY2VlMz8sIDB4MTA0OWVhNTQ4PywgMHgxNDAwMDBhNjAwMD99KQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvYXNzZXJ0L2Jyb2tlbi9tYWluLmdvOjM4ICsweDE1MAptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvYXNzZXJ0L2Jyb2tlbi9tYWluLmdvOjIzICsweDY4CmV4aXQgc3RhdHVzIDI=",
                                                    "duration": 2931108667,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\npanic: interface conversion: io.Writer is *bytes.Buffer, not *os.File\n\ngoroutine 1 [running]:\nmain.WriteToFile({0x104a7f008?, 0x140000acf00?}, {0x140000acee3?, 0x1049ea548?, 0x140000a6000?})\n\t./main.go:38 +0x150\nmain.main()\n\t./main.go:23 +0x68\nexit status 2",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/assert/broken",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "cGFuaWM6IGludGVyZmFjZSBjb252ZXJzaW9uOiBpby5Xcml0ZXIgaXMgKmJ5dGVzLkJ1ZmZlciwgbm90ICpvcy5GaWxlCgpnb3JvdXRpbmUgMSBbcnVubmluZ106Cm1haW4uV3JpdGVUb0ZpbGUoezB4MTA0YTdmMDA4PywgMHgxNDAwMDBhY2YwMD99LCB7MHgxNDAwMDBhY2VlMz8sIDB4MTA0OWVhNTQ4PywgMHgxNDAwMDBhNjAwMD99KQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvYXNzZXJ0L2Jyb2tlbi9tYWluLmdvOjM4ICsweDE1MAptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvYXNzZXJ0L2Jyb2tlbi9tYWluLmdvOjIzICsweDY4CmV4aXQgc3RhdHVzIDI=",
                                                  "duration": 2931108667,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.41:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Panic caused by a failed type assertion.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 41,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "If asked, Go, will return a second argument, a boolean, during the assertion. That boolean will be ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "true",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " if the assertion was successful and ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "text": "false",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " if it wasn't. Checking this second argument will prevent panics on type assertion failures and keep your application up and running.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-42",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/assert/fixed/main.go#write"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func WriteToFile(w io.Writer, data []byte) error {\n\n\t// assert that w is a file\n\tf, ok := w.(*os.File)\n\n\t// check the assertion was successful\n\tif !ok {\n\t\treturn fmt.Errorf(\"expected *os.File, got %T\", w)\n\t}\n\n\t// defer closing the file\n\tdefer f.Close()\n\n\t// log the file name\n\tfmt.Printf(\"writing to file %s\\n\", f.Name())\n\n\t// write the data\n\t_, err := f.Write(data)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}",
                                                      "file": "panic/src/assert/fixed/main.go",
                                                      "lang": "go",
                                                      "name": "write",
                                                      "start": 34,
                                                      "end": 60,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/assert/fixed"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nexpected *os.File, got *bytes.Buffer\n\nexit status 1",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/assert/fixed",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "ZXhpdCBzdGF0dXMgMQ==",
                                                    "stdout": "ZXhwZWN0ZWQgKm9zLkZpbGUsIGdvdCAqYnl0ZXMuQnVmZmVy",
                                                    "duration": 2997711750,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nexpected *os.File, got *bytes.Buffer\n\nexit status 1",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/assert/fixed",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "ZXhpdCBzdGF0dXMgMQ==",
                                                  "stdout": "ZXhwZWN0ZWQgKm9zLkZpbGUsIGdvdCAqYnl0ZXMuQnVmZmVy",
                                                  "duration": 2997711750,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.42:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Proper type assertion checking prevents panics.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 42,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "blockquote",
                                      "file": "panic/_dont.md",
                                      "nodes": [
                                        {
                                          "text": "\n",
                                          "type": "hype.Text"
                                        },
                                        [
                                          {
                                            "atom": "p",
                                            "file": "panic/_dont.md",
                                            "nodes": [
                                              {
                                                "text": "Note: It is very important that a type check is not avoided. In virtually all cases, avoiding a type check will lead to a future bug in your code.",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Paragraph"
                                          }
                                        ],
                                        {
                                          "text": "\n",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "h2",
                                        "file": "panic/_dont.md",
                                        "level": 2,
                                        "nodes": [
                                          {
                                            "text": "Array/Slice Indexes",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "hype.Heading"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "When accessing indexes on slices and arrays if the index is greater than the length of the slice/array Go will panic.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-43",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/slices/broken/main.go#find"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func find(names []string, index int) (string, error) {\n\n\t// find the name at the index\n\ts := names[index]\n\n\t// return an error if the value is empty\n\tif len(s) == 0 {\n\t\treturn s, fmt.Errorf(\"index %d empty\", index)\n\t}\n\n\t// return the name\n\treturn s, nil\n}",
                                                      "file": "panic/src/slices/broken/main.go",
                                                      "lang": "go",
                                                      "name": "find",
                                                      "start": 29,
                                                      "end": 44,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.43:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "A function for retrieving the index of a slice.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 43,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "Consider the function defined in ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-43"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-43"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.43",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-43"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ". This function attempts to access the given index of the given slice. If the index is greater than the length of the slice, Go will panic, ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-44"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-44"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.44",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-44"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ]
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-44",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/slices/broken/main.go#example"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func main() {\n\n\t// create a slice\n\tnames := []string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\t// find index 42\n\ts, err := find(names, 42)\n\n\t// check for errors\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\n\t// print the result\n\tfmt.Println(\"found: \", s)\n}",
                                                      "file": "panic/src/slices/broken/main.go",
                                                      "lang": "go",
                                                      "name": "example",
                                                      "start": 8,
                                                      "end": 27,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/slices/broken"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\npanic: runtime error: index out of range [42] with length 4\n\ngoroutine 1 [running]:\nmain.find({0x14000104ee8?, 0x102297d6c?, 0x14000104ec8?}, 0x102298734?)\n\t./main.go:33 +0xb0\nmain.main()\n\t./main.go:15 +0x88\nexit status 2",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/slices/broken",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IG91dCBvZiByYW5nZSBbNDJdIHdpdGggbGVuZ3RoIDQKCmdvcm91dGluZSAxIFtydW5uaW5nXToKbWFpbi5maW5kKHsweDE0MDAwMTA0ZWU4PywgMHgxMDIyOTdkNmM/LCAweDE0MDAwMTA0ZWM4P30sIDB4MTAyMjk4NzM0PykKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvcGFuaWMvc3JjL3NsaWNlcy9icm9rZW4vbWFpbi5nbzozMyArMHhiMAptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvc2xpY2VzL2Jyb2tlbi9tYWluLmdvOjE1ICsweDg4CmV4aXQgc3RhdHVzIDI=",
                                                    "duration": 2861713666,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\npanic: runtime error: index out of range [42] with length 4\n\ngoroutine 1 [running]:\nmain.find({0x14000104ee8?, 0x102297d6c?, 0x14000104ec8?}, 0x102298734?)\n\t./main.go:33 +0xb0\nmain.main()\n\t./main.go:15 +0x88\nexit status 2",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/slices/broken",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IG91dCBvZiByYW5nZSBbNDJdIHdpdGggbGVuZ3RoIDQKCmdvcm91dGluZSAxIFtydW5uaW5nXToKbWFpbi5maW5kKHsweDE0MDAwMTA0ZWU4PywgMHgxMDIyOTdkNmM/LCAweDE0MDAwMTA0ZWM4P30sIDB4MTAyMjk4NzM0PykKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvcGFuaWMvc3JjL3NsaWNlcy9icm9rZW4vbWFpbi5nbzozMyArMHhiMAptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzA5LWVycm9ycy9wYW5pYy9zcmMvc2xpY2VzL2Jyb2tlbi9tYWluLmdvOjE1ICsweDg4CmV4aXQgc3RhdHVzIDI=",
                                                  "duration": 2861713666,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.44:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "An out of bounds panic.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 44,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "p",
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "To avoid this panic, check the length of slice/array to ensure the requested index can safely be retrieved. In ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "ref",
                                              "attributes": {
                                                "id": "listing-1-45"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "a",
                                                  "attributes": {
                                                    "href": "#listing-1-45"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.45",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Link",
                                                  "url": "#listing-1-45"
                                                }
                                              ],
                                              "type": "*hype.Ref"
                                            }
                                          ],
                                          {
                                            "text": ", the index is checked against the length of the slice/array before being accessed. If the index is greater than the length of the slice/array, the function will return an ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#error",
                                                "href": "https://pkg.go.dev/builtin#error",
                                                "target": "_blank"
                                              },
                                              "file": "panic/_dont.md",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "file": "panic/_dont.md",
                                                  "nodes": [
                                                    {
                                                      "text": "error",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.InlineCode"
                                                }
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#error"
                                            }
                                          ],
                                          {
                                            "text": " instead of panicking.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Paragraph"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figure",
                                        "attributes": {
                                          "id": "listing-1-45",
                                          "type": "listing"
                                        },
                                        "file": "panic/_dont.md",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "pre",
                                            "file": "panic",
                                            "nodes": [
                                              [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-go",
                                                    "language": "go",
                                                    "src": "panic/src/slices/fixed/main.go#find"
                                                  },
                                                  "lang": "go",
                                                  "nodes": [
                                                    {
                                                      "content": "func find(names []string, index int) (string, error) {\n\n\t// check for out of bounds index\n\tif index \u003e= len(names) {\n\t\treturn \"\", fmt.Errorf(\"out of bounds index %d [%d]\", index, len(names))\n\t}\n\n\t// find the name at the index\n\ts := names[index]\n\n\t// return an error if the value is empty\n\tif len(s) == 0 {\n\t\treturn s, fmt.Errorf(\"index %d empty\", index)\n\t}\n\n\t// return the name\n\treturn s, nil\n}",
                                                      "file": "panic/src/slices/fixed/main.go",
                                                      "lang": "go",
                                                      "name": "find",
                                                      "start": 29,
                                                      "end": 49,
                                                      "type": "hype.Snippet"
                                                    }
                                                  ],
                                                  "type": "*hype.SourceCode"
                                                }
                                              ]
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "atom": "hr",
                                            "file": "panic",
                                            "type": "*hype.Element"
                                          },
                                          [
                                            {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "atom": "cmd",
                                              "attributes": {
                                                "data-go-version": "go1.21.5",
                                                "exec": "go run .",
                                                "exit": "-1",
                                                "run": ".",
                                                "src": "panic/src/slices/fixed"
                                              },
                                              "expected_exit": -1,
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "result",
                                                  "nodes": [
                                                    {
                                                      "atom": "pre",
                                                      "nodes": [
                                                        {
                                                          "atom": "code",
                                                          "attributes": {
                                                            "class": "language-shell",
                                                            "language": "shell"
                                                          },
                                                          "lang": "shell",
                                                          "nodes": [
                                                            {
                                                              "text": "$ go run .\n\nout of bounds index 42 [4]\n\nexit status 1",
                                                              "type": "hype.Text"
                                                            },
                                                            {
                                                              "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.FencedCode"
                                                        }
                                                      ],
                                                      "type": "*hype.Element"
                                                    }
                                                  ],
                                                  "result": {
                                                    "args": [
                                                      "go",
                                                      "run",
                                                      "."
                                                    ],
                                                    "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/slices/fixed",
                                                    "err": {
                                                      "Stderr": null
                                                    },
                                                    "exit": 1,
                                                    "stderr": "ZXhpdCBzdGF0dXMgMQ==",
                                                    "stdout": "b3V0IG9mIGJvdW5kcyBpbmRleCA0MiBbNF0=",
                                                    "duration": 3722740334,
                                                    "type": "*clam.Result"
                                                  },
                                                  "type": "*hype.CmdResult"
                                                }
                                              ],
                                              "result": {
                                                "atom": "result",
                                                "nodes": [
                                                  {
                                                    "atom": "pre",
                                                    "nodes": [
                                                      {
                                                        "atom": "code",
                                                        "attributes": {
                                                          "class": "language-shell",
                                                          "language": "shell"
                                                        },
                                                        "lang": "shell",
                                                        "nodes": [
                                                          {
                                                            "text": "$ go run .\n\nout of bounds index 42 [4]\n\nexit status 1",
                                                            "type": "hype.Text"
                                                          },
                                                          {
                                                            "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.FencedCode"
                                                      }
                                                    ],
                                                    "type": "*hype.Element"
                                                  }
                                                ],
                                                "result": {
                                                  "args": [
                                                    "go",
                                                    "run",
                                                    "."
                                                  ],
                                                  "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/panic/src/slices/fixed",
                                                  "err": {
                                                    "Stderr": null
                                                  },
                                                  "exit": 1,
                                                  "stderr": "ZXhpdCBzdGF0dXMgMQ==",
                                                  "stdout": "b3V0IG9mIGJvdW5kcyBpbmRleCA0MiBbNF0=",
                                                  "duration": 3722740334,
                                                  "type": "*clam.Result"
                                                },
                                                "type": "*hype.CmdResult"
                                              },
                                              "timeout": "30s",
                                              "type": "*hype.Cmd"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "figcaption",
                                              "file": "panic",
                                              "nodes": [
                                                {
                                                  "atom": "em",
                                                  "attributes": {
                                                    "class": "figure-name"
                                                  },
                                                  "nodes": [
                                                    {
                                                      "text": "Listing 1.45:",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.Element"
                                                },
                                                {
                                                  "text": " ",
                                                  "type": "hype.Text"
                                                },
                                                {
                                                  "text": "Proper type assertion checking prevents panics.",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.Figcaption"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "pos": 45,
                                        "section_id": 1,
                                        "style": "listing",
                                        "type": "*hype.Figure"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "title": "Don't Panic",
                                  "type": "*hype.Page"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Include"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "errors/custom.md"
                      },
                      "dir": "errors",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "errors/custom.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "errors/custom.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Custom Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "As we have seen, errors in Go are implemented via the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/custom.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " interface, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-46"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-46"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.46",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-46"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". This means we can create our own custom error implementations. Custom errors allow us to manage workflow and provide detailed information about an error beyond the scope of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/custom.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " interface.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-46",
                                    "type": "listing"
                                  },
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.error"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.error",
                                          "exec": "go doc builtin.error"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.error\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\ntype error interface {\n\tError() string\n}\n    The error built-in interface type is the conventional interface for\n    representing an error condition, with the nil value representing no error.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.error"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCnR5cGUgZXJyb3IgaW50ZXJmYWNlIHsKCUVycm9yKCkgc3RyaW5nCn0KICAgIFRoZSBlcnJvciBidWlsdC1pbiBpbnRlcmZhY2UgdHlwZSBpcyB0aGUgY29udmVudGlvbmFsIGludGVyZmFjZSBmb3IKICAgIHJlcHJlc2VudGluZyBhbiBlcnJvciBjb25kaXRpb24sIHdpdGggdGhlIG5pbCB2YWx1ZSByZXByZXNlbnRpbmcgbm8gZXJyb3Iu",
                                              "duration": 2629797875,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.error\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\ntype error interface {\n\tError() string\n}\n    The error built-in interface type is the conventional interface for\n    representing an error condition, with the nil value representing no error.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.error"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCnR5cGUgZXJyb3IgaW50ZXJmYWNlIHsKCUVycm9yKCkgc3RyaW5nCn0KICAgIFRoZSBlcnJvciBidWlsdC1pbiBpbnRlcmZhY2UgdHlwZSBpcyB0aGUgY29udmVudGlvbmFsIGludGVyZmFjZSBmb3IKICAgIHJlcHJlc2VudGluZyBhbiBlcnJvciBjb25kaXRpb24sIHdpdGggdGhlIG5pbCB2YWx1ZSByZXByZXNlbnRpbmcgbm8gZXJyb3Iu",
                                            "duration": 2629797875,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.46:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#error",
                                                "href": "https://pkg.go.dev/builtin#error",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "error",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#error"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 46,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/custom.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Standard Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "Let's consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-47"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-47"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.47",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-47"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". A couple of types are being defined. The first, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "Model",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", is based on ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "map[string]any",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". For example, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "{\"age\": 27, \"name\": \"jimi\"}",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". Next, a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "Store",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " struct type is defined with a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " field of type ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "map[string][]Model",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". This ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " field is a map of table names to their models.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-47",
                                    "type": "listing"
                                  },
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/custom/store.go#store"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// Model is a key/value pair representing a model in the store.\n// e.g. {\"id\": 1, \"name\": \"bob\"}\ntype Model map[string]any\n\n// Store is a table based key/value store.\ntype Store struct {\n\tdata map[string][]Model\n}",
                                                "file": "errors/src/custom/store.go",
                                                "lang": "go",
                                                "name": "store",
                                                "start": 5,
                                                "end": 16,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.47:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Type definitions.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 47,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "Store",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " has a method, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "All(string)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", that will return all of the models in the store for the given table. If the table doesn't exist an error will be returned. This error is created using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fmt#Errorf",
                                          "href": "https://pkg.go.dev/fmt#Errorf",
                                          "target": "_blank"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/custom.md",
                                            "nodes": [
                                              {
                                                "text": "fmt.Errorf",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fmt#Errorf"
                                      }
                                    ],
                                    {
                                      "text": " function.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-48",
                                    "type": "listing"
                                  },
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/custom/store.go#all"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// All returns all models in the store for the given table name.\n// If no models exist, an error is returned.\nfunc (s *Store) All(tn string) ([]Model, error) {\n\tdb := s.data\n\n\t// if the underlying data is nil, return an error\n\tif db == nil {\n\t\treturn nil, fmt.Errorf(\"no data\")\n\t}\n\n\t// check to make sure table exists\n\tmods, ok := db[tn]\n\n\t// if table doesn't exist, return an error\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"table %s not found\", tn)\n\t}\n\n\t// return the slice of models\n\treturn mods, nil\n}",
                                                "file": "errors/src/custom/store.go",
                                                "lang": "go",
                                                "name": "all",
                                                "start": 18,
                                                "end": 41,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.48:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Store.All",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 48,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-49"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-49"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.49",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-49"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " is a test that asserts that if a given table doesn't exist in the store. This test, however, is lacking. Yes it asserts that an error was returned, but we don't know which error was returned. Did the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "All",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method return an error because the table didn't exist or because the underlying ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "data",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " map was ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": "?",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-49",
                                    "type": "listing"
                                  },
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/custom/store_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Store_All_NoTable(t *testing.T) {\n\tt.Parallel()\n\n\ts := \u0026Store{\n\t\tdata: map[string][]Model{},\n\t}\n\n\t_, err := s.All(\"users\")\n\tif err == nil {\n\t\tt.Fatal(\"expected error, got nil\")\n\t}\n\n\texp := \"table users not found\"\n\tact := err.Error()\n\tif act != exp {\n\t\tt.Fatalf(\"expected %q, got %q\", exp, act)\n\t}\n}",
                                                "file": "errors/src/custom/store_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 5,
                                                "end": 27,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "errors",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "errors/src/custom",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Store_All_NoTable\n=== PAUSE Test_Store_All_NoTable\n=== CONT  Test_Store_All_NoTable\n--- PASS: Test_Store_All_NoTable (0.00s)\nPASS\nok  \tdemo\t1.919s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/custom",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IFBBVVNFIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IENPTlQgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKLS0tIFBBU1M6IFRlc3RfU3RvcmVfQWxsX05vVGFibGUgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkxLjkxOXM=",
                                              "duration": 4775293208,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Store_All_NoTable\n=== PAUSE Test_Store_All_NoTable\n=== CONT  Test_Store_All_NoTable\n--- PASS: Test_Store_All_NoTable (0.00s)\nPASS\nok  \tdemo\t1.919s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/custom",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IFBBVVNFIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IENPTlQgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKLS0tIFBBU1M6IFRlc3RfU3RvcmVfQWxsX05vVGFibGUgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkxLjkxOXM=",
                                            "duration": 4775293208,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.49:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A test for the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Store.All",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 49,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "Like in, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-49"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-49"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.49",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-49"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", it might be tempting to assert against an error's message, but that is considered non-idiomatic and should never be used. The reason for this is simple; error messages change. If the error message changes the following test will fail. We consider this to be a \"brittle\" test.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/custom.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Defining Custom Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "We can define custom errors that can help distinguish one error from another, as well as, add more context around the error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-50"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-50"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.50",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-50"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we define a new ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "struct",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " type, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "ErrTableNotFound",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", that will implement the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/custom.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " interface. This type will contain information such as what table was missing and what time the error occurred.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-50",
                                    "type": "listing"
                                  },
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/custom-table-err/errors.go#err-table-not-found"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "type ErrTableNotFound struct {\n\tTable      string\n\tOccurredAt time.Time\n}\n\nfunc (e ErrTableNotFound) Error() string {\n\treturn fmt.Sprintf(\"[%s] table not found %s\", e.OccurredAt, e.Table)\n}",
                                                "file": "errors/src/custom-table-err/errors.go",
                                                "lang": "go",
                                                "name": "err-table-not-found",
                                                "start": 8,
                                                "end": 18,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.50:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "ErrTableNotFound",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " struct.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 50,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-51"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-51"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.51",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-51"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " updates the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "Store.All(string)",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", method to now return an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "ErrTableNotFound",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " error if the table doesn't exist. We also set the table name and the time the error occurred.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-51",
                                    "type": "listing"
                                  },
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/custom-table-err/store.go#all"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// All returns all models in the store for the given table name.\n// If no models exist, an error is returned.\nfunc (s *Store) All(tn string) ([]Model, error) {\n\tdb := s.data\n\n\t// if the underlying data is nil, return an error\n\tif db == nil {\n\t\treturn nil, fmt.Errorf(\"no data\")\n\t}\n\n\t// check to make sure table exists\n\tmods, ok := db[tn]\n\n\t// if table doesn't exist, return an error\n\tif !ok {\n\t\treturn nil, ErrTableNotFound{\n\t\t\tTable:      tn,\n\t\t\tOccurredAt: time.Now(),\n\t\t}\n\t}\n\n\t// return the slice of models\n\treturn mods, nil\n}",
                                                "file": "errors/src/custom-table-err/store.go",
                                                "lang": "go",
                                                "name": "all",
                                                "start": 21,
                                                "end": 47,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.51:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Store.All",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method with custom errors.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 51,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "The test can now be updated, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-52"
                                        },
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-52"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.52",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-52"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", to assert that the error is an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/custom.md",
                                        "nodes": [
                                          {
                                            "text": "ErrTableNotFound",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " error. The test passes and we can see the table name and the time the error occurred.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-52",
                                    "type": "listing"
                                  },
                                  "file": "errors/custom.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/custom-table-err/store_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Store_All_NoTable(t *testing.T) {\n\tt.Parallel()\n\n\ts := \u0026Store{\n\t\tdata: map[string][]Model{},\n\t}\n\n\t_, err := s.All(\"users\")\n\tif err == nil {\n\t\tt.Fatal(\"expected error, got nil\")\n\t}\n\n\texp := \"users\"\n\te, ok := err.(ErrTableNotFound)\n\tif !ok {\n\t\tt.Fatalf(\"expected ErrTableNotFound, got %T\", err)\n\t}\n\n\tact := e.Table\n\tif act != exp {\n\t\tt.Fatalf(\"expected %q, got %q\", exp, act)\n\t}\n\n\tif e.OccurredAt.IsZero() {\n\t\tt.Fatal(\"expected non-zero time\")\n\t}\n}",
                                                "file": "errors/src/custom-table-err/store_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 5,
                                                "end": 36,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "errors",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "errors/src/custom-table-err",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Store_All_NoTable\n=== PAUSE Test_Store_All_NoTable\n=== CONT  Test_Store_All_NoTable\n--- PASS: Test_Store_All_NoTable (0.00s)\nPASS\nok  \tdemo\t2.353s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/custom-table-err",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IFBBVVNFIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IENPTlQgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKLS0tIFBBU1M6IFRlc3RfU3RvcmVfQWxsX05vVGFibGUgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkyLjM1M3M=",
                                              "duration": 5251222625,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Store_All_NoTable\n=== PAUSE Test_Store_All_NoTable\n=== CONT  Test_Store_All_NoTable\n--- PASS: Test_Store_All_NoTable (0.00s)\nPASS\nok  \tdemo\t2.353s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/custom-table-err",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IFBBVVNFIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IENPTlQgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKLS0tIFBBU1M6IFRlc3RfU3RvcmVfQWxsX05vVGFibGUgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkyLjM1M3M=",
                                            "duration": 5251222625,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.52:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A test for the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Store.All",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method with custom errors.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 52,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Custom Errors",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "errors/wrapping.md"
                      },
                      "dir": "errors",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "errors/wrapping.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "errors/wrapping.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Wrapping and Unwrapping Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "Consider the method defined in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-53"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-53"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.53",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-53"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". If an error occurs a custom ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " implementation, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "ErrTableNotFound",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", is initialized with the appropriate information. Before being returned, however, error is then wrapped with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fmt#Errorf",
                                          "href": "https://pkg.go.dev/fmt#Errorf",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "fmt.Errorf",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fmt#Errorf"
                                      }
                                    ],
                                    {
                                      "text": " to a message that includes the type and method that caused the error. To wrap an error using ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fmt#Errorf",
                                          "href": "https://pkg.go.dev/fmt#Errorf",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "fmt.Errorf",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fmt#Errorf"
                                      }
                                    ],
                                    {
                                      "text": ", we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "%w",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " formatting verb, meant for errors.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-53",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapped-error/store.go#all"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// All returns all models in the store for the given table name.\n// If no models exist, an error is returned.\nfunc (s *Store) All(tn string) ([]Model, error) {\n\tdb := s.data\n\n\t// if the underlying data is nil, return an error\n\tif db == nil {\n\t\treturn nil, fmt.Errorf(\"no data\")\n\t}\n\n\t// check to make sure table exists\n\tmods, ok := db[tn]\n\n\t// if table doesn't exist, return an error\n\tif !ok {\n\t\terr := ErrTableNotFound{\n\t\t\tTable:      tn,\n\t\t\tOccurredAt: time.Now(),\n\t\t}\n\t\treturn nil, fmt.Errorf(\"[Store.All] %w\", err)\n\t}\n\n\t// return the slice of models\n\treturn mods, nil\n}",
                                                "file": "errors/src/wrapped-error/store.go",
                                                "lang": "go",
                                                "name": "all",
                                                "start": 21,
                                                "end": 48,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.53:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Store.All",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 53,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-54"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-54"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.54",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-54"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " shows a test for the method in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-53"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-53"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.53",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-53"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". This test tries to assert the returned error is of type ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "ErrTableNotFound",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". When an error is wrapped with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fmt#Errorf",
                                          "href": "https://pkg.go.dev/fmt#Errorf",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "fmt.Errorf",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fmt#Errorf"
                                      }
                                    ],
                                    {
                                      "text": ", the resulting type is that of the general ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " interface. As such, by wrapping the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "ErrTableNotFound",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " error with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fmt#Errorf",
                                          "href": "https://pkg.go.dev/fmt#Errorf",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "fmt.Errorf",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fmt#Errorf"
                                      }
                                    ],
                                    {
                                      "text": " we have changed the resulting type of the error. This also results in the tests failing as the error is no longer an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "ErrTableNotFound",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", but a different type.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-54",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapped-error/store_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Store_All_NoTable(t *testing.T) {\n\tt.Parallel()\n\n\ts := \u0026Store{\n\t\tdata: map[string][]Model{},\n\t}\n\n\t_, err := s.All(\"users\")\n\tif err == nil {\n\t\tt.Fatal(\"expected error, got nil\")\n\t}\n\n\texp := \"users\"\n\te, ok := err.(ErrTableNotFound)\n\tif !ok {\n\t\tt.Fatalf(\"expected ErrTableNotFound, got %T\", err)\n\t}\n\n\tact := e.Table\n\tif act != exp {\n\t\tt.Fatalf(\"expected %q, got %q\", exp, act)\n\t}\n\n\tif e.OccurredAt.IsZero() {\n\t\tt.Fatal(\"expected non-zero time\")\n\t}\n}",
                                                "file": "errors/src/wrapped-error/store_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 5,
                                                "end": 34,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "errors/src/wrapped-error",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Store_All_NoTable\n=== PAUSE Test_Store_All_NoTable\n=== CONT  Test_Store_All_NoTable\n    store_test.go:21: expected ErrTableNotFound, got *fmt.wrapError\n--- FAIL: Test_Store_All_NoTable (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t1.606s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapped-error",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IFBBVVNFIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IENPTlQgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKICAgIHN0b3JlX3Rlc3QuZ286MjE6IGV4cGVjdGVkIEVyclRhYmxlTm90Rm91bmQsIGdvdCAqZm10LndyYXBFcnJvcgotLS0gRkFJTDogVGVzdF9TdG9yZV9BbGxfTm9UYWJsZSAoMC4wMHMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMS42MDZz",
                                              "duration": 4406563000,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Store_All_NoTable\n=== PAUSE Test_Store_All_NoTable\n=== CONT  Test_Store_All_NoTable\n    store_test.go:21: expected ErrTableNotFound, got *fmt.wrapError\n--- FAIL: Test_Store_All_NoTable (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t1.606s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapped-error",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IFBBVVNFIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IENPTlQgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKICAgIHN0b3JlX3Rlc3QuZ286MjE6IGV4cGVjdGVkIEVyclRhYmxlTm90Rm91bmQsIGdvdCAqZm10LndyYXBFcnJvcgotLS0gRkFJTDogVGVzdF9TdG9yZV9BbGxfTm9UYWJsZSAoMC4wMHMpCkZBSUwKZXhpdCBzdGF0dXMgMQpGQUlMCWRlbW8JMS42MDZz",
                                            "duration": 4406563000,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.54:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A wrapped error can no longer be asserted against correctly.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 54,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/wrapping.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Wrapping Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "In order to get to the original error we need to unwrap the errors until we reach the original error. This is similar to peeling an onion, where each error is a layer of wrapping.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "Let's take a simplified look at how wrapping and unwrapping errors works in Go. Consider the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " types defined in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-55"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-55"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.55",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-55"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". Each one contains a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "err",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " field that holds the error that is wrapping.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-55",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapping-error/errors.go#errors"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "type ErrorA struct {\n\terr error\n}\n\nfunc (e ErrorA) Error() string {\n\treturn fmt.Sprintf(\"[ErrorA] %s\", e.err)\n}\n\ntype ErrorB struct {\n\terr error\n}\n\nfunc (e ErrorB) Error() string {\n\treturn fmt.Sprintf(\"[ErrorB] %s\", e.err)\n}\n\ntype ErrorC struct {\n\terr error\n}\n\nfunc (e ErrorC) Error() string {\n\treturn fmt.Sprintf(\"[ErrorC] %s\", e.err)\n}",
                                                "file": "errors/src/wrapping-error/errors.go",
                                                "lang": "go",
                                                "name": "errors",
                                                "start": 5,
                                                "end": 30,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.55:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The three error types.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 55,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-56"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-56"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.56",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-56"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "Wrapper",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function takes an error and the proceeds to wrap it in each of the three error types.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-56",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapping-error/errors.go#wrapper-short"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// Wrapper wraps an error with a bunch of\n// other errors.\n// ex. Wrapper(original) #=\u003e ErrorC -\u003e ErrorB -\u003e ErrorA -\u003e original\nfunc Wrapper(original error) error {\n\toriginal = ErrorA{original}\n\toriginal = ErrorB{original}\n\toriginal = ErrorC{original}\n\treturn original\n}",
                                                "file": "errors/src/wrapping-error/errors.go",
                                                "lang": "go",
                                                "name": "wrapper-short",
                                                "start": 32,
                                                "end": 43,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.56:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Wrapper",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 56,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "Another way to do this same wrapping is to use multiline initialization and fill each error type with the next error type, as seen in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-57"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-57"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.57",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-57"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". Both of these are valid implementations of the same wrapping.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-57",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapping-error/errors.go#wrapper-long"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// WrapperLong wraps an error with a bunch of\n// other errors.\n// ex. WrapperLong(original) #=\u003e ErrorC -\u003e ErrorB -\u003e ErrorA -\u003e original\nfunc WrapperLong(original error) error {\n\treturn ErrorC{\n\t\terr: ErrorB{\n\t\t\terr: ErrorA{\n\t\t\t\terr: original,\n\t\t\t},\n\t\t},\n\t}\n}",
                                                "file": "errors/src/wrapping-error/errors.go",
                                                "lang": "go",
                                                "name": "wrapper-long",
                                                "start": 45,
                                                "end": 59,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.57:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Wrapper",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 57,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/wrapping.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Unwrapping Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-58"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-58"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.58",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-58"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", can be used to unwrap an error until it reaches the original error. This will continue to peel the wrapped layers until it, hopefully, reaches the original error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-58",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "errors.Unwrap"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "errors.Unwrap",
                                          "exec": "go doc errors.Unwrap"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc errors.Unwrap\n\npackage errors // import \u0026#34;errors\u0026#34;\n\nfunc Unwrap(err error) error\n    Unwrap returns the result of calling the Unwrap method on err, if err\u0026#39;s type\n    contains an Unwrap method returning error. Otherwise, Unwrap returns nil.\n\n    Unwrap only calls a method of the form \u0026#34;Unwrap() error\u0026#34;. In particular\n    Unwrap does not unwrap errors returned by Join.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "errors.Unwrap"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBlcnJvcnMgLy8gaW1wb3J0ICJlcnJvcnMiCgpmdW5jIFVud3JhcChlcnIgZXJyb3IpIGVycm9yCiAgICBVbndyYXAgcmV0dXJucyB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgdGhlIFVud3JhcCBtZXRob2Qgb24gZXJyLCBpZiBlcnIncyB0eXBlCiAgICBjb250YWlucyBhbiBVbndyYXAgbWV0aG9kIHJldHVybmluZyBlcnJvci4gT3RoZXJ3aXNlLCBVbndyYXAgcmV0dXJucyBuaWwuCgogICAgVW53cmFwIG9ubHkgY2FsbHMgYSBtZXRob2Qgb2YgdGhlIGZvcm0gIlVud3JhcCgpIGVycm9yIi4gSW4gcGFydGljdWxhcgogICAgVW53cmFwIGRvZXMgbm90IHVud3JhcCBlcnJvcnMgcmV0dXJuZWQgYnkgSm9pbi4=",
                                              "duration": 2083229667,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc errors.Unwrap\n\npackage errors // import \u0026#34;errors\u0026#34;\n\nfunc Unwrap(err error) error\n    Unwrap returns the result of calling the Unwrap method on err, if err\u0026#39;s type\n    contains an Unwrap method returning error. Otherwise, Unwrap returns nil.\n\n    Unwrap only calls a method of the form \u0026#34;Unwrap() error\u0026#34;. In particular\n    Unwrap does not unwrap errors returned by Join.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "errors.Unwrap"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBlcnJvcnMgLy8gaW1wb3J0ICJlcnJvcnMiCgpmdW5jIFVud3JhcChlcnIgZXJyb3IpIGVycm9yCiAgICBVbndyYXAgcmV0dXJucyB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgdGhlIFVud3JhcCBtZXRob2Qgb24gZXJyLCBpZiBlcnIncyB0eXBlCiAgICBjb250YWlucyBhbiBVbndyYXAgbWV0aG9kIHJldHVybmluZyBlcnJvci4gT3RoZXJ3aXNlLCBVbndyYXAgcmV0dXJucyBuaWwuCgogICAgVW53cmFwIG9ubHkgY2FsbHMgYSBtZXRob2Qgb2YgdGhlIGZvcm0gIlVud3JhcCgpIGVycm9yIi4gSW4gcGFydGljdWxhcgogICAgVW53cmFwIGRvZXMgbm90IHVud3JhcCBlcnJvcnMgcmV0dXJuZWQgYnkgSm9pbi4=",
                                            "duration": 2083229667,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.58:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "errors#Unwrap",
                                                "href": "https://pkg.go.dev/errors#Unwrap",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "errors.Unwrap",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/errors#Unwrap"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 58,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-59"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-59"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.59",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-59"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " the test has been updated to use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": " function to unwrap the error until it reaches the original error. Unfortunately, however, the test will fail because the result of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "errors.Unwrap",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-59",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapping-error/errors_test.go#test-unwrap"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Unwrap(t *testing.T) {\n\tt.Parallel()\n\n\toriginal := errors.New(\"original error\")\n\twrapped := Wrapper(original)\n\n\tunwrapped := errors.Unwrap(wrapped)\n\tif unwrapped != original {\n\t\tt.Fatalf(\"expected %v, got %v\", original, unwrapped)\n\t}\n\n}",
                                                "file": "errors/src/wrapping-error/errors_test.go",
                                                "lang": "go",
                                                "name": "test-unwrap",
                                                "start": 23,
                                                "end": 37,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "errors",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "errors/src/wrapping-error",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Wrapper\n=== PAUSE Test_Wrapper\n=== RUN   Test_Unwrap\n=== PAUSE Test_Unwrap\n=== CONT  Test_Wrapper\n--- PASS: Test_Wrapper (0.00s)\n=== CONT  Test_Unwrap\n    errors_test.go:32: expected original error, got \u0026lt;nil\u0026gt;\n--- FAIL: Test_Unwrap (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t2.278s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapping-error",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV3JhcHBlcgo9PT0gUEFVU0UgVGVzdF9XcmFwcGVyCj09PSBSVU4gICBUZXN0X1Vud3JhcAo9PT0gUEFVU0UgVGVzdF9VbndyYXAKPT09IENPTlQgIFRlc3RfV3JhcHBlcgotLS0gUEFTUzogVGVzdF9XcmFwcGVyICgwLjAwcykKPT09IENPTlQgIFRlc3RfVW53cmFwCiAgICBlcnJvcnNfdGVzdC5nbzozMjogZXhwZWN0ZWQgb3JpZ2luYWwgZXJyb3IsIGdvdCA8bmlsPgotLS0gRkFJTDogVGVzdF9VbndyYXAgKDAuMDBzKQpGQUlMCmV4aXQgc3RhdHVzIDEKRkFJTAlkZW1vCTIuMjc4cw==",
                                              "duration": 5174826458,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Wrapper\n=== PAUSE Test_Wrapper\n=== RUN   Test_Unwrap\n=== PAUSE Test_Unwrap\n=== CONT  Test_Wrapper\n--- PASS: Test_Wrapper (0.00s)\n=== CONT  Test_Unwrap\n    errors_test.go:32: expected original error, got \u0026lt;nil\u0026gt;\n--- FAIL: Test_Unwrap (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t2.278s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapping-error",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV3JhcHBlcgo9PT0gUEFVU0UgVGVzdF9XcmFwcGVyCj09PSBSVU4gICBUZXN0X1Vud3JhcAo9PT0gUEFVU0UgVGVzdF9VbndyYXAKPT09IENPTlQgIFRlc3RfV3JhcHBlcgotLS0gUEFTUzogVGVzdF9XcmFwcGVyICgwLjAwcykKPT09IENPTlQgIFRlc3RfVW53cmFwCiAgICBlcnJvcnNfdGVzdC5nbzozMjogZXhwZWN0ZWQgb3JpZ2luYWwgZXJyb3IsIGdvdCA8bmlsPgotLS0gRkFJTDogVGVzdF9VbndyYXAgKDAuMDBzKQpGQUlMCmV4aXQgc3RhdHVzIDEKRkFJTAlkZW1vCTIuMjc4cw==",
                                            "duration": 5174826458,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.59:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "errors#Unwrap",
                                                "href": "https://pkg.go.dev/errors#Unwrap",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "errors.Unwrap",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/errors#Unwrap"
                                            }
                                          ],
                                          {
                                            "text": " to get the original error.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 59,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/wrapping.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Unwrapping Custom Errors",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "As the documentation states, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-58"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-58"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.58",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-58"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": " returns the result of calling the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "Unwrap",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method on an error, if the error's type contains an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "Unwrap",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method returning ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "error",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". Otherwise, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": " returns ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "What the documentation is trying to say is that our custom error types need to implement the interface shown in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-60"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-60"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.60",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-60"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". Unfortunately, the Go standard library does not define this interface for you, outside of the documentation.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-60",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapped-broken/errors.go#interface"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "type Unwrapper interface {\n\tUnwrap() error\n}",
                                                "file": "errors/src/wrapped-broken/errors.go",
                                                "lang": "go",
                                                "name": "interface",
                                                "start": 8,
                                                "end": 13,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.60:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The missing ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Unwrapper",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 60,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "Let's update the error types defined in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-55"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-55"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.55",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-55"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " to implement the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "Unwrapper",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " interface. While ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-61"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-61"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.61",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-61"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " only shows one implementation, all of our types will need to be made to implement the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "Unwrapper",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " interface. The implementation of this interface needs to make sure to call ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": " on the error it is wrapping.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-61",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapped-broken/errors.go#unwrap"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func (e ErrorA) Unwrap() error {\n\treturn errors.Unwrap(e.err)\n}",
                                                "file": "errors/src/wrapped-broken/errors.go",
                                                "lang": "go",
                                                "name": "unwrap",
                                                "start": 24,
                                                "end": 29,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "errors",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "exit": "-1",
                                          "src": "errors/src/wrapped-broken",
                                          "test": "-v"
                                        },
                                        "expected_exit": -1,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Wrapper\n=== PAUSE Test_Wrapper\n=== RUN   Test_Unwrap\n=== PAUSE Test_Unwrap\n=== CONT  Test_Wrapper\n--- PASS: Test_Wrapper (0.00s)\n=== CONT  Test_Unwrap\n    errors_test.go:32: expected original error, got \u0026lt;nil\u0026gt;\n--- FAIL: Test_Unwrap (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t2.148s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapped-broken",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV3JhcHBlcgo9PT0gUEFVU0UgVGVzdF9XcmFwcGVyCj09PSBSVU4gICBUZXN0X1Vud3JhcAo9PT0gUEFVU0UgVGVzdF9VbndyYXAKPT09IENPTlQgIFRlc3RfV3JhcHBlcgotLS0gUEFTUzogVGVzdF9XcmFwcGVyICgwLjAwcykKPT09IENPTlQgIFRlc3RfVW53cmFwCiAgICBlcnJvcnNfdGVzdC5nbzozMjogZXhwZWN0ZWQgb3JpZ2luYWwgZXJyb3IsIGdvdCA8bmlsPgotLS0gRkFJTDogVGVzdF9VbndyYXAgKDAuMDBzKQpGQUlMCmV4aXQgc3RhdHVzIDEKRkFJTAlkZW1vCTIuMTQ4cw==",
                                              "duration": 5014927334,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Wrapper\n=== PAUSE Test_Wrapper\n=== RUN   Test_Unwrap\n=== PAUSE Test_Unwrap\n=== CONT  Test_Wrapper\n--- PASS: Test_Wrapper (0.00s)\n=== CONT  Test_Unwrap\n    errors_test.go:32: expected original error, got \u0026lt;nil\u0026gt;\n--- FAIL: Test_Unwrap (0.00s)\nFAIL\nexit status 1\nFAIL\tdemo\t2.148s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapped-broken",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV3JhcHBlcgo9PT0gUEFVU0UgVGVzdF9XcmFwcGVyCj09PSBSVU4gICBUZXN0X1Vud3JhcAo9PT0gUEFVU0UgVGVzdF9VbndyYXAKPT09IENPTlQgIFRlc3RfV3JhcHBlcgotLS0gUEFTUzogVGVzdF9XcmFwcGVyICgwLjAwcykKPT09IENPTlQgIFRlc3RfVW53cmFwCiAgICBlcnJvcnNfdGVzdC5nbzozMjogZXhwZWN0ZWQgb3JpZ2luYWwgZXJyb3IsIGdvdCA8bmlsPgotLS0gRkFJTDogVGVzdF9VbndyYXAgKDAuMDBzKQpGQUlMCmV4aXQgc3RhdHVzIDEKRkFJTAlkZW1vCTIuMTQ4cw==",
                                            "duration": 5014927334,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.61:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Implementing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Unwrapper",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 61,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "The tests in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-61"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-61"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.61",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-61"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", however, are still failing. If the error we are wrapping does not contain an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "Unwrap",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": " function will return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " and we won't be able to get access to the original error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "To fix this we need to check the error we are wrapping for the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "Unwrapper",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " interface. If it does, we can call ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": " with the error. If it does not exist, we can return the error as is.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-62",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapped/errors.go#unwrap"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func (e ErrorA) Unwrap() error {\n\tif _, ok := e.err.(Unwrapper); ok {\n\t\treturn errors.Unwrap(e.err)\n\t}\n\n\treturn e.err\n}",
                                                "file": "errors/src/wrapped/errors.go",
                                                "lang": "go",
                                                "name": "unwrap",
                                                "start": 24,
                                                "end": 33,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "errors/src/wrapped",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Wrapper\n=== PAUSE Test_Wrapper\n=== RUN   Test_Unwrap\n=== PAUSE Test_Unwrap\n=== CONT  Test_Wrapper\n=== CONT  Test_Unwrap\n--- PASS: Test_Wrapper (0.00s)\n--- PASS: Test_Unwrap (0.00s)\nPASS\nok  \tdemo\t2.072s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapped",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfV3JhcHBlcgo9PT0gUEFVU0UgVGVzdF9XcmFwcGVyCj09PSBSVU4gICBUZXN0X1Vud3JhcAo9PT0gUEFVU0UgVGVzdF9VbndyYXAKPT09IENPTlQgIFRlc3RfV3JhcHBlcgo9PT0gQ09OVCAgVGVzdF9VbndyYXAKLS0tIFBBU1M6IFRlc3RfV3JhcHBlciAoMC4wMHMpCi0tLSBQQVNTOiBUZXN0X1Vud3JhcCAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTIuMDcycw==",
                                              "duration": 4937172917,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Wrapper\n=== PAUSE Test_Wrapper\n=== RUN   Test_Unwrap\n=== PAUSE Test_Unwrap\n=== CONT  Test_Wrapper\n=== CONT  Test_Unwrap\n--- PASS: Test_Wrapper (0.00s)\n--- PASS: Test_Unwrap (0.00s)\nPASS\nok  \tdemo\t2.072s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapped",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfV3JhcHBlcgo9PT0gUEFVU0UgVGVzdF9XcmFwcGVyCj09PSBSVU4gICBUZXN0X1Vud3JhcAo9PT0gUEFVU0UgVGVzdF9VbndyYXAKPT09IENPTlQgIFRlc3RfV3JhcHBlcgo9PT0gQ09OVCAgVGVzdF9VbndyYXAKLS0tIFBBU1M6IFRlc3RfV3JhcHBlciAoMC4wMHMpCi0tLSBQQVNTOiBUZXN0X1Vud3JhcCAoMC4wMHMpClBBU1MKb2sgIAlkZW1vCTIuMDcycw==",
                                            "duration": 4937172917,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.62:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Properly implementing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "Unwrap",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " method.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 62,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "Now that we understand ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": ", we can fix the test in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-54"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-54"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.54",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-54"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " to get the original error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-63",
                                    "type": "listing"
                                  },
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapped-fixed/store_test.go#test"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Store_All_NoTable(t *testing.T) {\n\tt.Parallel()\n\n\ts := \u0026Store{\n\t\tdata: map[string][]Model{},\n\t}\n\n\t_, err := s.All(\"users\")\n\tif err == nil {\n\t\tt.Fatal(\"expected error, got nil\")\n\t}\n\n\t// unwrap the error\n\terr = errors.Unwrap(err)\n\n\texp := \"users\"\n\te, ok := err.(ErrTableNotFound)\n\tif !ok {\n\t\tt.Fatalf(\"expected ErrTableNotFound, got %T\", err)\n\t}\n\n\tact := e.Table\n\tif act != exp {\n\t\tt.Fatalf(\"expected %q, got %q\", exp, act)\n\t}\n\n\tif e.OccurredAt.IsZero() {\n\t\tt.Fatal(\"expected non-zero time\")\n\t}\n}",
                                                "file": "errors/src/wrapped-fixed/store_test.go",
                                                "lang": "go",
                                                "name": "test",
                                                "start": 8,
                                                "end": 40,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "errors",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "errors/src/wrapped-fixed",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Store_All_NoTable\n=== PAUSE Test_Store_All_NoTable\n=== CONT  Test_Store_All_NoTable\n--- PASS: Test_Store_All_NoTable (0.00s)\nPASS\nok  \tdemo\t1.993s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapped-fixed",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IFBBVVNFIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IENPTlQgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKLS0tIFBBU1M6IFRlc3RfU3RvcmVfQWxsX05vVGFibGUgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkxLjk5M3M=",
                                              "duration": 4855782250,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Store_All_NoTable\n=== PAUSE Test_Store_All_NoTable\n=== CONT  Test_Store_All_NoTable\n--- PASS: Test_Store_All_NoTable (0.00s)\nPASS\nok  \tdemo\t1.993s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/wrapped-fixed",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IFBBVVNFIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKPT09IENPTlQgIFRlc3RfU3RvcmVfQWxsX05vVGFibGUKLS0tIFBBU1M6IFRlc3RfU3RvcmVfQWxsX05vVGFibGUgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkxLjk5M3M=",
                                            "duration": 4855782250,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.63:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "WrappedError",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " type.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 63,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/wrapping.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "To Wrap Or Not to Wrap",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "We saw that you can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "fmt#Errorf",
                                          "href": "https://pkg.go.dev/fmt#Errorf",
                                          "target": "_blank"
                                        },
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/wrapping.md",
                                            "nodes": [
                                              {
                                                "text": "fmt.Errorf",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/fmt#Errorf"
                                      }
                                    ],
                                    {
                                      "text": " with the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "%w",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " verb to wrap an error. This will allow for the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "unwrapping",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " of an error later, either from the caller of your function/method or in a test.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "While the normal rule is to always wrap the errors with the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "%w",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", there are exceptions. If you don't want some internal information or package specific information to not be wrapped, then it is ok to use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/wrapping.md",
                                        "nodes": [
                                          {
                                            "text": "%s",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " verb to hide any implementation details. Keep in mind, this is normally the exception and not the rule.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/wrapping.md",
                                  "nodes": [
                                    {
                                      "text": "If in doubt, it is usually safer to wrap the error so that other code that calls your package can check for specific errors later.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Wrapping and Unwrapping Errors",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "errors/as_is.md"
                      },
                      "dir": "errors",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "errors/as_is.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "errors/as_is.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Errors As/Is",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "While unwrapping an error allows us to get to the original, underlying error, it does not allow us to get access to any of the other errors that it might have been wrapped with. Consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-64"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-64"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.64",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-64"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". When we unwrap the error returned from the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "Wrapper",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " function we can get access to the original error passed in, but how do we check if the wrapped error has ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "ErrorB",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " in its stack and how do we get access to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "ErrorA",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " error? The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors",
                                          "href": "https://pkg.go.dev/errors",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors"
                                      }
                                    ],
                                    {
                                      "text": " package provides two functions, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Is",
                                          "href": "https://pkg.go.dev/errors#Is",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Is",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Is"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": ", that will help us with these questions.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-64",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/wrapping-error/errors.go#wrapper-short"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// Wrapper wraps an error with a bunch of\n// other errors.\n// ex. Wrapper(original) #=\u003e ErrorC -\u003e ErrorB -\u003e ErrorA -\u003e original\nfunc Wrapper(original error) error {\n\toriginal = ErrorA{original}\n\toriginal = ErrorB{original}\n\toriginal = ErrorC{original}\n\treturn original\n}",
                                                "file": "errors/src/wrapping-error/errors.go",
                                                "lang": "go",
                                                "name": "wrapper-short",
                                                "start": 32,
                                                "end": 43,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.64:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A function that nests one error in many errors.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 64,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/as_is.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "As",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "When working with errors, we often don't care about the underlying error, there are times, however, when we do care about the underlying error and we want to get access to it. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-65"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-65"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.65",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-65"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", function is designed to do this. It takes an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#error",
                                          "href": "https://pkg.go.dev/builtin#error",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "error",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#error"
                                      }
                                    ],
                                    {
                                      "text": " and a type to match against. If the error matches the type, it will return the underlying error. If the error does not match the type, it will return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "nil",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-65",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "errors.As"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "errors.As",
                                          "exec": "go doc errors.As"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc errors.As\n\npackage errors // import \u0026#34;errors\u0026#34;\n\nfunc As(err error, target any) bool\n    As finds the first error in err\u0026#39;s tree that matches target, and if one\n    is found, sets target to that error value and returns true. Otherwise,\n    it returns false.\n\n    The tree consists of err itself, followed by the errors obtained by\n    repeatedly calling Unwrap. When err wraps multiple errors, As examines err\n    followed by a depth-first traversal of its children.\n\n    An error matches target if the error\u0026#39;s concrete value is assignable to the\n    value pointed to by target, or if the error has a method As(interface{})\n    bool such that As(target) returns true. In the latter case, the As method is\n    responsible for setting target.\n\n    An error type might provide an As method so it can be treated as if it were\n    a different error type.\n\n    As panics if target is not a non-nil pointer to either a type that\n    implements error, or to any interface type.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "errors.As"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBlcnJvcnMgLy8gaW1wb3J0ICJlcnJvcnMiCgpmdW5jIEFzKGVyciBlcnJvciwgdGFyZ2V0IGFueSkgYm9vbAogICAgQXMgZmluZHMgdGhlIGZpcnN0IGVycm9yIGluIGVycidzIHRyZWUgdGhhdCBtYXRjaGVzIHRhcmdldCwgYW5kIGlmIG9uZQogICAgaXMgZm91bmQsIHNldHMgdGFyZ2V0IHRvIHRoYXQgZXJyb3IgdmFsdWUgYW5kIHJldHVybnMgdHJ1ZS4gT3RoZXJ3aXNlLAogICAgaXQgcmV0dXJucyBmYWxzZS4KCiAgICBUaGUgdHJlZSBjb25zaXN0cyBvZiBlcnIgaXRzZWxmLCBmb2xsb3dlZCBieSB0aGUgZXJyb3JzIG9idGFpbmVkIGJ5CiAgICByZXBlYXRlZGx5IGNhbGxpbmcgVW53cmFwLiBXaGVuIGVyciB3cmFwcyBtdWx0aXBsZSBlcnJvcnMsIEFzIGV4YW1pbmVzIGVycgogICAgZm9sbG93ZWQgYnkgYSBkZXB0aC1maXJzdCB0cmF2ZXJzYWwgb2YgaXRzIGNoaWxkcmVuLgoKICAgIEFuIGVycm9yIG1hdGNoZXMgdGFyZ2V0IGlmIHRoZSBlcnJvcidzIGNvbmNyZXRlIHZhbHVlIGlzIGFzc2lnbmFibGUgdG8gdGhlCiAgICB2YWx1ZSBwb2ludGVkIHRvIGJ5IHRhcmdldCwgb3IgaWYgdGhlIGVycm9yIGhhcyBhIG1ldGhvZCBBcyhpbnRlcmZhY2V7fSkKICAgIGJvb2wgc3VjaCB0aGF0IEFzKHRhcmdldCkgcmV0dXJucyB0cnVlLiBJbiB0aGUgbGF0dGVyIGNhc2UsIHRoZSBBcyBtZXRob2QgaXMKICAgIHJlc3BvbnNpYmxlIGZvciBzZXR0aW5nIHRhcmdldC4KCiAgICBBbiBlcnJvciB0eXBlIG1pZ2h0IHByb3ZpZGUgYW4gQXMgbWV0aG9kIHNvIGl0IGNhbiBiZSB0cmVhdGVkIGFzIGlmIGl0IHdlcmUKICAgIGEgZGlmZmVyZW50IGVycm9yIHR5cGUuCgogICAgQXMgcGFuaWNzIGlmIHRhcmdldCBpcyBub3QgYSBub24tbmlsIHBvaW50ZXIgdG8gZWl0aGVyIGEgdHlwZSB0aGF0CiAgICBpbXBsZW1lbnRzIGVycm9yLCBvciB0byBhbnkgaW50ZXJmYWNlIHR5cGUu",
                                              "duration": 2732899041,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc errors.As\n\npackage errors // import \u0026#34;errors\u0026#34;\n\nfunc As(err error, target any) bool\n    As finds the first error in err\u0026#39;s tree that matches target, and if one\n    is found, sets target to that error value and returns true. Otherwise,\n    it returns false.\n\n    The tree consists of err itself, followed by the errors obtained by\n    repeatedly calling Unwrap. When err wraps multiple errors, As examines err\n    followed by a depth-first traversal of its children.\n\n    An error matches target if the error\u0026#39;s concrete value is assignable to the\n    value pointed to by target, or if the error has a method As(interface{})\n    bool such that As(target) returns true. In the latter case, the As method is\n    responsible for setting target.\n\n    An error type might provide an As method so it can be treated as if it were\n    a different error type.\n\n    As panics if target is not a non-nil pointer to either a type that\n    implements error, or to any interface type.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "errors.As"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBlcnJvcnMgLy8gaW1wb3J0ICJlcnJvcnMiCgpmdW5jIEFzKGVyciBlcnJvciwgdGFyZ2V0IGFueSkgYm9vbAogICAgQXMgZmluZHMgdGhlIGZpcnN0IGVycm9yIGluIGVycidzIHRyZWUgdGhhdCBtYXRjaGVzIHRhcmdldCwgYW5kIGlmIG9uZQogICAgaXMgZm91bmQsIHNldHMgdGFyZ2V0IHRvIHRoYXQgZXJyb3IgdmFsdWUgYW5kIHJldHVybnMgdHJ1ZS4gT3RoZXJ3aXNlLAogICAgaXQgcmV0dXJucyBmYWxzZS4KCiAgICBUaGUgdHJlZSBjb25zaXN0cyBvZiBlcnIgaXRzZWxmLCBmb2xsb3dlZCBieSB0aGUgZXJyb3JzIG9idGFpbmVkIGJ5CiAgICByZXBlYXRlZGx5IGNhbGxpbmcgVW53cmFwLiBXaGVuIGVyciB3cmFwcyBtdWx0aXBsZSBlcnJvcnMsIEFzIGV4YW1pbmVzIGVycgogICAgZm9sbG93ZWQgYnkgYSBkZXB0aC1maXJzdCB0cmF2ZXJzYWwgb2YgaXRzIGNoaWxkcmVuLgoKICAgIEFuIGVycm9yIG1hdGNoZXMgdGFyZ2V0IGlmIHRoZSBlcnJvcidzIGNvbmNyZXRlIHZhbHVlIGlzIGFzc2lnbmFibGUgdG8gdGhlCiAgICB2YWx1ZSBwb2ludGVkIHRvIGJ5IHRhcmdldCwgb3IgaWYgdGhlIGVycm9yIGhhcyBhIG1ldGhvZCBBcyhpbnRlcmZhY2V7fSkKICAgIGJvb2wgc3VjaCB0aGF0IEFzKHRhcmdldCkgcmV0dXJucyB0cnVlLiBJbiB0aGUgbGF0dGVyIGNhc2UsIHRoZSBBcyBtZXRob2QgaXMKICAgIHJlc3BvbnNpYmxlIGZvciBzZXR0aW5nIHRhcmdldC4KCiAgICBBbiBlcnJvciB0eXBlIG1pZ2h0IHByb3ZpZGUgYW4gQXMgbWV0aG9kIHNvIGl0IGNhbiBiZSB0cmVhdGVkIGFzIGlmIGl0IHdlcmUKICAgIGEgZGlmZmVyZW50IGVycm9yIHR5cGUuCgogICAgQXMgcGFuaWNzIGlmIHRhcmdldCBpcyBub3QgYSBub24tbmlsIHBvaW50ZXIgdG8gZWl0aGVyIGEgdHlwZSB0aGF0CiAgICBpbXBsZW1lbnRzIGVycm9yLCBvciB0byBhbnkgaW50ZXJmYWNlIHR5cGUu",
                                            "duration": 2732899041,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.65:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "errors#As",
                                                "href": "https://pkg.go.dev/errors#As",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "errors.As",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/errors#As"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 65,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "Like the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": " ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "strong",
                                      "file": "errors/as_is.md",
                                      "nodes": [
                                        {
                                          "text": "also",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " has a documented, but unpublished, interface, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-66"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-66"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.66",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-66"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", that can be implemented on custom errors.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-66",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/as/errors.go#as-interface"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "type AsError interface {\n\tAs(target any) bool\n}",
                                                "file": "errors/src/as/errors.go",
                                                "lang": "go",
                                                "name": "as-interface",
                                                "start": 15,
                                                "end": 20,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.66:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "AsError",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 66,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "In order for the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": " function to work properly, we need to implement an ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "As",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method on our error types. This method will be called when ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": " is called on our error. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "As",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method should return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "true",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " if the error matches the target, and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "false",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " otherwise. If ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "false",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", we need to call ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": " on our error's underlying error. If ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "true",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", we can return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "true",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " and set the target to the current error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-67",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/as/errors.go#as"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func (e ErrorA) As(target any) bool {\n\tex, ok := target.(*ErrorA)\n\tif !ok {\n\t\t// if the target is not an ErrorA,\n\t\t// pass the underlying error up the chain\n\t\t// by calling errors.As with the underlying error\n\t\t// and the target error\n\t\treturn errors.As(e.err, target)\n\t}\n\n\t// set the target to the current error\n\t(*ex) = e\n\treturn true\n}",
                                                "file": "errors/src/as/errors.go",
                                                "lang": "go",
                                                "name": "as",
                                                "start": 64,
                                                "end": 80,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.67:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Implementing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "AsError",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 67,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "It is important to note that in order to set the target to the current error, we must first dereference the target pointer. This is because the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "As",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method is responsible for setting the target to the current error. If we don't dereference the target pointer, any changes we make would be lost when the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "As",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method returns.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "As we can see from the test we are able to take the wrapped error and extract the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "ErrorA",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " type from the error stack. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "As",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method sets the value of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "act",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " to the error in the stack and we are able to then access the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "ErrorA",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " type directly.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-68",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/as/errors_test.go#test-as"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_As(t *testing.T) {\n\tt.Parallel()\n\n\toriginal := errors.New(\"original error\")\n\twrapped := Wrapper(original)\n\n\tact := ErrorA{}\n\n\tok := errors.As(wrapped, \u0026act)\n\tif !ok {\n\t\tt.Fatalf(\"expected %v to act as %v\", wrapped, act)\n\t}\n\n\tif act.err == nil {\n\t\tt.Fatalf(\"expected non-nil, got nil\")\n\t}\n\n}",
                                                "file": "errors/src/as/errors_test.go",
                                                "lang": "go",
                                                "name": "test-as",
                                                "start": 8,
                                                "end": 28,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "errors",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "errors/src/as",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_As\n=== PAUSE Test_As\n=== CONT  Test_As\n--- PASS: Test_As (0.00s)\nPASS\nok  \tdemo\t1.786s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/as",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfQXMKPT09IFBBVVNFIFRlc3RfQXMKPT09IENPTlQgIFRlc3RfQXMKLS0tIFBBU1M6IFRlc3RfQXMgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkxLjc4NnM=",
                                              "duration": 4617526791,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_As\n=== PAUSE Test_As\n=== CONT  Test_As\n--- PASS: Test_As (0.00s)\nPASS\nok  \tdemo\t1.786s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/as",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfQXMKPT09IFBBVVNFIFRlc3RfQXMKPT09IENPTlQgIFRlc3RfQXMKLS0tIFBBU1M6IFRlc3RfQXMgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkxLjc4NnM=",
                                            "duration": 4617526791,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.68:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Testing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "AsError",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " implementation.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 68,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "errors/as_is.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Is",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "While the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-65"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-65"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.65",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-65"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", is used to check for the type of an error, the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Is",
                                          "href": "https://pkg.go.dev/errors#Is",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Is",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Is"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-69"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-69"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.69",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-69"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", is used to check if an error in the error chain matches a specific error type. This provides a quick ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "true/false",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " check for an error type.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-69",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "errors.Is"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "errors.Is",
                                          "exec": "go doc errors.Is"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc errors.Is\n\npackage errors // import \u0026#34;errors\u0026#34;\n\nfunc Is(err, target error) bool\n    Is reports whether any error in err\u0026#39;s tree matches target.\n\n    The tree consists of err itself, followed by the errors obtained by\n    repeatedly calling Unwrap. When err wraps multiple errors, Is examines err\n    followed by a depth-first traversal of its children.\n\n    An error is considered to match a target if it is equal to that target or if\n    it implements a method Is(error) bool such that Is(target) returns true.\n\n    An error type might provide an Is method so it can be treated as equivalent\n    to an existing error. For example, if MyError defines\n\n        func (m MyError) Is(target error) bool { return target == fs.ErrExist }\n\n    then Is(MyError{}, fs.ErrExist) returns true. See syscall.Errno.Is for an\n    example in the standard library. An Is method should only shallowly compare\n    err and the target and not call Unwrap on either.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "errors.Is"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBlcnJvcnMgLy8gaW1wb3J0ICJlcnJvcnMiCgpmdW5jIElzKGVyciwgdGFyZ2V0IGVycm9yKSBib29sCiAgICBJcyByZXBvcnRzIHdoZXRoZXIgYW55IGVycm9yIGluIGVycidzIHRyZWUgbWF0Y2hlcyB0YXJnZXQuCgogICAgVGhlIHRyZWUgY29uc2lzdHMgb2YgZXJyIGl0c2VsZiwgZm9sbG93ZWQgYnkgdGhlIGVycm9ycyBvYnRhaW5lZCBieQogICAgcmVwZWF0ZWRseSBjYWxsaW5nIFVud3JhcC4gV2hlbiBlcnIgd3JhcHMgbXVsdGlwbGUgZXJyb3JzLCBJcyBleGFtaW5lcyBlcnIKICAgIGZvbGxvd2VkIGJ5IGEgZGVwdGgtZmlyc3QgdHJhdmVyc2FsIG9mIGl0cyBjaGlsZHJlbi4KCiAgICBBbiBlcnJvciBpcyBjb25zaWRlcmVkIHRvIG1hdGNoIGEgdGFyZ2V0IGlmIGl0IGlzIGVxdWFsIHRvIHRoYXQgdGFyZ2V0IG9yIGlmCiAgICBpdCBpbXBsZW1lbnRzIGEgbWV0aG9kIElzKGVycm9yKSBib29sIHN1Y2ggdGhhdCBJcyh0YXJnZXQpIHJldHVybnMgdHJ1ZS4KCiAgICBBbiBlcnJvciB0eXBlIG1pZ2h0IHByb3ZpZGUgYW4gSXMgbWV0aG9kIHNvIGl0IGNhbiBiZSB0cmVhdGVkIGFzIGVxdWl2YWxlbnQKICAgIHRvIGFuIGV4aXN0aW5nIGVycm9yLiBGb3IgZXhhbXBsZSwgaWYgTXlFcnJvciBkZWZpbmVzCgogICAgICAgIGZ1bmMgKG0gTXlFcnJvcikgSXModGFyZ2V0IGVycm9yKSBib29sIHsgcmV0dXJuIHRhcmdldCA9PSBmcy5FcnJFeGlzdCB9CgogICAgdGhlbiBJcyhNeUVycm9ye30sIGZzLkVyckV4aXN0KSByZXR1cm5zIHRydWUuIFNlZSBzeXNjYWxsLkVycm5vLklzIGZvciBhbgogICAgZXhhbXBsZSBpbiB0aGUgc3RhbmRhcmQgbGlicmFyeS4gQW4gSXMgbWV0aG9kIHNob3VsZCBvbmx5IHNoYWxsb3dseSBjb21wYXJlCiAgICBlcnIgYW5kIHRoZSB0YXJnZXQgYW5kIG5vdCBjYWxsIFVud3JhcCBvbiBlaXRoZXIu",
                                              "duration": 2613946209,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc errors.Is\n\npackage errors // import \u0026#34;errors\u0026#34;\n\nfunc Is(err, target error) bool\n    Is reports whether any error in err\u0026#39;s tree matches target.\n\n    The tree consists of err itself, followed by the errors obtained by\n    repeatedly calling Unwrap. When err wraps multiple errors, Is examines err\n    followed by a depth-first traversal of its children.\n\n    An error is considered to match a target if it is equal to that target or if\n    it implements a method Is(error) bool such that Is(target) returns true.\n\n    An error type might provide an Is method so it can be treated as equivalent\n    to an existing error. For example, if MyError defines\n\n        func (m MyError) Is(target error) bool { return target == fs.ErrExist }\n\n    then Is(MyError{}, fs.ErrExist) returns true. See syscall.Errno.Is for an\n    example in the standard library. An Is method should only shallowly compare\n    err and the target and not call Unwrap on either.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "errors.Is"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBlcnJvcnMgLy8gaW1wb3J0ICJlcnJvcnMiCgpmdW5jIElzKGVyciwgdGFyZ2V0IGVycm9yKSBib29sCiAgICBJcyByZXBvcnRzIHdoZXRoZXIgYW55IGVycm9yIGluIGVycidzIHRyZWUgbWF0Y2hlcyB0YXJnZXQuCgogICAgVGhlIHRyZWUgY29uc2lzdHMgb2YgZXJyIGl0c2VsZiwgZm9sbG93ZWQgYnkgdGhlIGVycm9ycyBvYnRhaW5lZCBieQogICAgcmVwZWF0ZWRseSBjYWxsaW5nIFVud3JhcC4gV2hlbiBlcnIgd3JhcHMgbXVsdGlwbGUgZXJyb3JzLCBJcyBleGFtaW5lcyBlcnIKICAgIGZvbGxvd2VkIGJ5IGEgZGVwdGgtZmlyc3QgdHJhdmVyc2FsIG9mIGl0cyBjaGlsZHJlbi4KCiAgICBBbiBlcnJvciBpcyBjb25zaWRlcmVkIHRvIG1hdGNoIGEgdGFyZ2V0IGlmIGl0IGlzIGVxdWFsIHRvIHRoYXQgdGFyZ2V0IG9yIGlmCiAgICBpdCBpbXBsZW1lbnRzIGEgbWV0aG9kIElzKGVycm9yKSBib29sIHN1Y2ggdGhhdCBJcyh0YXJnZXQpIHJldHVybnMgdHJ1ZS4KCiAgICBBbiBlcnJvciB0eXBlIG1pZ2h0IHByb3ZpZGUgYW4gSXMgbWV0aG9kIHNvIGl0IGNhbiBiZSB0cmVhdGVkIGFzIGVxdWl2YWxlbnQKICAgIHRvIGFuIGV4aXN0aW5nIGVycm9yLiBGb3IgZXhhbXBsZSwgaWYgTXlFcnJvciBkZWZpbmVzCgogICAgICAgIGZ1bmMgKG0gTXlFcnJvcikgSXModGFyZ2V0IGVycm9yKSBib29sIHsgcmV0dXJuIHRhcmdldCA9PSBmcy5FcnJFeGlzdCB9CgogICAgdGhlbiBJcyhNeUVycm9ye30sIGZzLkVyckV4aXN0KSByZXR1cm5zIHRydWUuIFNlZSBzeXNjYWxsLkVycm5vLklzIGZvciBhbgogICAgZXhhbXBsZSBpbiB0aGUgc3RhbmRhcmQgbGlicmFyeS4gQW4gSXMgbWV0aG9kIHNob3VsZCBvbmx5IHNoYWxsb3dseSBjb21wYXJlCiAgICBlcnIgYW5kIHRoZSB0YXJnZXQgYW5kIG5vdCBjYWxsIFVud3JhcCBvbiBlaXRoZXIu",
                                            "duration": 2613946209,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.69:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "errors#Is",
                                                "href": "https://pkg.go.dev/errors#Is",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "errors.Is",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/errors#Is"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 69,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Is",
                                          "href": "https://pkg.go.dev/errors#Is",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Is",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Is"
                                      }
                                    ],
                                    {
                                      "text": " documentation, like ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Unwrap",
                                          "href": "https://pkg.go.dev/errors#Unwrap",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Unwrap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Unwrap"
                                      }
                                    ],
                                    {
                                      "text": ", has a documented, but unpublished, interface. This interface is defined in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-70"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-70"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.70",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-70"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-70",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/is/errors.go#is-interface"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "type IsError interface {\n\tIs(target error) bool\n}",
                                                "file": "errors/src/is/errors.go",
                                                "lang": "go",
                                                "name": "is-interface",
                                                "start": 22,
                                                "end": 27,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.70:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "IsError",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 70,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "Like with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#As",
                                          "href": "https://pkg.go.dev/errors#As",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.As",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#As"
                                      }
                                    ],
                                    {
                                      "text": " we have to implement the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "Is",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method for our custom error types, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-71"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-71"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.71",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-71"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". If our error types is the same type as the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "target",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " error then we can return ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "true",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". If the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "target",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " error is not a much we then need to call ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "errors#Is",
                                          "href": "https://pkg.go.dev/errors#Is",
                                          "target": "_blank"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/as_is.md",
                                            "nodes": [
                                              {
                                                "text": "errors.Is",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/errors#Is"
                                      }
                                    ],
                                    {
                                      "text": " with our underlying error and the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "target",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " error so that error can be checked as well.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-71",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/is/errors.go#is"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func (e ErrorA) Is(target error) bool {\n\tif _, ok := target.(ErrorA); ok {\n\t\t// return true if target is ErrorA\n\t\treturn true\n\t}\n\n\t// if not, pass the underlying error up the chain\n\t// by calling errors.Is with the underlying error\n\t// and the target error\n\treturn errors.Is(e.err, target)\n}",
                                                "file": "errors/src/is/errors.go",
                                                "lang": "go",
                                                "name": "is",
                                                "start": 49,
                                                "end": 62,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.71:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Implementing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "IsError",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " interface.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 71,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "Finally, in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-72"
                                        },
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-72"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.72",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-72"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we can write a test to assert that our ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "errors/as_is.md",
                                        "nodes": [
                                          {
                                            "text": "Is",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " method works as expected.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-72",
                                    "type": "listing"
                                  },
                                  "file": "errors/as_is.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/is/errors_test.go#test-is"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func Test_Is(t *testing.T) {\n\tt.Parallel()\n\n\toriginal := errors.New(\"original error\")\n\twrapped := Wrapper(original)\n\n\texp := ErrorB{}\n\n\tok := errors.Is(wrapped, exp)\n\tif !ok {\n\t\tt.Fatalf(\"expected %v to be %v\", wrapped, exp)\n\t}\n\n}",
                                                "file": "errors/src/is/errors_test.go",
                                                "lang": "go",
                                                "name": "test-is",
                                                "start": 8,
                                                "end": 24,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "test",
                                          "-v"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go test -v",
                                          "src": "errors/src/is",
                                          "test": "-v"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go test -v\n\n=== RUN   Test_Is\n=== PAUSE Test_Is\n=== CONT  Test_Is\n--- PASS: Test_Is (0.00s)\nPASS\nok  \tdemo\t1.159s",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "test",
                                                "-v"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/is",
                                              "stdout": "PT09IFJVTiAgIFRlc3RfSXMKPT09IFBBVVNFIFRlc3RfSXMKPT09IENPTlQgIFRlc3RfSXMKLS0tIFBBU1M6IFRlc3RfSXMgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkxLjE1OXM=",
                                              "duration": 3870325792,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go test -v\n\n=== RUN   Test_Is\n=== PAUSE Test_Is\n=== CONT  Test_Is\n--- PASS: Test_Is (0.00s)\nPASS\nok  \tdemo\t1.159s",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "test",
                                              "-v"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/is",
                                            "stdout": "PT09IFJVTiAgIFRlc3RfSXMKPT09IFBBVVNFIFRlc3RfSXMKPT09IENPTlQgIFRlc3RfSXMKLS0tIFBBU1M6IFRlc3RfSXMgKDAuMDBzKQpQQVNTCm9rICAJZGVtbwkxLjE1OXM=",
                                            "duration": 3870325792,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.72:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Testing the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "errors",
                                              "nodes": [
                                                {
                                                  "text": "IsError",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " implementation.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 72,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Errors As/Is",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "errors/summary.md"
                      },
                      "dir": "errors",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "errors/summary.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "errors/summary.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Stack Traces",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/summary.md",
                                  "nodes": [
                                    {
                                      "text": "Using a stack trace to debug your code can be very helpful at times. A stack trace shows where you are at in the code, and how you got there by printing a list of all calling functions.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/summary.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "runtime/debug",
                                          "href": "https://pkg.go.dev/runtime/debug",
                                          "target": "_blank"
                                        },
                                        "file": "errors/summary.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/summary.md",
                                            "nodes": [
                                              {
                                                "text": "runtime/debug",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/runtime/debug"
                                      }
                                    ],
                                    {
                                      "text": " package provides a couple of functions that can be use to get, or print, a stack trace. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "runtime/debug#Stack",
                                          "href": "https://pkg.go.dev/runtime/debug#Stack",
                                          "target": "_blank"
                                        },
                                        "file": "errors/summary.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/summary.md",
                                            "nodes": [
                                              {
                                                "text": "debug.Stack",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/runtime/debug#Stack"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-73"
                                        },
                                        "file": "errors/summary.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-73"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.73",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-73"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", will return a slice of bytes that represent the stack trace.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-73",
                                    "type": "listing"
                                  },
                                  "file": "errors/summary.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "runtime/debug.Stack"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "runtime/debug.Stack",
                                          "exec": "go doc runtime/debug.Stack"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc runtime/debug.Stack\n\npackage debug // import \u0026#34;runtime/debug\u0026#34;\n\nfunc Stack() []byte\n    Stack returns a formatted stack trace of the goroutine that calls it. It\n    calls runtime.Stack with a large enough buffer to capture the entire trace.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "runtime/debug.Stack"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBkZWJ1ZyAvLyBpbXBvcnQgInJ1bnRpbWUvZGVidWciCgpmdW5jIFN0YWNrKCkgW11ieXRlCiAgICBTdGFjayByZXR1cm5zIGEgZm9ybWF0dGVkIHN0YWNrIHRyYWNlIG9mIHRoZSBnb3JvdXRpbmUgdGhhdCBjYWxscyBpdC4gSXQKICAgIGNhbGxzIHJ1bnRpbWUuU3RhY2sgd2l0aCBhIGxhcmdlIGVub3VnaCBidWZmZXIgdG8gY2FwdHVyZSB0aGUgZW50aXJlIHRyYWNlLg==",
                                              "duration": 2731607000,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc runtime/debug.Stack\n\npackage debug // import \u0026#34;runtime/debug\u0026#34;\n\nfunc Stack() []byte\n    Stack returns a formatted stack trace of the goroutine that calls it. It\n    calls runtime.Stack with a large enough buffer to capture the entire trace.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "runtime/debug.Stack"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBkZWJ1ZyAvLyBpbXBvcnQgInJ1bnRpbWUvZGVidWciCgpmdW5jIFN0YWNrKCkgW11ieXRlCiAgICBTdGFjayByZXR1cm5zIGEgZm9ybWF0dGVkIHN0YWNrIHRyYWNlIG9mIHRoZSBnb3JvdXRpbmUgdGhhdCBjYWxscyBpdC4gSXQKICAgIGNhbGxzIHJ1bnRpbWUuU3RhY2sgd2l0aCBhIGxhcmdlIGVub3VnaCBidWZmZXIgdG8gY2FwdHVyZSB0aGUgZW50aXJlIHRyYWNlLg==",
                                            "duration": 2731607000,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.73:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "runtime/debug#Stack",
                                                "href": "https://pkg.go.dev/runtime/debug#Stack",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "debug.Stack",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/runtime/debug#Stack"
                                            }
                                          ],
                                          {
                                            "text": " function",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 73,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/summary.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "runtime/debug#PrintStack",
                                          "href": "https://pkg.go.dev/runtime/debug#PrintStack",
                                          "target": "_blank"
                                        },
                                        "file": "errors/summary.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/summary.md",
                                            "nodes": [
                                              {
                                                "text": "debug.PrintStack",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/runtime/debug#PrintStack"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-74"
                                        },
                                        "file": "errors/summary.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-74"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.74",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-74"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", will print the stack trace to the standard output.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-74",
                                    "type": "listing"
                                  },
                                  "file": "errors/summary.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "runtime/debug.PrintStack"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "runtime/debug.PrintStack",
                                          "exec": "go doc runtime/debug.PrintStack"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc runtime/debug.PrintStack\n\npackage debug // import \u0026#34;runtime/debug\u0026#34;\n\nfunc PrintStack()\n    PrintStack prints to standard error the stack trace returned by\n    runtime.Stack.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "runtime/debug.PrintStack"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBkZWJ1ZyAvLyBpbXBvcnQgInJ1bnRpbWUvZGVidWciCgpmdW5jIFByaW50U3RhY2soKQogICAgUHJpbnRTdGFjayBwcmludHMgdG8gc3RhbmRhcmQgZXJyb3IgdGhlIHN0YWNrIHRyYWNlIHJldHVybmVkIGJ5CiAgICBydW50aW1lLlN0YWNrLg==",
                                              "duration": 2489650000,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc runtime/debug.PrintStack\n\npackage debug // import \u0026#34;runtime/debug\u0026#34;\n\nfunc PrintStack()\n    PrintStack prints to standard error the stack trace returned by\n    runtime.Stack.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "runtime/debug.PrintStack"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBkZWJ1ZyAvLyBpbXBvcnQgInJ1bnRpbWUvZGVidWciCgpmdW5jIFByaW50U3RhY2soKQogICAgUHJpbnRTdGFjayBwcmludHMgdG8gc3RhbmRhcmQgZXJyb3IgdGhlIHN0YWNrIHRyYWNlIHJldHVybmVkIGJ5CiAgICBydW50aW1lLlN0YWNrLg==",
                                            "duration": 2489650000,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.74:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "runtime/debug#PrintStack",
                                                "href": "https://pkg.go.dev/runtime/debug#PrintStack",
                                                "target": "_blank"
                                              },
                                              "file": "errors",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "errors",
                                                    "nodes": [
                                                      {
                                                        "text": "debug.PrintStack",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/runtime/debug#PrintStack"
                                            }
                                          ],
                                          {
                                            "text": " function",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 74,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "errors/summary.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-75"
                                        },
                                        "file": "errors/summary.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-75"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.75",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-75"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we print the stack trace of a program to standard output, using ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "runtime/debug#PrintStack",
                                          "href": "https://pkg.go.dev/runtime/debug#PrintStack",
                                          "target": "_blank"
                                        },
                                        "file": "errors/summary.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "errors/summary.md",
                                            "nodes": [
                                              {
                                                "text": "debug.PrintStack",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/runtime/debug#PrintStack"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-75",
                                    "type": "listing"
                                  },
                                  "file": "errors/summary.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "errors",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "errors/src/stack/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "text": "package main\n\nimport \u0026#34;runtime/debug\u0026#34;\n\nfunc main() {\n\tFirst()\n}\n\nfunc First() {\n\tSecond()\n}\n\nfunc Second() {\n\tThird()\n}\n\nfunc Third() {\n\tdebug.PrintStack()\n}\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "errors",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "errors/src/stack"
                                        },
                                        "expected_exit": 0,
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\ngoroutine 1 [running]:\nruntime/debug.Stack()\n\t/usr/local/go/src/runtime/debug/stack.go:24 +0x64\nruntime/debug.PrintStack()\n\t/usr/local/go/src/runtime/debug/stack.go:16 +0x1c\nmain.Third(...)\n\t./main.go:18\nmain.Second(...)\n\t./main.go:14\nmain.First(...)\n\t./main.go:10\nmain.main()\n\t./main.go:6 +0x28",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/stack",
                                              "stderr": "Z29yb3V0aW5lIDEgW3J1bm5pbmddOgpydW50aW1lL2RlYnVnLlN0YWNrKCkKCS91c3IvbG9jYWwvZ28vc3JjL3J1bnRpbWUvZGVidWcvc3RhY2suZ286MjQgKzB4NjQKcnVudGltZS9kZWJ1Zy5QcmludFN0YWNrKCkKCS91c3IvbG9jYWwvZ28vc3JjL3J1bnRpbWUvZGVidWcvc3RhY2suZ286MTYgKzB4MWMKbWFpbi5UaGlyZCguLi4pCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL2Vycm9ycy9zcmMvc3RhY2svbWFpbi5nbzoxOAptYWluLlNlY29uZCguLi4pCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL2Vycm9ycy9zcmMvc3RhY2svbWFpbi5nbzoxNAptYWluLkZpcnN0KC4uLikKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvZXJyb3JzL3NyYy9zdGFjay9tYWluLmdvOjEwCm1haW4ubWFpbigpCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL2Vycm9ycy9zcmMvc3RhY2svbWFpbi5nbzo2ICsweDI4",
                                              "duration": 3129546334,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\ngoroutine 1 [running]:\nruntime/debug.Stack()\n\t/usr/local/go/src/runtime/debug/stack.go:24 +0x64\nruntime/debug.PrintStack()\n\t/usr/local/go/src/runtime/debug/stack.go:16 +0x1c\nmain.Third(...)\n\t./main.go:18\nmain.Second(...)\n\t./main.go:14\nmain.First(...)\n\t./main.go:10\nmain.main()\n\t./main.go:6 +0x28",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors/errors/src/stack",
                                            "stderr": "Z29yb3V0aW5lIDEgW3J1bm5pbmddOgpydW50aW1lL2RlYnVnLlN0YWNrKCkKCS91c3IvbG9jYWwvZ28vc3JjL3J1bnRpbWUvZGVidWcvc3RhY2suZ286MjQgKzB4NjQKcnVudGltZS9kZWJ1Zy5QcmludFN0YWNrKCkKCS91c3IvbG9jYWwvZ28vc3JjL3J1bnRpbWUvZGVidWcvc3RhY2suZ286MTYgKzB4MWMKbWFpbi5UaGlyZCguLi4pCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL2Vycm9ycy9zcmMvc3RhY2svbWFpbi5nbzoxOAptYWluLlNlY29uZCguLi4pCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL2Vycm9ycy9zcmMvc3RhY2svbWFpbi5nbzoxNAptYWluLkZpcnN0KC4uLikKCS9Vc2Vycy9tYXJrYmF0ZXMvTGlicmFyeS9DbG91ZFN0b3JhZ2UvRHJvcGJveC9kZXYvZ3VpZGVzL2NvbnRlbnQvYm9vay9jaGFwdGVycy8wOS1lcnJvcnMvZXJyb3JzL3NyYy9zdGFjay9tYWluLmdvOjEwCm1haW4ubWFpbigpCgkvVXNlcnMvbWFya2JhdGVzL0xpYnJhcnkvQ2xvdWRTdG9yYWdlL0Ryb3Bib3gvZGV2L2d1aWRlcy9jb250ZW50L2Jvb2svY2hhcHRlcnMvMDktZXJyb3JzL2Vycm9ycy9zcmMvc3RhY2svbWFpbi5nbzo2ICsweDI4",
                                            "duration": 3129546334,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "errors",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.75:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Printing a stack trace.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 75,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Stack Traces",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "page",
                      "file": "module.md",
                      "nodes": [
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "h1",
                            "file": "module.md",
                            "level": 1,
                            "nodes": [
                              {
                                "text": "Summary",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "hype.Heading"
                          }
                        ],
                        {
                          "text": "\n\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "p",
                            "file": "module.md",
                            "nodes": [
                              {
                                "text": "In this ",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "binding",
                                "attributes": {
                                  "part": ""
                                },
                                "file": "module.md",
                                "type": "*hype.Element"
                              },
                              {
                                "text": " we discussed Go's error handling in depth. We covered error handling, and creation, in our code. We learned how to create custom implementations of ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "builtin#error",
                                    "href": "https://pkg.go.dev/builtin#error",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "error",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/builtin#error"
                                }
                              ],
                              {
                                "text": " interface. Next, we saw how a panic can crash an application, and we discussed various ways to recover from panics. We saw that we can use ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "errors#Unwrap",
                                    "href": "https://pkg.go.dev/errors#Unwrap",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "errors.Unwrap",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/errors#Unwrap"
                                }
                              ],
                              {
                                "text": " to try and get the original error from a wrapped error. We also saw how to use ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "errors#As",
                                    "href": "https://pkg.go.dev/errors#As",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "errors.As",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/errors#As"
                                }
                              ],
                              {
                                "text": " to try assert an error has a certain type in its chain, and if so, it binds the error to a variable to be used in the rest of the function. Finally, we saw how to use ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "errors#Is",
                                    "href": "https://pkg.go.dev/errors#Is",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "errors.Is",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/errors#Is"
                                }
                              ],
                              {
                                "text": " to check if an error in the chain is of a certain type.",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Paragraph"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "title": "Summary",
                      "type": "*hype.Page"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  }
                ],
                "type": "*hype.Body"
              }
            ]
          ],
          "type": "*hype.Element"
        }
      ],
      "type": "*hype.Element"
    }
  ],
  "parser": {
    "type": "*hype.Parser",
    "root": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors",
    "section": 1,
    "snippets": {}
  },
  "root": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/09-errors",
  "section_id": 1,
  "snippets": {},
  "title": "Errors",
  "type": "*hype.Document"
}
