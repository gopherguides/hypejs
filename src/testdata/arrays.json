{
  "nodes": [
    {
      "file": "module.md",
      "nodes": [
        {
          "atom": "html",
          "file": "module.md",
          "nodes": [
            {
              "atom": "head",
              "file": "module.md",
              "type": "*hype.Element"
            },
            [
              {
                "atom": "body",
                "file": "module.md",
                "nodes": [
                  [
                    {
                      "atom": "page",
                      "file": "module.md",
                      "nodes": [
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "h1",
                            "file": "module.md",
                            "level": 1,
                            "nodes": [
                              {
                                "text": "Arrays, Slices, and Iteration",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "hype.Heading"
                          }
                        ],
                        {
                          "text": "\n\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "p",
                            "file": "module.md",
                            "nodes": [
                              {
                                "text": "In this ",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "binding",
                                "attributes": {
                                  "part": ""
                                },
                                "file": "module.md",
                                "type": "*hype.Element"
                              },
                              {
                                "text": " we cover the built-in list types, ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "code",
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "text": "arrays",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.InlineCode"
                                }
                              ],
                              {
                                "text": " and ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "code",
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "text": "slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.InlineCode"
                                }
                              ],
                              {
                                "text": ". Next, we move on to learning about Go's ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "code",
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "text": "for",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.InlineCode"
                                }
                              ],
                              {
                                "text": " keyword for iteration. Finally, we cover using the ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "code",
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "text": "range",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.InlineCode"
                                }
                              ],
                              {
                                "text": " keyword to simplify iteration.",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Paragraph"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "title": "Arrays, Slices, and Iteration",
                      "type": "*hype.Page"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "arrays_slices/arrays_slices.md"
                      },
                      "dir": "arrays_slices",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "arrays_slices.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "arrays_slices.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "List Types: Arrays and Slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Go has on two built-in, ordered, list collection types; arrays and slices. Unlike other languages there are no built-in, complex, list types such as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "href": "https://en.wikipedia.org/wiki/Linked_list",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "linked lists",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://en.wikipedia.org/wiki/Linked_list"
                                      }
                                    ],
                                    {
                                      "text": " or ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "href": "https://en.wikipedia.org/wiki/Tree_%28data_structure%29",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "trees",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://en.wikipedia.org/wiki/Tree_%28data_structure%29"
                                      }
                                    ],
                                    {
                                      "text": ". Instead, Go uses the concept of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "href": "https://en.wikipedia.org/wiki/Object_composition",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "composition",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://en.wikipedia.org/wiki/Object_composition"
                                      }
                                    ],
                                    {
                                      "text": " to allow for the creation of more complex data structures, an example of which can be found with the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "container/list#List",
                                          "href": "https://pkg.go.dev/container/list#List",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "list.List",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/container/list#List"
                                      }
                                    ],
                                    {
                                      "text": " type. We will cover composition in more detail later in this ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "binding",
                                      "attributes": {
                                        "whole": ""
                                      },
                                      "file": "arrays_slices.md",
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Arrays and slices are both ordered collections of values. The only difference between them is that arrays are fixed in size, while slices are not.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Arrays in Go are useful when planning for detailed layout of memory. Using arrays can sometimes help avoid allocation when you know exactly how much data you want to store. Arrays are also used as the building blocks of slices.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Slices wrap arrays in Go, and provide a more general, powerful, and convenient way to work with ordered collections of values.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Differences Between Arrays and Slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Arrays and slices are both ordered collections of values. Both require that the values all be of the same type. Arrays, however, have a fixed length, while slices can grow as needed.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-1",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "table",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "thead",
                                              "file": "arrays_slices",
                                              "nodes": [
                                                {
                                                  "text": "\n",
                                                  "type": "hype.Text"
                                                },
                                                [
                                                  {
                                                    "atom": "tr",
                                                    "file": "arrays_slices",
                                                    "nodes": [
                                                      {
                                                        "text": "\n",
                                                        "type": "hype.Text"
                                                      },
                                                      [
                                                        {
                                                          "atom": "th",
                                                          "file": "arrays_slices",
                                                          "type": "*hype.TH"
                                                        }
                                                      ],
                                                      {
                                                        "text": "\n",
                                                        "type": "hype.Text"
                                                      },
                                                      [
                                                        {
                                                          "atom": "th",
                                                          "file": "arrays_slices",
                                                          "nodes": [
                                                            {
                                                              "text": "Arrays",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.TH"
                                                        }
                                                      ],
                                                      {
                                                        "text": "\n",
                                                        "type": "hype.Text"
                                                      },
                                                      [
                                                        {
                                                          "atom": "th",
                                                          "file": "arrays_slices",
                                                          "nodes": [
                                                            {
                                                              "text": "Slices",
                                                              "type": "hype.Text"
                                                            }
                                                          ],
                                                          "type": "*hype.TH"
                                                        }
                                                      ],
                                                      {
                                                        "text": "\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.TR"
                                                  }
                                                ],
                                                {
                                                  "text": "\n",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.THead"
                                            }
                                          ],
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "atom": "tbody",
                                            "file": "arrays_slices",
                                            "nodes": [
                                              {
                                                "text": "\n",
                                                "type": "hype.Text"
                                              },
                                              [
                                                {
                                                  "atom": "tr",
                                                  "file": "arrays_slices",
                                                  "nodes": [
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "Fixed Length",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "X",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "-",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.TR"
                                                }
                                              ],
                                              {
                                                "text": "\n\n",
                                                "type": "hype.Text"
                                              },
                                              [
                                                {
                                                  "atom": "tr",
                                                  "file": "arrays_slices",
                                                  "nodes": [
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "Fixed Type",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "X",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "X",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.TR"
                                                }
                                              ],
                                              {
                                                "text": "\n\n",
                                                "type": "hype.Text"
                                              },
                                              [
                                                {
                                                  "atom": "tr",
                                                  "file": "arrays_slices",
                                                  "nodes": [
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "Zero Based",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "X",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    },
                                                    [
                                                      {
                                                        "atom": "td",
                                                        "file": "arrays_slices",
                                                        "nodes": [
                                                          {
                                                            "text": "X",
                                                            "type": "hype.Text"
                                                          }
                                                        ],
                                                        "type": "*hype.TD"
                                                      }
                                                    ],
                                                    {
                                                      "text": "\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.TR"
                                                }
                                              ],
                                              {
                                                "text": "\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Table"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.1:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Differences between arrays and slices",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 1,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "The capacity of an array is defined at creation time. Once an array has allocated it's size, the size can no longer be changed. All of the memory needed to store the array is allocated at creation time. This means that the array is a fixed size, and once created, it cannot be resized. The array will be garbage collected once it's no longer in use.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-2",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "arrays_slices/src/array/main.go#main"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\tfmt.Println(names)\n}",
                                                "file": "arrays_slices/src/array/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 5,
                                                "end": 11,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/array"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[Kurt Janis Jimi Amy]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/array",
                                              "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXld",
                                              "duration": 1181170208,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[Kurt Janis Jimi Amy]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/array",
                                            "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXld",
                                            "duration": 1181170208,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.2:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "An array of four strings.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 2,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-2"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-2"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.2",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-2"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we created an array of four strings. The array is allocated at creation time, and once created, it cannot be resized.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Arrays are very useful when you know exactly how much data you will need to store. Often, though, you will not know the size you will need at creation time, in this case, you will need to use slices.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Slices are a more flexible and flexible way to store data. They are not fixed in size, and can grow as needed. Because of their flexibility, slices are more often used in daily situations instead of arrays.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-3",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "arrays_slices/src/slice/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := []string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\tfmt.Println(names)\n}",
                                                "file": "arrays_slices/src/slice/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 11,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/slice"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[Kurt Janis Jimi Amy]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/slice",
                                              "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXld",
                                              "duration": 2616416375,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[Kurt Janis Jimi Amy]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/slice",
                                            "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXld",
                                            "duration": 2616416375,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.3:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A slice of four strings.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 3,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-3"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-3"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.3",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-3"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we created a slice of four strings. The slice is not allocated at creation time, and can grow as needed.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Spot the Difference",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Once created, arrays and slices, behave nearly identically. The only place to see the difference is in the way they are created.  Arrays require that you specify the size of the array at creation time. Slices do not require that you specify the size of the array at creation time.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-4",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "arrays_slices/src/diff/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnamesArray := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\tnamesSlice := []string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\tfmt.Println(namesArray)\n\tfmt.Println(namesSlice)\n}",
                                                "file": "arrays_slices/src/diff/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 14,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/diff"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[Kurt Janis Jimi Amy]\n[Kurt Janis Jimi Amy]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/diff",
                                              "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXldCltLdXJ0IEphbmlzIEppbWkgQW15XQ==",
                                              "duration": 3467705250,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[Kurt Janis Jimi Amy]\n[Kurt Janis Jimi Amy]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/diff",
                                            "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXldCltLdXJ0IEphbmlzIEppbWkgQW15XQ==",
                                            "duration": 3467705250,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.4:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Creating an array versus a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 4,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-4"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-4"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.4",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-4"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "namesArray",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " variable is an array of four strings. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "namesSlice",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " variable is a slice that currently has four strings.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Initializing Arrays and Slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "With simple data types, such as strings, numbers, and booleans, no special initialization is needed to use them. With more complex data types, values may need to be initialized before they can be used. At this initialization time, you have the option of filling the type with values, or leaving the type empty.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "When initializing a type, you must use a pair of curly braces to indicate that the type is being initialized; ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "\u003ctype\u003e{\u003coptional: values\u003e}",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Arrays and slices don't need to be initialized before they are used. As with strings and numbers, they can be used without being initialized. However, initializing an array or slice gives you the ability to fill the array or slice with values immediately.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-5",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "arrays_slices/src/inline/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// initialize array without values:\n\ta := [5]int{}\n\n\t// initialize slice without values:\n\tb := []int{}\n\n\t// initialize array with values:\n\tc := [3]int{1, 2, 3}\n\n\t// initialize slice with values:\n\td := []int{1, 2, 3}\n\n\t// declare an array variable:\n\tvar e [5]int\n\n\t// declare slice variable:\n\tvar f []int\n\n\tfmt.Println(a)\n\tfmt.Println(b)\n\tfmt.Println(c)\n\tfmt.Println(d)\n\tfmt.Println(e)\n\tfmt.Println(f)\n}",
                                                "file": "arrays_slices/src/inline/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 33,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/inline"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[0 0 0 0 0]\n[]\n[1 2 3]\n[1 2 3]\n[0 0 0 0 0]\n[]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/inline",
                                              "stdout": "WzAgMCAwIDAgMF0KW10KWzEgMiAzXQpbMSAyIDNdClswIDAgMCAwIDBdCltd",
                                              "duration": 4246396417,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[0 0 0 0 0]\n[]\n[1 2 3]\n[1 2 3]\n[0 0 0 0 0]\n[]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/inline",
                                            "stdout": "WzAgMCAwIDAgMF0KW10KWzEgMiAzXQpbMSAyIDNdClswIDAgMCAwIDBdCltd",
                                            "duration": 4246396417,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.5:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Initializing arrays and slices.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 5,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Array and Slice Zero Values",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "The zero value of each element in an array or slice is the zero value for the type of elements in the array or slice. For example, if an array of strings is created, each element in the array will be a string with a zero value of ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "\"\"",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-6",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "main",
                                              "src": "arrays_slices/src/zero/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tvar a [5]int\n\tvar b [4]string\n\tvar c [3]bool\n\n\tfmt.Printf(\"%#v\\n\", a)\n\tfmt.Printf(\"%#v\\n\", b)\n\tfmt.Printf(\"%#v\\n\", c)\n}",
                                                "file": "arrays_slices/src/zero/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 5,
                                                "end": 16,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/zero"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[5]int{0, 0, 0, 0, 0}\n[4]string{\u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;}\n[3]bool{false, false, false}",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/zero",
                                              "stdout": "WzVdaW50ezAsIDAsIDAsIDAsIDB9Cls0XXN0cmluZ3siIiwgIiIsICIiLCAiIn0KWzNdYm9vbHtmYWxzZSwgZmFsc2UsIGZhbHNlfQ==",
                                              "duration": 465934583,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[5]int{0, 0, 0, 0, 0}\n[4]string{\u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;}\n[3]bool{false, false, false}",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/zero",
                                            "stdout": "WzVdaW50ezAsIDAsIDAsIDAsIDB9Cls0XXN0cmluZ3siIiwgIiIsICIiLCAiIn0KWzNdYm9vbHtmYWxzZSwgZmFsc2UsIGZhbHNlfQ==",
                                            "duration": 465934583,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.6:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Array and slice zero values.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 6,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-6"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-6"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.6",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-6"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we printed the several different arrays using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "%#v",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " formatting verb. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "%#v",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " verb prints the Go-syntax representation of the value. For an array, this shows the type, the length, and the values, which in this case are all zero values.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Indexing Arrays and Slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "When attempting to access an array with a hard-coded index, the Go compiler will check to see if the index is out of bounds. If the index being accessed is out of bounds, the compiler will error, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-7"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-7"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.7",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-7"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-7",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "arrays_slices/src/out-of-bounds/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\tfmt.Println(names[5])\n}",
                                                "file": "arrays_slices/src/out-of-bounds/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 11,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "build",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "build": ".",
                                          "data-go-version": "go1.21.5",
                                          "exec": "go build .",
                                          "exit": "-1",
                                          "src": "arrays_slices/src/out-of-bounds"
                                        },
                                        "expected_exit": -1,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go build .\n\n# demo\n./main.go:8:20: invalid argument: index 5 out of bounds [0:4]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "build",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/out-of-bounds",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "IyBkZW1vCi4vbWFpbi5nbzo4OjIwOiBpbnZhbGlkIGFyZ3VtZW50OiBpbmRleCA1IG91dCBvZiBib3VuZHMgWzA6NF0=",
                                              "duration": 2377326458,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go build .\n\n# demo\n./main.go:8:20: invalid argument: index 5 out of bounds [0:4]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "build",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/out-of-bounds",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "IyBkZW1vCi4vbWFpbi5nbzo4OjIwOiBpbnZhbGlkIGFyZ3VtZW50OiBpbmRleCA1IG91dCBvZiBib3VuZHMgWzA6NF0=",
                                            "duration": 2377326458,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.7:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Indexing an array out of bounds.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 7,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "If, however, the index is a variable, or the type is a slice instead of an array, the compiler will not check for out-of-bounds errors. Instead, the Go runtime will raise a panic and possibly crash the program, as we see in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-8"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-8"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.8",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-8"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-8",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "arrays_slices/src/out-of-bounds-rt/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\ti := 5\n\tfmt.Println(names[i])\n}",
                                                "file": "arrays_slices/src/out-of-bounds-rt/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 13,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "arrays_slices/src/out-of-bounds-rt"
                                        },
                                        "expected_exit": -1,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\npanic: runtime error: index out of range [5] with length 4\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:10 +0x24\nexit status 2",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/out-of-bounds-rt",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IG91dCBvZiByYW5nZSBbNV0gd2l0aCBsZW5ndGggNAoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzAzLWNvbGxlY3Rpb25zL2FycmF5c19zbGljZXMvc3JjL291dC1vZi1ib3VuZHMtcnQvbWFpbi5nbzoxMCArMHgyNApleGl0IHN0YXR1cyAy",
                                              "duration": 3846997375,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\npanic: runtime error: index out of range [5] with length 4\n\ngoroutine 1 [running]:\nmain.main()\n\t./main.go:10 +0x24\nexit status 2",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/out-of-bounds-rt",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "cGFuaWM6IHJ1bnRpbWUgZXJyb3I6IGluZGV4IG91dCBvZiByYW5nZSBbNV0gd2l0aCBsZW5ndGggNAoKZ29yb3V0aW5lIDEgW3J1bm5pbmddOgptYWluLm1haW4oKQoJL1VzZXJzL21hcmtiYXRlcy9MaWJyYXJ5L0Nsb3VkU3RvcmFnZS9Ecm9wYm94L2Rldi9ndWlkZXMvY29udGVudC9ib29rL2NoYXB0ZXJzLzAzLWNvbGxlY3Rpb25zL2FycmF5c19zbGljZXMvc3JjL291dC1vZi1ib3VuZHMtcnQvbWFpbi5nbzoxMCArMHgyNApleGl0IHN0YXR1cyAy",
                                            "duration": 3846997375,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.8:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Indexing an array out of bounds with a variable.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 8,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "We will discuss panicking later in this ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "binding",
                                      "attributes": {
                                        "whole": ""
                                      },
                                      "file": "arrays_slices.md",
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " when we discuss errors, however, it is worth understanding that a panic ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "strong",
                                      "file": "arrays_slices.md",
                                      "nodes": [
                                        {
                                          "text": "will",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " crash your application if not careful.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Array and Slice Types",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "It's important to remember that arrays and slices can only hold values of the type they were declared to hold. For example, if you declare an array of strings, you can only store strings in the array. Attempting a different type will result in a either a compile-time error, or a runtime panic.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-9",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "main",
                                              "src": "arrays_slices/src/types/type/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tstrings := [4]string{\"one\", \"two\", \"three\", \"four\"}\n\tstrings[0] = 5 // can't put an int in a string array\n\n\tints := []int{1, 2, 3, 4}\n\tints[0] = \"five\" // can't put a string in an int slice\n\n\t// can't mix types during initialization\n\tmixed := []string{\"one\", 2, \"three\", \"four\"}\n}",
                                                "file": "arrays_slices/src/types/type/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 3,
                                                "end": 15,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "arrays_slices/src/types/type"
                                        },
                                        "expected_exit": -1,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n# demo\n./main.go:6:15: cannot use 5 (untyped int constant) as string value in assignment\n./main.go:9:12: cannot use \u0026#34;five\u0026#34; (untyped string constant) as int value in assignment\n./main.go:12:2: mixed declared and not used\n./main.go:12:27: cannot use 2 (untyped int constant) as string value in array or slice literal",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/types/type",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "IyBkZW1vCi4vbWFpbi5nbzo2OjE1OiBjYW5ub3QgdXNlIDUgKHVudHlwZWQgaW50IGNvbnN0YW50KSBhcyBzdHJpbmcgdmFsdWUgaW4gYXNzaWdubWVudAouL21haW4uZ286OToxMjogY2Fubm90IHVzZSAiZml2ZSIgKHVudHlwZWQgc3RyaW5nIGNvbnN0YW50KSBhcyBpbnQgdmFsdWUgaW4gYXNzaWdubWVudAouL21haW4uZ286MTI6MjogbWl4ZWQgZGVjbGFyZWQgYW5kIG5vdCB1c2VkCi4vbWFpbi5nbzoxMjoyNzogY2Fubm90IHVzZSAyICh1bnR5cGVkIGludCBjb25zdGFudCkgYXMgc3RyaW5nIHZhbHVlIGluIGFycmF5IG9yIHNsaWNlIGxpdGVyYWw=",
                                              "duration": 1150702709,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n# demo\n./main.go:6:15: cannot use 5 (untyped int constant) as string value in assignment\n./main.go:9:12: cannot use \u0026#34;five\u0026#34; (untyped string constant) as int value in assignment\n./main.go:12:2: mixed declared and not used\n./main.go:12:27: cannot use 2 (untyped int constant) as string value in array or slice literal",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/types/type",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "IyBkZW1vCi4vbWFpbi5nbzo2OjE1OiBjYW5ub3QgdXNlIDUgKHVudHlwZWQgaW50IGNvbnN0YW50KSBhcyBzdHJpbmcgdmFsdWUgaW4gYXNzaWdubWVudAouL21haW4uZ286OToxMjogY2Fubm90IHVzZSAiZml2ZSIgKHVudHlwZWQgc3RyaW5nIGNvbnN0YW50KSBhcyBpbnQgdmFsdWUgaW4gYXNzaWdubWVudAouL21haW4uZ286MTI6MjogbWl4ZWQgZGVjbGFyZWQgYW5kIG5vdCB1c2VkCi4vbWFpbi5nbzoxMjoyNzogY2Fubm90IHVzZSAyICh1bnR5cGVkIGludCBjb25zdGFudCkgYXMgc3RyaW5nIHZhbHVlIGluIGFycmF5IG9yIHNsaWNlIGxpdGVyYWw=",
                                            "duration": 1150702709,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.9:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Mixing types within an array or slice is not allowed.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 9,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Array and Slice Type Definitions",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "When we have variables that been assigned to arrays and slices, those variables have a type associated with them. This type is called the type definition.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Because arrays are of fixed length the type definition for an array is comprised of both the declared length of the array and the type it will store. For example, in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-10"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-10"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.10",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-10"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", the type for the array, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "[2]string{\"one\", \"two\"}",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "[2]string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-10",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "arrays",
                                              "src": "arrays_slices/src/types/arrays/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\ta1 := [2]string{\"one\", \"two\"} // type: [2]string\n\tvar a2 [2]string              // type: [2]string\n\ta3 := [3]string{}             // type: [3]string\n\n\ta2 = a1\n\n\tfmt.Println(a2)\n\n\t// this can't be done, as it is not of the same type:\n\ta3 = a2\n}",
                                                "file": "arrays_slices/src/types/arrays/main.go",
                                                "lang": "go",
                                                "name": "arrays",
                                                "start": 5,
                                                "end": 19,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "arrays_slices/src/types/arrays"
                                        },
                                        "expected_exit": -1,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n# demo\n./main.go:9:2: a3 declared and not used\n./main.go:16:7: cannot use a2 (variable of type [2]string) as [3]string value in assignment",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/types/arrays",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "IyBkZW1vCi4vbWFpbi5nbzo5OjI6IGEzIGRlY2xhcmVkIGFuZCBub3QgdXNlZAouL21haW4uZ286MTY6NzogY2Fubm90IHVzZSBhMiAodmFyaWFibGUgb2YgdHlwZSBbMl1zdHJpbmcpIGFzIFszXXN0cmluZyB2YWx1ZSBpbiBhc3NpZ25tZW50",
                                              "duration": 799927291,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n# demo\n./main.go:9:2: a3 declared and not used\n./main.go:16:7: cannot use a2 (variable of type [2]string) as [3]string value in assignment",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/types/arrays",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "IyBkZW1vCi4vbWFpbi5nbzo5OjI6IGEzIGRlY2xhcmVkIGFuZCBub3QgdXNlZAouL21haW4uZ286MTY6NzogY2Fubm90IHVzZSBhMiAodmFyaWFibGUgb2YgdHlwZSBbMl1zdHJpbmcpIGFzIFszXXN0cmluZyB2YWx1ZSBpbiBhc3NpZ25tZW50",
                                            "duration": 799927291,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.10:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Length of the array is part of its type definition.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 10,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Slices, are not fixed length, so a slices type is comprised of just the type it will store. For example, in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-11"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-11"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.11",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-11"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", the type for slice, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "[]string{\"one\", \"two\"}",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "[]string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-11",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "slices",
                                              "src": "arrays_slices/src/types/slice/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\ts1 := []string{\"one\", \"two\"} // Type: []string\n\tvar s2 []string\n\ts3 := []int{}\n\n\ts2 = s1\n\n\tfmt.Println(s2)\n\n\t// this can't be done, as it is not of the same type\n\ts3 = s2\n}",
                                                "file": "arrays_slices/src/types/slice/main.go",
                                                "lang": "go",
                                                "name": "slices",
                                                "start": 5,
                                                "end": 19,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "arrays_slices/src/types/slice"
                                        },
                                        "expected_exit": -1,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n# demo\n./main.go:9:2: s3 declared and not used\n./main.go:16:7: cannot use s2 (variable of type []string) as []int value in assignment",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/types/slice",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "IyBkZW1vCi4vbWFpbi5nbzo5OjI6IHMzIGRlY2xhcmVkIGFuZCBub3QgdXNlZAouL21haW4uZ286MTY6NzogY2Fubm90IHVzZSBzMiAodmFyaWFibGUgb2YgdHlwZSBbXXN0cmluZykgYXMgW11pbnQgdmFsdWUgaW4gYXNzaWdubWVudA==",
                                              "duration": 1138427792,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n# demo\n./main.go:9:2: s3 declared and not used\n./main.go:16:7: cannot use s2 (variable of type []string) as []int value in assignment",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/types/slice",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "IyBkZW1vCi4vbWFpbi5nbzo5OjI6IHMzIGRlY2xhcmVkIGFuZCBub3QgdXNlZAouL21haW4uZ286MTY6NzogY2Fubm90IHVzZSBzMiAodmFyaWFibGUgb2YgdHlwZSBbXXN0cmluZykgYXMgW11pbnQgdmFsdWUgaW4gYXNzaWdubWVudA==",
                                            "duration": 1138427792,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.11:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Length is not part of of a slice's type definition.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 11,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Setting Array and Slice Values",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "If you create two like arrays, and then set the value of one array to the other, they still continue to have their own memory space. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-12"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-12"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.12",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-12"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " when ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "a1",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " is assigned to ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "a2",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", array receives copies of the values in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "a1",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". Changing what value is in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "a1[0]",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " does not affect the previous value that was there, so ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "a2[0]",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " will still be able to access the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "\"one\"",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " string.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-12",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "main",
                                              "src": "arrays_slices/src/copy/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\ta1 := [2]string{\"one\", \"two\"}\n\ta2 := [2]string{}\n\n\ta2 = a1\n\n\tfmt.Println(\"a1:\", a1)\n\tfmt.Println(\"a2:\", a2)\n\n\ta1[0] = \"three\"\n\n\tfmt.Println(\"a1:\", a1)\n\tfmt.Println(\"a2:\", a2)\n}",
                                                "file": "arrays_slices/src/copy/main.go",
                                                "lang": "go",
                                                "name": "main",
                                                "start": 5,
                                                "end": 21,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/copy"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\na1: [one two]\na2: [one two]\na1: [three two]\na2: [one two]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/copy",
                                              "stdout": "YTE6IFtvbmUgdHdvXQphMjogW29uZSB0d29dCmExOiBbdGhyZWUgdHdvXQphMjogW29uZSB0d29d",
                                              "duration": 1189342500,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\na1: [one two]\na2: [one two]\na1: [three two]\na2: [one two]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/copy",
                                            "stdout": "YTE6IFtvbmUgdHdvXQphMjogW29uZSB0d29dCmExOiBbdGhyZWUgdHdvXQphMjogW29uZSB0d29d",
                                            "duration": 1189342500,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.12:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Arrays, and slices, have separate memory spaces, but can share the same values.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 12,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Appending To Slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Unlike object oriented languages, slices and arrays don't have functions on them to allow you to append, remove, index, or otherwise manipulate the values in the array or slice. Instead, it is expected that those functions can be implemented by the end user. With the introduction of Generics in Go 1.18, there is much more flexibility in how these functions can be implemented.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-13"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-13"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.13",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-13"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", can be used to append values to a slice. While appending only works with slices, we will see later how an array can be coerced into a slice.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-13",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.append"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.append",
                                          "exec": "go doc builtin.append"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.append\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc append(slice []Type, elems ...Type) []Type\n    The append built-in function appends elements to the end of a slice.\n    If it has sufficient capacity, the destination is resliced to accommodate\n    the new elements. If it does not, a new underlying array will be allocated.\n    Append returns the updated slice. It is therefore necessary to store the\n    result of append, often in the variable holding the slice itself:\n\n        slice = append(slice, elem1, elem2)\n        slice = append(slice, anotherSlice...)\n\n    As a special case, it is legal to append a string to a byte slice, like\n    this:\n\n        slice = append([]byte(\u0026#34;hello \u0026#34;), \u0026#34;world\u0026#34;...)",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.append"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgYXBwZW5kKHNsaWNlIFtdVHlwZSwgZWxlbXMgLi4uVHlwZSkgW11UeXBlCiAgICBUaGUgYXBwZW5kIGJ1aWx0LWluIGZ1bmN0aW9uIGFwcGVuZHMgZWxlbWVudHMgdG8gdGhlIGVuZCBvZiBhIHNsaWNlLgogICAgSWYgaXQgaGFzIHN1ZmZpY2llbnQgY2FwYWNpdHksIHRoZSBkZXN0aW5hdGlvbiBpcyByZXNsaWNlZCB0byBhY2NvbW1vZGF0ZQogICAgdGhlIG5ldyBlbGVtZW50cy4gSWYgaXQgZG9lcyBub3QsIGEgbmV3IHVuZGVybHlpbmcgYXJyYXkgd2lsbCBiZSBhbGxvY2F0ZWQuCiAgICBBcHBlbmQgcmV0dXJucyB0aGUgdXBkYXRlZCBzbGljZS4gSXQgaXMgdGhlcmVmb3JlIG5lY2Vzc2FyeSB0byBzdG9yZSB0aGUKICAgIHJlc3VsdCBvZiBhcHBlbmQsIG9mdGVuIGluIHRoZSB2YXJpYWJsZSBob2xkaW5nIHRoZSBzbGljZSBpdHNlbGY6CgogICAgICAgIHNsaWNlID0gYXBwZW5kKHNsaWNlLCBlbGVtMSwgZWxlbTIpCiAgICAgICAgc2xpY2UgPSBhcHBlbmQoc2xpY2UsIGFub3RoZXJTbGljZS4uLikKCiAgICBBcyBhIHNwZWNpYWwgY2FzZSwgaXQgaXMgbGVnYWwgdG8gYXBwZW5kIGEgc3RyaW5nIHRvIGEgYnl0ZSBzbGljZSwgbGlrZQogICAgdGhpczoKCiAgICAgICAgc2xpY2UgPSBhcHBlbmQoW11ieXRlKCJoZWxsbyAiKSwgIndvcmxkIi4uLik=",
                                              "duration": 2161911333,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.append\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc append(slice []Type, elems ...Type) []Type\n    The append built-in function appends elements to the end of a slice.\n    If it has sufficient capacity, the destination is resliced to accommodate\n    the new elements. If it does not, a new underlying array will be allocated.\n    Append returns the updated slice. It is therefore necessary to store the\n    result of append, often in the variable holding the slice itself:\n\n        slice = append(slice, elem1, elem2)\n        slice = append(slice, anotherSlice...)\n\n    As a special case, it is legal to append a string to a byte slice, like\n    this:\n\n        slice = append([]byte(\u0026#34;hello \u0026#34;), \u0026#34;world\u0026#34;...)",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.append"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgYXBwZW5kKHNsaWNlIFtdVHlwZSwgZWxlbXMgLi4uVHlwZSkgW11UeXBlCiAgICBUaGUgYXBwZW5kIGJ1aWx0LWluIGZ1bmN0aW9uIGFwcGVuZHMgZWxlbWVudHMgdG8gdGhlIGVuZCBvZiBhIHNsaWNlLgogICAgSWYgaXQgaGFzIHN1ZmZpY2llbnQgY2FwYWNpdHksIHRoZSBkZXN0aW5hdGlvbiBpcyByZXNsaWNlZCB0byBhY2NvbW1vZGF0ZQogICAgdGhlIG5ldyBlbGVtZW50cy4gSWYgaXQgZG9lcyBub3QsIGEgbmV3IHVuZGVybHlpbmcgYXJyYXkgd2lsbCBiZSBhbGxvY2F0ZWQuCiAgICBBcHBlbmQgcmV0dXJucyB0aGUgdXBkYXRlZCBzbGljZS4gSXQgaXMgdGhlcmVmb3JlIG5lY2Vzc2FyeSB0byBzdG9yZSB0aGUKICAgIHJlc3VsdCBvZiBhcHBlbmQsIG9mdGVuIGluIHRoZSB2YXJpYWJsZSBob2xkaW5nIHRoZSBzbGljZSBpdHNlbGY6CgogICAgICAgIHNsaWNlID0gYXBwZW5kKHNsaWNlLCBlbGVtMSwgZWxlbTIpCiAgICAgICAgc2xpY2UgPSBhcHBlbmQoc2xpY2UsIGFub3RoZXJTbGljZS4uLikKCiAgICBBcyBhIHNwZWNpYWwgY2FzZSwgaXQgaXMgbGVnYWwgdG8gYXBwZW5kIGEgc3RyaW5nIHRvIGEgYnl0ZSBzbGljZSwgbGlrZQogICAgdGhpczoKCiAgICAgICAgc2xpY2UgPSBhcHBlbmQoW11ieXRlKCJoZWxsbyAiKSwgIndvcmxkIi4uLik=",
                                            "duration": 2161911333,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.13:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#append",
                                                "href": "https://pkg.go.dev/builtin#append",
                                                "target": "_blank"
                                              },
                                              "file": "arrays_slices",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "arrays_slices",
                                                    "nodes": [
                                                      {
                                                        "text": "append",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#append"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 13,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": " function takes a slice and zero or more values to append to the slice. The return value is a new slice with the values appended to the original slice. All values being appended must be of the same type as the slice being appended to.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-14",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "arrays_slices/src/append/slice/append/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// create a slice of strings\n\tvar names []string\n\n\t// append a name to the slice\n\tnames = append(names, \"Kris\")\n\n\tfmt.Println(names)\n\n\t// append multiple names to the slice\n\tnames = append(names, \"Janis\", \"Jimi\")\n\n\tfmt.Println(names)\n}",
                                                "file": "arrays_slices/src/append/slice/append/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 21,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/append/slice/append"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[Kris]\n[Kris Janis Jimi]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/append/slice/append",
                                              "stdout": "W0tyaXNdCltLcmlzIEphbmlzIEppbWld",
                                              "duration": 1912039459,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[Kris]\n[Kris Janis Jimi]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/append/slice/append",
                                            "stdout": "W0tyaXNdCltLcmlzIEphbmlzIEppbWld",
                                            "duration": 1912039459,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.14:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Appending to a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 14,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "arrays_slices.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Appending Slices to Slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": " function, as previously, mentioned can take zero or more values to append to a slice. All values being appended must be of the same type as the slice being appended to. This means that we can not use a slice as the second argument to ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-15",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "arrays_slices/src/append/slice/bad/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// create a slice of strings\n\tvar names []string\n\n\t// append a name to the slice\n\tnames = append(names, \"Kris\")\n\n\tfmt.Println(names)\n\n\t// create another slice of strings\n\tmore := []string{\"Janis\", \"Jimi\"}\n\n\t// append multiple names to the slice\n\tnames = append(names, more)\n\n\tfmt.Println(names)\n}",
                                                "file": "arrays_slices/src/append/slice/bad/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 24,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "arrays_slices/src/append/slice/bad"
                                        },
                                        "expected_exit": -1,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n# demo\n./main.go:19:24: cannot use more (variable of type []string) as string value in argument to append",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/append/slice/bad",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "IyBkZW1vCi4vbWFpbi5nbzoxOToyNDogY2Fubm90IHVzZSBtb3JlICh2YXJpYWJsZSBvZiB0eXBlIFtdc3RyaW5nKSBhcyBzdHJpbmcgdmFsdWUgaW4gYXJndW1lbnQgdG8gYXBwZW5k",
                                              "duration": 1466208500,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n# demo\n./main.go:19:24: cannot use more (variable of type []string) as string value in argument to append",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/append/slice/bad",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "IyBkZW1vCi4vbWFpbi5nbzoxOToyNDogY2Fubm90IHVzZSBtb3JlICh2YXJpYWJsZSBvZiB0eXBlIFtdc3RyaW5nKSBhcyBzdHJpbmcgdmFsdWUgaW4gYXJndW1lbnQgdG8gYXBwZW5k",
                                            "duration": 1466208500,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.15:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Error attempting to append two slices together.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 15,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "Consider ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-15"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-15"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.15",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-15"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". When trying to pass a second slice to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": " function, we get a compilation error, or a runtime panic.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "The reason for this error is that the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": " function expects values to be of the same type as the slice being appended to. In short the type ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "[]string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " is not the same type as ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "In order to append the second slice to the first we need to pass the individual values of the second slice to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": " function. One way to do this would be to use a loop to iterate over the values in the second slice and append them to the first slice, as seen in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-16"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-16"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.16",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-16"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". Iteration will be discussed later in ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "binding",
                                      "attributes": {
                                        "part": "maps-control"
                                      },
                                      "file": "arrays_slices.md",
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-16",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "arrays_slices/src/append/slice/for/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// create a slice of strings\n\tvar names []string\n\n\t// append a name to the slice\n\tnames = append(names, \"Kris\")\n\n\tfmt.Println(names)\n\n\t// create another slice of strings\n\tmore := []string{\"Janis\", \"Jimi\"}\n\n\t// loop through the additional names\n\tfor _, name := range more {\n\n\t\t// append each name to the slice\n\t\tnames = append(names, name)\n\t}\n\n\tfmt.Println(names)\n}",
                                                "file": "arrays_slices/src/append/slice/for/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 7,
                                                "end": 30,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/append/slice/for"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[Kris]\n[Kris Janis Jimi]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/append/slice/for",
                                              "stdout": "W0tyaXNdCltLcmlzIEphbmlzIEppbWld",
                                              "duration": 1438718583,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[Kris]\n[Kris Janis Jimi]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/append/slice/for",
                                            "stdout": "W0tyaXNdCltLcmlzIEphbmlzIEppbWld",
                                            "duration": 1438718583,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.16:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Appending two slices using a ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "arrays_slices",
                                              "nodes": [
                                                {
                                                  "text": "for",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " loop.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 16,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "While using a loop will work, it is not the most efficient way to append a slice to a slice. Functions in Go, as we will see later in this ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "binding",
                                      "attributes": {
                                        "whole": ""
                                      },
                                      "file": "arrays_slices.md",
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": ", accept ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "href": "https://en.wikipedia.org/wiki/Variadic_function",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "variadic arguments",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://en.wikipedia.org/wiki/Variadic_function"
                                      }
                                    ],
                                    {
                                      "text": ". Variadic functions accept zero or more arguments of the same type through the use of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "...",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " operator.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "arrays_slices.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": " function, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-17"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-17"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.17",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-17"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " accepts a variadic argument, and will accept any number of values of the same type as the slice being appended to.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-17",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.append"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.append",
                                          "exec": "go doc builtin.append"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.append\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc append(slice []Type, elems ...Type) []Type\n    The append built-in function appends elements to the end of a slice.\n    If it has sufficient capacity, the destination is resliced to accommodate\n    the new elements. If it does not, a new underlying array will be allocated.\n    Append returns the updated slice. It is therefore necessary to store the\n    result of append, often in the variable holding the slice itself:\n\n        slice = append(slice, elem1, elem2)\n        slice = append(slice, anotherSlice...)\n\n    As a special case, it is legal to append a string to a byte slice, like\n    this:\n\n        slice = append([]byte(\u0026#34;hello \u0026#34;), \u0026#34;world\u0026#34;...)",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.append"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgYXBwZW5kKHNsaWNlIFtdVHlwZSwgZWxlbXMgLi4uVHlwZSkgW11UeXBlCiAgICBUaGUgYXBwZW5kIGJ1aWx0LWluIGZ1bmN0aW9uIGFwcGVuZHMgZWxlbWVudHMgdG8gdGhlIGVuZCBvZiBhIHNsaWNlLgogICAgSWYgaXQgaGFzIHN1ZmZpY2llbnQgY2FwYWNpdHksIHRoZSBkZXN0aW5hdGlvbiBpcyByZXNsaWNlZCB0byBhY2NvbW1vZGF0ZQogICAgdGhlIG5ldyBlbGVtZW50cy4gSWYgaXQgZG9lcyBub3QsIGEgbmV3IHVuZGVybHlpbmcgYXJyYXkgd2lsbCBiZSBhbGxvY2F0ZWQuCiAgICBBcHBlbmQgcmV0dXJucyB0aGUgdXBkYXRlZCBzbGljZS4gSXQgaXMgdGhlcmVmb3JlIG5lY2Vzc2FyeSB0byBzdG9yZSB0aGUKICAgIHJlc3VsdCBvZiBhcHBlbmQsIG9mdGVuIGluIHRoZSB2YXJpYWJsZSBob2xkaW5nIHRoZSBzbGljZSBpdHNlbGY6CgogICAgICAgIHNsaWNlID0gYXBwZW5kKHNsaWNlLCBlbGVtMSwgZWxlbTIpCiAgICAgICAgc2xpY2UgPSBhcHBlbmQoc2xpY2UsIGFub3RoZXJTbGljZS4uLikKCiAgICBBcyBhIHNwZWNpYWwgY2FzZSwgaXQgaXMgbGVnYWwgdG8gYXBwZW5kIGEgc3RyaW5nIHRvIGEgYnl0ZSBzbGljZSwgbGlrZQogICAgdGhpczoKCiAgICAgICAgc2xpY2UgPSBhcHBlbmQoW11ieXRlKCJoZWxsbyAiKSwgIndvcmxkIi4uLik=",
                                              "duration": 874853042,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.append\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc append(slice []Type, elems ...Type) []Type\n    The append built-in function appends elements to the end of a slice.\n    If it has sufficient capacity, the destination is resliced to accommodate\n    the new elements. If it does not, a new underlying array will be allocated.\n    Append returns the updated slice. It is therefore necessary to store the\n    result of append, often in the variable holding the slice itself:\n\n        slice = append(slice, elem1, elem2)\n        slice = append(slice, anotherSlice...)\n\n    As a special case, it is legal to append a string to a byte slice, like\n    this:\n\n        slice = append([]byte(\u0026#34;hello \u0026#34;), \u0026#34;world\u0026#34;...)",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.append"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgYXBwZW5kKHNsaWNlIFtdVHlwZSwgZWxlbXMgLi4uVHlwZSkgW11UeXBlCiAgICBUaGUgYXBwZW5kIGJ1aWx0LWluIGZ1bmN0aW9uIGFwcGVuZHMgZWxlbWVudHMgdG8gdGhlIGVuZCBvZiBhIHNsaWNlLgogICAgSWYgaXQgaGFzIHN1ZmZpY2llbnQgY2FwYWNpdHksIHRoZSBkZXN0aW5hdGlvbiBpcyByZXNsaWNlZCB0byBhY2NvbW1vZGF0ZQogICAgdGhlIG5ldyBlbGVtZW50cy4gSWYgaXQgZG9lcyBub3QsIGEgbmV3IHVuZGVybHlpbmcgYXJyYXkgd2lsbCBiZSBhbGxvY2F0ZWQuCiAgICBBcHBlbmQgcmV0dXJucyB0aGUgdXBkYXRlZCBzbGljZS4gSXQgaXMgdGhlcmVmb3JlIG5lY2Vzc2FyeSB0byBzdG9yZSB0aGUKICAgIHJlc3VsdCBvZiBhcHBlbmQsIG9mdGVuIGluIHRoZSB2YXJpYWJsZSBob2xkaW5nIHRoZSBzbGljZSBpdHNlbGY6CgogICAgICAgIHNsaWNlID0gYXBwZW5kKHNsaWNlLCBlbGVtMSwgZWxlbTIpCiAgICAgICAgc2xpY2UgPSBhcHBlbmQoc2xpY2UsIGFub3RoZXJTbGljZS4uLikKCiAgICBBcyBhIHNwZWNpYWwgY2FzZSwgaXQgaXMgbGVnYWwgdG8gYXBwZW5kIGEgc3RyaW5nIHRvIGEgYnl0ZSBzbGljZSwgbGlrZQogICAgdGhpczoKCiAgICAgICAgc2xpY2UgPSBhcHBlbmQoW11ieXRlKCJoZWxsbyAiKSwgIndvcmxkIi4uLik=",
                                            "duration": 874853042,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.17:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#append",
                                                "href": "https://pkg.go.dev/builtin#append",
                                                "target": "_blank"
                                              },
                                              "file": "arrays_slices",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "arrays_slices",
                                                    "nodes": [
                                                      {
                                                        "text": "append",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#append"
                                            }
                                          ],
                                          {
                                            "text": " function with variadic arguments.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 17,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "While we can use variadic arguments to accept multiple arguments of the same type, the reverse is also true. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-18"
                                        },
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-18"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.18",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-18"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " the variadic operator, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "...",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", is used to take the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "more",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " slice and append it to the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "arrays_slices.md",
                                        "nodes": [
                                          {
                                            "text": "names",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " slice.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-18",
                                    "type": "listing"
                                  },
                                  "file": "arrays_slices.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "arrays_slices",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "arrays_slices/src/append/slice/variadic/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// create a slice of strings\n\tvar names []string\n\n\t// append a name to the slice\n\tnames = append(names, \"Kris\")\n\n\tfmt.Println(names)\n\n\t// create another slice of strings\n\tmore := []string{\"Janis\", \"Jimi\"}\n\n\t// use variadic operator to append more to names\n\tnames = append(names, more...)\n\n\t// equivalent to:\n\t// names = append(names, \"Janis\", \"Jimi\")\n\n\tfmt.Println(names)\n}",
                                                "file": "arrays_slices/src/append/slice/variadic/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 7,
                                                "end": 29,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "arrays_slices/src/append/slice/variadic"
                                        },
                                        "expected_exit": 0,
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[Kris]\n[Kris Janis Jimi]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/append/slice/variadic",
                                              "stdout": "W0tyaXNdCltLcmlzIEphbmlzIEppbWld",
                                              "duration": 2061193042,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[Kris]\n[Kris Janis Jimi]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/arrays_slices/src/append/slice/variadic",
                                            "stdout": "W0tyaXNdCltLcmlzIEphbmlzIEppbWld",
                                            "duration": 2061193042,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "arrays_slices",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.18:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Appending two slices using the variadic operator.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 18,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "List Types: Arrays and Slices",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "internals/internals.md"
                      },
                      "dir": "internals",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "internals.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "internals.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "How Slices Work",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "While arrays are very straightforward to understand, they can hold a fixed number things, slices are a bit more complex. Slices can grow as needed to store as many values as needed.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "To help understand how slices work, let's examine slices a bit further. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-19"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-19"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.19",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-19"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we see that a slice has three parts; length, capacity, and pointer to an underlying array.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-19",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/internal/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "type Slice struct {\n\t// N: the number of actual values in the array\n\tLength int\n\t// 10: the maximum number of values that can be stored in the array\n\tCapacity int\n\t// [\"a\", \"b\", \"c\"]: the actual values stored in the array\n\tArray [10]string\n}",
                                                "file": "internals/src/internal/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 15,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ul",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "internals",
                                              "list-type": "ul",
                                              "nodes": [
                                                {
                                                  "text": "Length - How many values are in the slice",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "internals",
                                              "list-type": "ul",
                                              "nodes": [
                                                {
                                                  "text": "Capacity - How many values can be stored in the slice",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "li",
                                              "file": "internals",
                                              "list-type": "ul",
                                              "nodes": [
                                                {
                                                  "text": "Pointer to the underlying array - Where the values are actually stored",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.LI"
                                            }
                                          ],
                                          {
                                            "text": "\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.UL"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.19:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Theoretical representation of slice internals.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 19,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "It's important to note that this definition of a slice, is purely an academic representation of how slices are implemented in Go.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Length And Capacity",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "While writing programs, we often to need to know how many values are in a collection type, such as an array or slice. Go provides a built-in function to do exactly this, called ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#len",
                                          "href": "https://pkg.go.dev/builtin#len",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "len",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#len"
                                      }
                                    ],
                                    {
                                      "text": ". The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#len",
                                          "href": "https://pkg.go.dev/builtin#len",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "len",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#len"
                                      }
                                    ],
                                    {
                                      "text": " function tells us how many elements the collection ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "em",
                                      "file": "internals.md",
                                      "nodes": [
                                        {
                                          "text": "actually",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " has.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-20",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.len"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.len",
                                          "exec": "go doc builtin.len",
                                          "src": "internals/src/cap"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.len\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc len(v Type) int\n    The len built-in function returns the length of v, according to its type:\n\n        Array: the number of elements in v.\n        Pointer to array: the number of elements in *v (even if v is nil).\n        Slice, or map: the number of elements in v; if v is nil, len(v) is zero.\n        String: the number of bytes in v.\n        Channel: the number of elements queued (unread) in the channel buffer;\n                 if v is nil, len(v) is zero.\n\n    For some arguments, such as a string literal or a simple array expression,\n    the result can be a constant. See the Go language specification\u0026#39;s \u0026#34;Length\n    and capacity\u0026#34; section for details.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.len"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/cap",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgbGVuKHYgVHlwZSkgaW50CiAgICBUaGUgbGVuIGJ1aWx0LWluIGZ1bmN0aW9uIHJldHVybnMgdGhlIGxlbmd0aCBvZiB2LCBhY2NvcmRpbmcgdG8gaXRzIHR5cGU6CgogICAgICAgIEFycmF5OiB0aGUgbnVtYmVyIG9mIGVsZW1lbnRzIGluIHYuCiAgICAgICAgUG9pbnRlciB0byBhcnJheTogdGhlIG51bWJlciBvZiBlbGVtZW50cyBpbiAqdiAoZXZlbiBpZiB2IGlzIG5pbCkuCiAgICAgICAgU2xpY2UsIG9yIG1hcDogdGhlIG51bWJlciBvZiBlbGVtZW50cyBpbiB2OyBpZiB2IGlzIG5pbCwgbGVuKHYpIGlzIHplcm8uCiAgICAgICAgU3RyaW5nOiB0aGUgbnVtYmVyIG9mIGJ5dGVzIGluIHYuCiAgICAgICAgQ2hhbm5lbDogdGhlIG51bWJlciBvZiBlbGVtZW50cyBxdWV1ZWQgKHVucmVhZCkgaW4gdGhlIGNoYW5uZWwgYnVmZmVyOwogICAgICAgICAgICAgICAgIGlmIHYgaXMgbmlsLCBsZW4odikgaXMgemVyby4KCiAgICBGb3Igc29tZSBhcmd1bWVudHMsIHN1Y2ggYXMgYSBzdHJpbmcgbGl0ZXJhbCBvciBhIHNpbXBsZSBhcnJheSBleHByZXNzaW9uLAogICAgdGhlIHJlc3VsdCBjYW4gYmUgYSBjb25zdGFudC4gU2VlIHRoZSBHbyBsYW5ndWFnZSBzcGVjaWZpY2F0aW9uJ3MgIkxlbmd0aAogICAgYW5kIGNhcGFjaXR5IiBzZWN0aW9uIGZvciBkZXRhaWxzLg==",
                                              "duration": 2346175084,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.len\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc len(v Type) int\n    The len built-in function returns the length of v, according to its type:\n\n        Array: the number of elements in v.\n        Pointer to array: the number of elements in *v (even if v is nil).\n        Slice, or map: the number of elements in v; if v is nil, len(v) is zero.\n        String: the number of bytes in v.\n        Channel: the number of elements queued (unread) in the channel buffer;\n                 if v is nil, len(v) is zero.\n\n    For some arguments, such as a string literal or a simple array expression,\n    the result can be a constant. See the Go language specification\u0026#39;s \u0026#34;Length\n    and capacity\u0026#34; section for details.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.len"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/cap",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgbGVuKHYgVHlwZSkgaW50CiAgICBUaGUgbGVuIGJ1aWx0LWluIGZ1bmN0aW9uIHJldHVybnMgdGhlIGxlbmd0aCBvZiB2LCBhY2NvcmRpbmcgdG8gaXRzIHR5cGU6CgogICAgICAgIEFycmF5OiB0aGUgbnVtYmVyIG9mIGVsZW1lbnRzIGluIHYuCiAgICAgICAgUG9pbnRlciB0byBhcnJheTogdGhlIG51bWJlciBvZiBlbGVtZW50cyBpbiAqdiAoZXZlbiBpZiB2IGlzIG5pbCkuCiAgICAgICAgU2xpY2UsIG9yIG1hcDogdGhlIG51bWJlciBvZiBlbGVtZW50cyBpbiB2OyBpZiB2IGlzIG5pbCwgbGVuKHYpIGlzIHplcm8uCiAgICAgICAgU3RyaW5nOiB0aGUgbnVtYmVyIG9mIGJ5dGVzIGluIHYuCiAgICAgICAgQ2hhbm5lbDogdGhlIG51bWJlciBvZiBlbGVtZW50cyBxdWV1ZWQgKHVucmVhZCkgaW4gdGhlIGNoYW5uZWwgYnVmZmVyOwogICAgICAgICAgICAgICAgIGlmIHYgaXMgbmlsLCBsZW4odikgaXMgemVyby4KCiAgICBGb3Igc29tZSBhcmd1bWVudHMsIHN1Y2ggYXMgYSBzdHJpbmcgbGl0ZXJhbCBvciBhIHNpbXBsZSBhcnJheSBleHByZXNzaW9uLAogICAgdGhlIHJlc3VsdCBjYW4gYmUgYSBjb25zdGFudC4gU2VlIHRoZSBHbyBsYW5ndWFnZSBzcGVjaWZpY2F0aW9uJ3MgIkxlbmd0aAogICAgYW5kIGNhcGFjaXR5IiBzZWN0aW9uIGZvciBkZXRhaWxzLg==",
                                            "duration": 2346175084,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.20:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#len",
                                                "href": "https://pkg.go.dev/builtin#len",
                                                "target": "_blank"
                                              },
                                              "file": "internals",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "internals",
                                                    "nodes": [
                                                      {
                                                        "text": "len",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#len"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 20,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "Occasionally, we may need to know how many elements the collection can hold. This is called capacity. The built-in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#cap",
                                          "href": "https://pkg.go.dev/builtin#cap",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "cap",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#cap"
                                      }
                                    ],
                                    {
                                      "text": " function tells us the capacity of the slice, or how many elements it ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "em",
                                      "file": "internals.md",
                                      "nodes": [
                                        {
                                          "text": "can",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " have.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-21",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.cap"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.cap",
                                          "exec": "go doc builtin.cap",
                                          "src": "internals/src/cap"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.cap\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc cap(v Type) int\n    The cap built-in function returns the capacity of v, according to its type:\n\n        Array: the number of elements in v (same as len(v)).\n        Pointer to array: the number of elements in *v (same as len(v)).\n        Slice: the maximum length the slice can reach when resliced;\n        if v is nil, cap(v) is zero.\n        Channel: the channel buffer capacity, in units of elements;\n        if v is nil, cap(v) is zero.\n\n    For some arguments, such as a simple array expression, the result can be a\n    constant. See the Go language specification\u0026#39;s \u0026#34;Length and capacity\u0026#34; section\n    for details.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.cap"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/cap",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgY2FwKHYgVHlwZSkgaW50CiAgICBUaGUgY2FwIGJ1aWx0LWluIGZ1bmN0aW9uIHJldHVybnMgdGhlIGNhcGFjaXR5IG9mIHYsIGFjY29yZGluZyB0byBpdHMgdHlwZToKCiAgICAgICAgQXJyYXk6IHRoZSBudW1iZXIgb2YgZWxlbWVudHMgaW4gdiAoc2FtZSBhcyBsZW4odikpLgogICAgICAgIFBvaW50ZXIgdG8gYXJyYXk6IHRoZSBudW1iZXIgb2YgZWxlbWVudHMgaW4gKnYgKHNhbWUgYXMgbGVuKHYpKS4KICAgICAgICBTbGljZTogdGhlIG1heGltdW0gbGVuZ3RoIHRoZSBzbGljZSBjYW4gcmVhY2ggd2hlbiByZXNsaWNlZDsKICAgICAgICBpZiB2IGlzIG5pbCwgY2FwKHYpIGlzIHplcm8uCiAgICAgICAgQ2hhbm5lbDogdGhlIGNoYW5uZWwgYnVmZmVyIGNhcGFjaXR5LCBpbiB1bml0cyBvZiBlbGVtZW50czsKICAgICAgICBpZiB2IGlzIG5pbCwgY2FwKHYpIGlzIHplcm8uCgogICAgRm9yIHNvbWUgYXJndW1lbnRzLCBzdWNoIGFzIGEgc2ltcGxlIGFycmF5IGV4cHJlc3Npb24sIHRoZSByZXN1bHQgY2FuIGJlIGEKICAgIGNvbnN0YW50LiBTZWUgdGhlIEdvIGxhbmd1YWdlIHNwZWNpZmljYXRpb24ncyAiTGVuZ3RoIGFuZCBjYXBhY2l0eSIgc2VjdGlvbgogICAgZm9yIGRldGFpbHMu",
                                              "duration": 2044123541,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.cap\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc cap(v Type) int\n    The cap built-in function returns the capacity of v, according to its type:\n\n        Array: the number of elements in v (same as len(v)).\n        Pointer to array: the number of elements in *v (same as len(v)).\n        Slice: the maximum length the slice can reach when resliced;\n        if v is nil, cap(v) is zero.\n        Channel: the channel buffer capacity, in units of elements;\n        if v is nil, cap(v) is zero.\n\n    For some arguments, such as a simple array expression, the result can be a\n    constant. See the Go language specification\u0026#39;s \u0026#34;Length and capacity\u0026#34; section\n    for details.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.cap"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/cap",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgY2FwKHYgVHlwZSkgaW50CiAgICBUaGUgY2FwIGJ1aWx0LWluIGZ1bmN0aW9uIHJldHVybnMgdGhlIGNhcGFjaXR5IG9mIHYsIGFjY29yZGluZyB0byBpdHMgdHlwZToKCiAgICAgICAgQXJyYXk6IHRoZSBudW1iZXIgb2YgZWxlbWVudHMgaW4gdiAoc2FtZSBhcyBsZW4odikpLgogICAgICAgIFBvaW50ZXIgdG8gYXJyYXk6IHRoZSBudW1iZXIgb2YgZWxlbWVudHMgaW4gKnYgKHNhbWUgYXMgbGVuKHYpKS4KICAgICAgICBTbGljZTogdGhlIG1heGltdW0gbGVuZ3RoIHRoZSBzbGljZSBjYW4gcmVhY2ggd2hlbiByZXNsaWNlZDsKICAgICAgICBpZiB2IGlzIG5pbCwgY2FwKHYpIGlzIHplcm8uCiAgICAgICAgQ2hhbm5lbDogdGhlIGNoYW5uZWwgYnVmZmVyIGNhcGFjaXR5LCBpbiB1bml0cyBvZiBlbGVtZW50czsKICAgICAgICBpZiB2IGlzIG5pbCwgY2FwKHYpIGlzIHplcm8uCgogICAgRm9yIHNvbWUgYXJndW1lbnRzLCBzdWNoIGFzIGEgc2ltcGxlIGFycmF5IGV4cHJlc3Npb24sIHRoZSByZXN1bHQgY2FuIGJlIGEKICAgIGNvbnN0YW50LiBTZWUgdGhlIEdvIGxhbmd1YWdlIHNwZWNpZmljYXRpb24ncyAiTGVuZ3RoIGFuZCBjYXBhY2l0eSIgc2VjdGlvbgogICAgZm9yIGRldGFpbHMu",
                                            "duration": 2044123541,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.21:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#cap",
                                                "href": "https://pkg.go.dev/builtin#cap",
                                                "target": "_blank"
                                              },
                                              "file": "internals",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "internals",
                                                    "nodes": [
                                                      {
                                                        "text": "cap",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#cap"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 21,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Growing A Slice",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "Slices in Go are dynamically sized, the Go runtime will increase the capacity of the underlying slice as necessary. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-22"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-22"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.22",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-22"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we the first few growth stages of a slice as new values are added.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-22",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/cap/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := []string{}\n\tfmt.Println(\"len:\", len(names)) // 0\n\tfmt.Println(\"cap:\", cap(names)) // 0\n\n\tnames = append(names, \"Kurt\")\n\tfmt.Println(\"len:\", len(names)) // 1\n\tfmt.Println(\"cap:\", cap(names)) // 1\n\n\tnames = append(names, \"Janis\")\n\tfmt.Println(\"len:\", len(names)) // 2\n\tfmt.Println(\"cap:\", cap(names)) // 2\n\n\tnames = append(names, \"Jimi\")\n\tfmt.Println(\"len:\", len(names)) // 3\n\tfmt.Println(\"cap:\", cap(names)) // 4\n\n\tnames = append(names, \"Amy\")\n\tfmt.Println(\"len:\", len(names)) // 4\n\tfmt.Println(\"cap:\", cap(names)) // 4\n\n\tnames = append(names, \"Brian\")\n\n\tfmt.Println(\"len:\", len(names)) // 5\n\tfmt.Println(\"cap:\", cap(names)) // 8\n}",
                                                "file": "internals/src/cap/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 33,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.22:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#cap",
                                                "href": "https://pkg.go.dev/builtin#cap",
                                                "target": "_blank"
                                              },
                                              "file": "internals",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "internals",
                                                    "nodes": [
                                                      {
                                                        "text": "cap",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#cap"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 22,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "The rate of growth can change with each Go release as the Go team fine tunes the runtime. Growth rate can also be dependent of architecture and operating system.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-23"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-23"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.23",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-23"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " demonstrates growth rate over a large number of iterations. As the capacity of the slice changes it will print the previous capacity and the new capacity.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-23",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/cap-printer/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tN := 100_000_000\n\n\tsl := make([]int, 0)\n\n\that := cap(sl)\n\tfor i := 0; i \u003c N; i++ {\n\t\tsl = append(sl, i)\n\t\tc := cap(sl)\n\t\tif c != hat {\n\t\t\tfmt.Println(hat, c)\n\t\t}\n\t\that = c\n\t}\n}",
                                                "file": "internals/src/cap-printer/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 22,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "internals/src/cap-printer"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n0 1\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 848\n848 1280\n1280 1792\n1792 2560\n2560 3408\n3408 5120\n5120 7168\n7168 9216\n9216 12288\n12288 16384\n16384 21504\n21504 27648\n27648 34816\n34816 44032\n44032 55296\n55296 69632\n69632 88064\n88064 110592\n110592 139264\n139264 175104\n175104 219136\n219136 274432\n274432 344064\n344064 431104\n431104 539648\n539648 674816\n674816 843776\n843776 1055744\n1055744 1319936\n1319936 1650688\n1650688 2064384\n2064384 2581504\n2581504 3227648\n3227648 4035584\n4035584 5045248\n5045248 6306816\n6306816 7883776\n7883776 9854976\n9854976 12319744\n12319744 15399936\n15399936 19250176\n19250176 24062976\n24062976 30078976\n30078976 37599232\n37599232 46999552\n46999552 58749952\n58749952 73438208\n73438208 91798528\n91798528 114748416",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/cap-printer",
                                              "stdout": "MCAxCjEgMgoyIDQKNCA4CjggMTYKMTYgMzIKMzIgNjQKNjQgMTI4CjEyOCAyNTYKMjU2IDUxMgo1MTIgODQ4Cjg0OCAxMjgwCjEyODAgMTc5MgoxNzkyIDI1NjAKMjU2MCAzNDA4CjM0MDggNTEyMAo1MTIwIDcxNjgKNzE2OCA5MjE2CjkyMTYgMTIyODgKMTIyODggMTYzODQKMTYzODQgMjE1MDQKMjE1MDQgMjc2NDgKMjc2NDggMzQ4MTYKMzQ4MTYgNDQwMzIKNDQwMzIgNTUyOTYKNTUyOTYgNjk2MzIKNjk2MzIgODgwNjQKODgwNjQgMTEwNTkyCjExMDU5MiAxMzkyNjQKMTM5MjY0IDE3NTEwNAoxNzUxMDQgMjE5MTM2CjIxOTEzNiAyNzQ0MzIKMjc0NDMyIDM0NDA2NAozNDQwNjQgNDMxMTA0CjQzMTEwNCA1Mzk2NDgKNTM5NjQ4IDY3NDgxNgo2NzQ4MTYgODQzNzc2Cjg0Mzc3NiAxMDU1NzQ0CjEwNTU3NDQgMTMxOTkzNgoxMzE5OTM2IDE2NTA2ODgKMTY1MDY4OCAyMDY0Mzg0CjIwNjQzODQgMjU4MTUwNAoyNTgxNTA0IDMyMjc2NDgKMzIyNzY0OCA0MDM1NTg0CjQwMzU1ODQgNTA0NTI0OAo1MDQ1MjQ4IDYzMDY4MTYKNjMwNjgxNiA3ODgzNzc2Cjc4ODM3NzYgOTg1NDk3Ngo5ODU0OTc2IDEyMzE5NzQ0CjEyMzE5NzQ0IDE1Mzk5OTM2CjE1Mzk5OTM2IDE5MjUwMTc2CjE5MjUwMTc2IDI0MDYyOTc2CjI0MDYyOTc2IDMwMDc4OTc2CjMwMDc4OTc2IDM3NTk5MjMyCjM3NTk5MjMyIDQ2OTk5NTUyCjQ2OTk5NTUyIDU4NzQ5OTUyCjU4NzQ5OTUyIDczNDM4MjA4CjczNDM4MjA4IDkxNzk4NTI4CjkxNzk4NTI4IDExNDc0ODQxNg==",
                                              "duration": 3246509833,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n0 1\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 848\n848 1280\n1280 1792\n1792 2560\n2560 3408\n3408 5120\n5120 7168\n7168 9216\n9216 12288\n12288 16384\n16384 21504\n21504 27648\n27648 34816\n34816 44032\n44032 55296\n55296 69632\n69632 88064\n88064 110592\n110592 139264\n139264 175104\n175104 219136\n219136 274432\n274432 344064\n344064 431104\n431104 539648\n539648 674816\n674816 843776\n843776 1055744\n1055744 1319936\n1319936 1650688\n1650688 2064384\n2064384 2581504\n2581504 3227648\n3227648 4035584\n4035584 5045248\n5045248 6306816\n6306816 7883776\n7883776 9854976\n9854976 12319744\n12319744 15399936\n15399936 19250176\n19250176 24062976\n24062976 30078976\n30078976 37599232\n37599232 46999552\n46999552 58749952\n58749952 73438208\n73438208 91798528\n91798528 114748416",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/cap-printer",
                                            "stdout": "MCAxCjEgMgoyIDQKNCA4CjggMTYKMTYgMzIKMzIgNjQKNjQgMTI4CjEyOCAyNTYKMjU2IDUxMgo1MTIgODQ4Cjg0OCAxMjgwCjEyODAgMTc5MgoxNzkyIDI1NjAKMjU2MCAzNDA4CjM0MDggNTEyMAo1MTIwIDcxNjgKNzE2OCA5MjE2CjkyMTYgMTIyODgKMTIyODggMTYzODQKMTYzODQgMjE1MDQKMjE1MDQgMjc2NDgKMjc2NDggMzQ4MTYKMzQ4MTYgNDQwMzIKNDQwMzIgNTUyOTYKNTUyOTYgNjk2MzIKNjk2MzIgODgwNjQKODgwNjQgMTEwNTkyCjExMDU5MiAxMzkyNjQKMTM5MjY0IDE3NTEwNAoxNzUxMDQgMjE5MTM2CjIxOTEzNiAyNzQ0MzIKMjc0NDMyIDM0NDA2NAozNDQwNjQgNDMxMTA0CjQzMTEwNCA1Mzk2NDgKNTM5NjQ4IDY3NDgxNgo2NzQ4MTYgODQzNzc2Cjg0Mzc3NiAxMDU1NzQ0CjEwNTU3NDQgMTMxOTkzNgoxMzE5OTM2IDE2NTA2ODgKMTY1MDY4OCAyMDY0Mzg0CjIwNjQzODQgMjU4MTUwNAoyNTgxNTA0IDMyMjc2NDgKMzIyNzY0OCA0MDM1NTg0CjQwMzU1ODQgNTA0NTI0OAo1MDQ1MjQ4IDYzMDY4MTYKNjMwNjgxNiA3ODgzNzc2Cjc4ODM3NzYgOTg1NDk3Ngo5ODU0OTc2IDEyMzE5NzQ0CjEyMzE5NzQ0IDE1Mzk5OTM2CjE1Mzk5OTM2IDE5MjUwMTc2CjE5MjUwMTc2IDI0MDYyOTc2CjI0MDYyOTc2IDMwMDc4OTc2CjMwMDc4OTc2IDM3NTk5MjMyCjM3NTk5MjMyIDQ2OTk5NTUyCjQ2OTk5NTUyIDU4NzQ5OTUyCjU4NzQ5OTUyIDczNDM4MjA4CjczNDM4MjA4IDkxNzk4NTI4CjkxNzk4NTI4IDExNDc0ODQxNg==",
                                            "duration": 3246509833,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.23:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Printing slice capacity of one million iterations.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 23,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Making A Slice",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "Slices can be declared in several different ways, including using the built-in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#make",
                                          "href": "https://pkg.go.dev/builtin#make",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "make",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#make"
                                      }
                                    ],
                                    {
                                      "text": " function.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-24",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.make"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.make",
                                          "exec": "go doc builtin.make",
                                          "src": "internals/src/make"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.make\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc make(t Type, size ...IntegerType) Type\n    The make built-in function allocates and initializes an object of type\n    slice, map, or chan (only). Like new, the first argument is a type,\n    not a value. Unlike new, make\u0026#39;s return type is the same as the type of its\n    argument, not a pointer to it. The specification of the result depends on\n    the type:\n\n        Slice: The size specifies the length. The capacity of the slice is\n        equal to its length. A second integer argument may be provided to\n        specify a different capacity; it must be no smaller than the\n        length. For example, make([]int, 0, 10) allocates an underlying array\n        of size 10 and returns a slice of length 0 and capacity 10 that is\n        backed by this underlying array.\n        Map: An empty map is allocated with enough space to hold the\n        specified number of elements. The size may be omitted, in which case\n        a small starting size is allocated.\n        Channel: The channel\u0026#39;s buffer is initialized with the specified\n        buffer capacity. If zero, or the size is omitted, the channel is\n        unbuffered.",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.make"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/make",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgbWFrZSh0IFR5cGUsIHNpemUgLi4uSW50ZWdlclR5cGUpIFR5cGUKICAgIFRoZSBtYWtlIGJ1aWx0LWluIGZ1bmN0aW9uIGFsbG9jYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gb2JqZWN0IG9mIHR5cGUKICAgIHNsaWNlLCBtYXAsIG9yIGNoYW4gKG9ubHkpLiBMaWtlIG5ldywgdGhlIGZpcnN0IGFyZ3VtZW50IGlzIGEgdHlwZSwKICAgIG5vdCBhIHZhbHVlLiBVbmxpa2UgbmV3LCBtYWtlJ3MgcmV0dXJuIHR5cGUgaXMgdGhlIHNhbWUgYXMgdGhlIHR5cGUgb2YgaXRzCiAgICBhcmd1bWVudCwgbm90IGEgcG9pbnRlciB0byBpdC4gVGhlIHNwZWNpZmljYXRpb24gb2YgdGhlIHJlc3VsdCBkZXBlbmRzIG9uCiAgICB0aGUgdHlwZToKCiAgICAgICAgU2xpY2U6IFRoZSBzaXplIHNwZWNpZmllcyB0aGUgbGVuZ3RoLiBUaGUgY2FwYWNpdHkgb2YgdGhlIHNsaWNlIGlzCiAgICAgICAgZXF1YWwgdG8gaXRzIGxlbmd0aC4gQSBzZWNvbmQgaW50ZWdlciBhcmd1bWVudCBtYXkgYmUgcHJvdmlkZWQgdG8KICAgICAgICBzcGVjaWZ5IGEgZGlmZmVyZW50IGNhcGFjaXR5OyBpdCBtdXN0IGJlIG5vIHNtYWxsZXIgdGhhbiB0aGUKICAgICAgICBsZW5ndGguIEZvciBleGFtcGxlLCBtYWtlKFtdaW50LCAwLCAxMCkgYWxsb2NhdGVzIGFuIHVuZGVybHlpbmcgYXJyYXkKICAgICAgICBvZiBzaXplIDEwIGFuZCByZXR1cm5zIGEgc2xpY2Ugb2YgbGVuZ3RoIDAgYW5kIGNhcGFjaXR5IDEwIHRoYXQgaXMKICAgICAgICBiYWNrZWQgYnkgdGhpcyB1bmRlcmx5aW5nIGFycmF5LgogICAgICAgIE1hcDogQW4gZW1wdHkgbWFwIGlzIGFsbG9jYXRlZCB3aXRoIGVub3VnaCBzcGFjZSB0byBob2xkIHRoZQogICAgICAgIHNwZWNpZmllZCBudW1iZXIgb2YgZWxlbWVudHMuIFRoZSBzaXplIG1heSBiZSBvbWl0dGVkLCBpbiB3aGljaCBjYXNlCiAgICAgICAgYSBzbWFsbCBzdGFydGluZyBzaXplIGlzIGFsbG9jYXRlZC4KICAgICAgICBDaGFubmVsOiBUaGUgY2hhbm5lbCdzIGJ1ZmZlciBpcyBpbml0aWFsaXplZCB3aXRoIHRoZSBzcGVjaWZpZWQKICAgICAgICBidWZmZXIgY2FwYWNpdHkuIElmIHplcm8sIG9yIHRoZSBzaXplIGlzIG9taXR0ZWQsIHRoZSBjaGFubmVsIGlzCiAgICAgICAgdW5idWZmZXJlZC4=",
                                              "duration": 2542208458,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.make\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc make(t Type, size ...IntegerType) Type\n    The make built-in function allocates and initializes an object of type\n    slice, map, or chan (only). Like new, the first argument is a type,\n    not a value. Unlike new, make\u0026#39;s return type is the same as the type of its\n    argument, not a pointer to it. The specification of the result depends on\n    the type:\n\n        Slice: The size specifies the length. The capacity of the slice is\n        equal to its length. A second integer argument may be provided to\n        specify a different capacity; it must be no smaller than the\n        length. For example, make([]int, 0, 10) allocates an underlying array\n        of size 10 and returns a slice of length 0 and capacity 10 that is\n        backed by this underlying array.\n        Map: An empty map is allocated with enough space to hold the\n        specified number of elements. The size may be omitted, in which case\n        a small starting size is allocated.\n        Channel: The channel\u0026#39;s buffer is initialized with the specified\n        buffer capacity. If zero, or the size is omitted, the channel is\n        unbuffered.",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.make"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/make",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgbWFrZSh0IFR5cGUsIHNpemUgLi4uSW50ZWdlclR5cGUpIFR5cGUKICAgIFRoZSBtYWtlIGJ1aWx0LWluIGZ1bmN0aW9uIGFsbG9jYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gb2JqZWN0IG9mIHR5cGUKICAgIHNsaWNlLCBtYXAsIG9yIGNoYW4gKG9ubHkpLiBMaWtlIG5ldywgdGhlIGZpcnN0IGFyZ3VtZW50IGlzIGEgdHlwZSwKICAgIG5vdCBhIHZhbHVlLiBVbmxpa2UgbmV3LCBtYWtlJ3MgcmV0dXJuIHR5cGUgaXMgdGhlIHNhbWUgYXMgdGhlIHR5cGUgb2YgaXRzCiAgICBhcmd1bWVudCwgbm90IGEgcG9pbnRlciB0byBpdC4gVGhlIHNwZWNpZmljYXRpb24gb2YgdGhlIHJlc3VsdCBkZXBlbmRzIG9uCiAgICB0aGUgdHlwZToKCiAgICAgICAgU2xpY2U6IFRoZSBzaXplIHNwZWNpZmllcyB0aGUgbGVuZ3RoLiBUaGUgY2FwYWNpdHkgb2YgdGhlIHNsaWNlIGlzCiAgICAgICAgZXF1YWwgdG8gaXRzIGxlbmd0aC4gQSBzZWNvbmQgaW50ZWdlciBhcmd1bWVudCBtYXkgYmUgcHJvdmlkZWQgdG8KICAgICAgICBzcGVjaWZ5IGEgZGlmZmVyZW50IGNhcGFjaXR5OyBpdCBtdXN0IGJlIG5vIHNtYWxsZXIgdGhhbiB0aGUKICAgICAgICBsZW5ndGguIEZvciBleGFtcGxlLCBtYWtlKFtdaW50LCAwLCAxMCkgYWxsb2NhdGVzIGFuIHVuZGVybHlpbmcgYXJyYXkKICAgICAgICBvZiBzaXplIDEwIGFuZCByZXR1cm5zIGEgc2xpY2Ugb2YgbGVuZ3RoIDAgYW5kIGNhcGFjaXR5IDEwIHRoYXQgaXMKICAgICAgICBiYWNrZWQgYnkgdGhpcyB1bmRlcmx5aW5nIGFycmF5LgogICAgICAgIE1hcDogQW4gZW1wdHkgbWFwIGlzIGFsbG9jYXRlZCB3aXRoIGVub3VnaCBzcGFjZSB0byBob2xkIHRoZQogICAgICAgIHNwZWNpZmllZCBudW1iZXIgb2YgZWxlbWVudHMuIFRoZSBzaXplIG1heSBiZSBvbWl0dGVkLCBpbiB3aGljaCBjYXNlCiAgICAgICAgYSBzbWFsbCBzdGFydGluZyBzaXplIGlzIGFsbG9jYXRlZC4KICAgICAgICBDaGFubmVsOiBUaGUgY2hhbm5lbCdzIGJ1ZmZlciBpcyBpbml0aWFsaXplZCB3aXRoIHRoZSBzcGVjaWZpZWQKICAgICAgICBidWZmZXIgY2FwYWNpdHkuIElmIHplcm8sIG9yIHRoZSBzaXplIGlzIG9taXR0ZWQsIHRoZSBjaGFubmVsIGlzCiAgICAgICAgdW5idWZmZXJlZC4=",
                                            "duration": 2542208458,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.24:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#make",
                                                "href": "https://pkg.go.dev/builtin#make",
                                                "target": "_blank"
                                              },
                                              "file": "internals",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "internals",
                                                    "nodes": [
                                                      {
                                                        "text": "make",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#make"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 24,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-25"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-25"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.25",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-25"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we are declaring new variables of type ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "[]string",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " in several different ways. Functionally, each of these is equivalent. Each of these different ways to declare a slice has different advantages and disadvantages, and it is not uncommon to see these varies declaration styles in code.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-25",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/make/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// declare and initialize a slice of strings\n\t// with a length of 0 and capacity of 0\n\ta := []string{}\n\n\t// declare a variable of type slice of strings\n\t// with a length of 0 and capacity of 0\n\tvar b []string\n\n\t// declare and initialize a slice of strings\n\t// with a length of 0 and capacity of 0\n\tc := make([]string, 0)\n\n\tfmt.Println(a)\n\tfmt.Println(b)\n\tfmt.Println(c)\n}",
                                                "file": "internals/src/make/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 24,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "internals/src/make"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[]\n[]\n[]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/make",
                                              "stdout": "W10KW10KW10=",
                                              "duration": 950951583,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[]\n[]\n[]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/make",
                                            "stdout": "W10KW10KW10=",
                                            "duration": 950951583,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.25:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Declaring slices in several different ways.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 25,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Make With Length And Capacity",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#make",
                                          "href": "https://pkg.go.dev/builtin#make",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "make",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#make"
                                      }
                                    ],
                                    {
                                      "text": " function allows us to define the starting \"length\" of the slice, and optionally, the starting \"capacity\" of the slice.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-26",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/make-cap/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\ta := make([]string, 1, 3)\n\n\tfmt.Println(a)      // []\n\tfmt.Println(len(a)) // 1\n\tfmt.Println(cap(a)) // 3\n}",
                                                "file": "internals/src/make-cap/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 14,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "internals/src/make-cap"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[]\n1\n3",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/make-cap",
                                              "stdout": "W10KMQoz",
                                              "duration": 2680555416,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[]\n1\n3",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/make-cap",
                                            "stdout": "W10KMQoz",
                                            "duration": 2680555416,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.26:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#make",
                                                "href": "https://pkg.go.dev/builtin#make",
                                                "target": "_blank"
                                              },
                                              "file": "internals",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "internals",
                                                    "nodes": [
                                                      {
                                                        "text": "make",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#make"
                                            }
                                          ],
                                          {
                                            "text": " to define the starting length and capacity of a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 26,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "It's important to remember that even though you \"allocated\" extra capacity, you can't access that capacity until you assign a value to it.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Make And Append",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "Be careful when using both ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#make",
                                          "href": "https://pkg.go.dev/builtin#make",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "make",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#make"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#append",
                                          "href": "https://pkg.go.dev/builtin#append",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "append",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#append"
                                      }
                                    ],
                                    {
                                      "text": ", as you may inadvertently create ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "zero",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " values in your slice.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-27",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/make-append/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\ta := make([]string, 2)\n\ta = append(a, \"foo\", \"bar\")\n\n\tfmt.Printf(\"%q\", a)\n}",
                                                "file": "internals/src/make-append/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 13,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "internals/src/make-append"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[\u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;foo\u0026#34; \u0026#34;bar\u0026#34;]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/make-append",
                                              "stdout": "WyIiICIiICJmb28iICJiYXIiXQ==",
                                              "duration": 2732979500,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[\u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026#34;foo\u0026#34; \u0026#34;bar\u0026#34;]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/make-append",
                                            "stdout": "WyIiICIiICJmb28iICJiYXIiXQ==",
                                            "duration": 2732979500,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.27:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#make",
                                                "href": "https://pkg.go.dev/builtin#make",
                                                "target": "_blank"
                                              },
                                              "file": "internals",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "internals",
                                                    "nodes": [
                                                      {
                                                        "text": "make",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#make"
                                            }
                                          ],
                                          {
                                            "text": " and ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#append",
                                                "href": "https://pkg.go.dev/builtin#append",
                                                "target": "_blank"
                                              },
                                              "file": "internals",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "internals",
                                                    "nodes": [
                                                      {
                                                        "text": "append",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#append"
                                            }
                                          ],
                                          {
                                            "text": " can be problematic.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 27,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "What Happens When A Slice Grows",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "Slices, as we have seen, are comprised of three parts, length, capacity, and pointer to an underlying array. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-28"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-28"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.28",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-28"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we see a theoretical representation of the internals of the slice, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "[]string{\"A\", \"B\", \"C\", \"D\"}",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-28",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-text",
                                              "language": "text"
                                            },
                                            "file": "internals",
                                            "lang": "text",
                                            "nodes": [
                                              {
                                                "text": "┌────────────────────────────────────────────────┐\n│                      Slice                     │\n├────────────────────────────────────────────────┤\n│ Len -\u003e 4                                       │\n│                                                │\n│ Cap -\u003e 4                                       │\n│                          ┌─────────────────┐   │\n│ Arr -\u003e Array Pointer -\u003e  │Underlying Array │   │\n│                          │                 │   │\n│                          │┌─┬─┬─┬─┐        │   │\n│                          ││A│B│C│D│        │   │\n│                          │└─┴─┴─┴─┘        │   │\n│                          └─────────────────┘   │\n└────────────────────────────────────────────────┘\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.FencedCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.28:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Theoretical representation of a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 28,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "If we append the values ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "E",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "F",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "G",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", it will force the slice to expand, as it currently has no capacity for the new values. Go will create a new underlying array, copy the original values into the new one, and add the new values as seen in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-29"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-29"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.29",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-29"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-29",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-text",
                                              "language": "text"
                                            },
                                            "file": "internals",
                                            "lang": "text",
                                            "nodes": [
                                              {
                                                "text": "┌────────────────────────────────────────────────┐\n│          append(slice, \"E\", \"F\", \"G\")          │\n├────────────────────────────────────────────────┤\n│                                                │\n│ ┌─────────────────┐        ┌─────────────────┐ │\n│ │Original Array   │        │New Array        │ │\n│ │                 │        │                 │ │\n│ │┌─┬─┬─┬─┐        │───────\u003e│┌─┬─┬─┬─┬─┬─┬─┬─┐│ │\n│ ││A│B│C│D│        │        ││A│B│C│D│E│F│G│ ││ │\n│ │└─┴─┴─┴─┘        │        │└─┴─┴─┴─┴─┴─┴─┴─┘│ │\n│ └─────────────────┘        └─────────────────┘ │\n│                                                │\n└────────────────────────────────────────────────┘\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.FencedCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.29:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "When full a new array is created and values are copied over.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 29,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-30"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-30"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.30",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-30"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we see the final representation of the slice after the new values have been appended.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-30",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-text",
                                              "language": "text"
                                            },
                                            "file": "internals",
                                            "lang": "text",
                                            "nodes": [
                                              {
                                                "text": "┌────────────────────────────────────────────────┐\n│                      Slice                     │\n├────────────────────────────────────────────────┤\n│ Len -\u003e 7                                       │\n│                                                │\n│ Cap -\u003e 8                                       │\n│                          ┌─────────────────┐   │\n│ Arr -\u003e Array Pointer -\u003e  │Underlying Array │   │\n│                          │                 │   │\n│                          │┌─┬─┬─┬─┬─┬─┬─┬─┐│   │\n│                          ││A│B│C│D│E│F│G│ ││   │\n│                          │└─┴─┴─┴─┴─┴─┴─┴─┘│   │\n│                          └─────────────────┘   │\n└────────────────────────────────────────────────┘\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.FencedCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.30:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The final slice representation after appending.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 30,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "If the original underlying array is not reference by any other part of the program, it will be marked for garbage collection.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Slice Subsets",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "Subsets of a slice (or a slice of a slice) allow us to work with just section of a slice. To obtain a subset of a slice, we need to specify the starting index and ending index of the subset. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-31"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-31"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.31",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-31"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " when we ask for ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "letters[2:5]",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", we get a slice of the original slice, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "letters",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", containing elements from index ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "2",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " up to, but not including, index ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "5",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". In this case, the slice returned is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "{\"c\", \"d\", \"e\"}",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-31",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/subset/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tletters := []string{\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"}\n\n\tfmt.Println(letters) // [a b c d e f g]\n\n\t// Get 3 elements starting with the third element\n\tfmt.Println(letters[2:5]) // [c d e]\n\n\t// functionally equivalent\n\tfmt.Println(letters[4:len(letters)]) // [e f g]\n\tfmt.Println(letters[4:])             // [e f g]\n\n\t// functionally equivalent\n\tfmt.Println(letters[0:4]) // [a b c d]\n\tfmt.Println(letters[:4])  // [a b c d]\n}",
                                                "file": "internals/src/subset/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 7,
                                                "end": 25,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "internals/src/subset"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[a b c d e f g]\n[c d e]\n[e f g]\n[e f g]\n[a b c d]\n[a b c d]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/subset",
                                              "stdout": "W2EgYiBjIGQgZSBmIGddCltjIGQgZV0KW2UgZiBnXQpbZSBmIGddClthIGIgYyBkXQpbYSBiIGMgZF0=",
                                              "duration": 3269876791,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[a b c d e f g]\n[c d e]\n[e f g]\n[e f g]\n[a b c d]\n[a b c d]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/subset",
                                            "stdout": "W2EgYiBjIGQgZSBmIGddCltjIGQgZV0KW2UgZiBnXQpbZSBmIGddClthIGIgYyBkXQpbYSBiIGMgZF0=",
                                            "duration": 3269876791,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.31:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Obtaining subsets of a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 31,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "When asking for a subset of a slice that starts at index ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "0",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", or that ends at the last index, we can omit the starting or ending index. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-31"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-31"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.31",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-31"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we ask for ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "letters[:4]",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", which returns a slice of the original slice, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "letters",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", containing elements from index ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "0",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " up to, but not including, index ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "4",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ". In this case, the slice returned is ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "{\"a\", \"b\", \"c\", \"d\"}",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Mutating Slice Subsets",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "It is important to remember that when using a subset of a slice, you are just working with a reference to the original slice. Modifications to the subset will affect the original slice.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-32",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/subset-mutation/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := []string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\t// print the names slice\n\tfmt.Println(names)\n\n\t// get the first three elements of the `names` slice\n\tsubset := names[:3]\n\n\t// print out the subset slice\n\tfmt.Println(subset)\n\n\t// loop over the subset slice\n\tfor i, g := range subset {\n\t\t// uppercase each string\n\t\t// and replace the value in\n\t\t// the subset slice\n\t\tsubset[i] = strings.ToUpper(g)\n\t}\n\n\t// print out the subset slice, again\n\tfmt.Println(subset)\n\n\t// print out the original names slice\n\tfmt.Println(names)\n}",
                                                "file": "internals/src/subset-mutation/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 8,
                                                "end": 36,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "internals/src/subset-mutation"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[Kurt Janis Jimi Amy]\n[Kurt Janis Jimi]\n[KURT JANIS JIMI]\n[KURT JANIS JIMI Amy]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/subset-mutation",
                                              "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXldCltLdXJ0IEphbmlzIEppbWldCltLVVJUIEpBTklTIEpJTUldCltLVVJUIEpBTklTIEpJTUkgQW15XQ==",
                                              "duration": 2405555792,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[Kurt Janis Jimi Amy]\n[Kurt Janis Jimi]\n[KURT JANIS JIMI]\n[KURT JANIS JIMI Amy]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/subset-mutation",
                                            "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXldCltLdXJ0IEphbmlzIEppbWldCltLVVJUIEpBTklTIEpJTUldCltLVVJUIEpBTklTIEpJTUkgQW15XQ==",
                                            "duration": 2405555792,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    null,
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.32:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Mutating subsets of a slice affects the original.",
                                            "type": "hype.Text"
                                          },
                                          null,
                                          {
                                            "text": "\n\n",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 32,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-32"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-32"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.32",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-32"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we see that if we modify the subset, but upper-casing its values, the original slice will also contain uppercase values.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Copying Slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "When a separate, independent copy of a slice is needed, the built-in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#copy",
                                          "href": "https://pkg.go.dev/builtin#copy",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "copy",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#copy"
                                      }
                                    ],
                                    {
                                      "text": " function can be used.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-33",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "doc",
                                          "builtin.copy"
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "doc": "builtin.copy",
                                          "exec": "go doc builtin.copy"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go doc builtin.copy\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc copy(dst, src []Type) int\n    The copy built-in function copies elements from a source slice into a\n    destination slice. (As a special case, it also will copy bytes from a string\n    to a slice of bytes.) The source and destination may overlap. Copy returns\n    the number of elements copied, which will be the minimum of len(src) and\n    len(dst).",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "doc",
                                                "builtin.copy"
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                              "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgY29weShkc3QsIHNyYyBbXVR5cGUpIGludAogICAgVGhlIGNvcHkgYnVpbHQtaW4gZnVuY3Rpb24gY29waWVzIGVsZW1lbnRzIGZyb20gYSBzb3VyY2Ugc2xpY2UgaW50byBhCiAgICBkZXN0aW5hdGlvbiBzbGljZS4gKEFzIGEgc3BlY2lhbCBjYXNlLCBpdCBhbHNvIHdpbGwgY29weSBieXRlcyBmcm9tIGEgc3RyaW5nCiAgICB0byBhIHNsaWNlIG9mIGJ5dGVzLikgVGhlIHNvdXJjZSBhbmQgZGVzdGluYXRpb24gbWF5IG92ZXJsYXAuIENvcHkgcmV0dXJucwogICAgdGhlIG51bWJlciBvZiBlbGVtZW50cyBjb3BpZWQsIHdoaWNoIHdpbGwgYmUgdGhlIG1pbmltdW0gb2YgbGVuKHNyYykgYW5kCiAgICBsZW4oZHN0KS4=",
                                              "duration": 2080774375,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go doc builtin.copy\n\npackage builtin // import \u0026#34;builtin\u0026#34;\n\nfunc copy(dst, src []Type) int\n    The copy built-in function copies elements from a source slice into a\n    destination slice. (As a special case, it also will copy bytes from a string\n    to a slice of bytes.) The source and destination may overlap. Copy returns\n    the number of elements copied, which will be the minimum of len(src) and\n    len(dst).",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "doc",
                                              "builtin.copy"
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/hypeviewer",
                                            "stdout": "cGFja2FnZSBidWlsdGluIC8vIGltcG9ydCAiYnVpbHRpbiIKCmZ1bmMgY29weShkc3QsIHNyYyBbXVR5cGUpIGludAogICAgVGhlIGNvcHkgYnVpbHQtaW4gZnVuY3Rpb24gY29waWVzIGVsZW1lbnRzIGZyb20gYSBzb3VyY2Ugc2xpY2UgaW50byBhCiAgICBkZXN0aW5hdGlvbiBzbGljZS4gKEFzIGEgc3BlY2lhbCBjYXNlLCBpdCBhbHNvIHdpbGwgY29weSBieXRlcyBmcm9tIGEgc3RyaW5nCiAgICB0byBhIHNsaWNlIG9mIGJ5dGVzLikgVGhlIHNvdXJjZSBhbmQgZGVzdGluYXRpb24gbWF5IG92ZXJsYXAuIENvcHkgcmV0dXJucwogICAgdGhlIG51bWJlciBvZiBlbGVtZW50cyBjb3BpZWQsIHdoaWNoIHdpbGwgYmUgdGhlIG1pbmltdW0gb2YgbGVuKHNyYykgYW5kCiAgICBsZW4oZHN0KS4=",
                                            "duration": 2080774375,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.33:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "The built-in ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "a",
                                              "attributes": {
                                                "for": "builtin#copy",
                                                "href": "https://pkg.go.dev/builtin#copy",
                                                "target": "_blank"
                                              },
                                              "file": "internals",
                                              "nodes": [
                                                [
                                                  {
                                                    "atom": "code",
                                                    "file": "internals",
                                                    "nodes": [
                                                      {
                                                        "text": "copy",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.InlineCode"
                                                  }
                                                ]
                                              ],
                                              "type": "*hype.Link",
                                              "url": "https://pkg.go.dev/builtin#copy"
                                            }
                                          ],
                                          {
                                            "text": " function.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 33,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-34"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-34"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.34",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-34"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " we are using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#copy",
                                          "href": "https://pkg.go.dev/builtin#copy",
                                          "target": "_blank"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "internals.md",
                                            "nodes": [
                                              {
                                                "text": "copy",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#copy"
                                      }
                                    ],
                                    {
                                      "text": " function instead of getting a subset of a slice. We are able to create a new slice that is independent of the original. The new slice can now be modified independently of the original.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-34",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/copy/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := []string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\t// print the names slice\n\tfmt.Println(names)\n\n\t// make a new slice with\n\t// the correct length and\n\t// capacity to hold the subset\n\tsubset := make([]string, 3)\n\n\t// copy the first three elements\n\t// of the names slice into the\n\t// subset slice\n\tcopy(subset, names[:3])\n\n\t// print out the subset slice\n\tfmt.Println(subset)\n\n\t// loop over the subset slice\n\tfor i, g := range subset {\n\t\t// uppercase each string\n\t\t// and replace the value in\n\t\t// the subset slice\n\t\tsubset[i] = strings.ToUpper(g)\n\t}\n\n\t// print out the subset slice, again\n\tfmt.Println(subset)\n\n\t// print out the original names slice\n\tfmt.Println(names)\n}",
                                                "file": "internals/src/copy/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 8,
                                                "end": 43,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "internals/src/copy"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n[Kurt Janis Jimi Amy]\n[Kurt Janis Jimi]\n[KURT JANIS JIMI]\n[Kurt Janis Jimi Amy]",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/copy",
                                              "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXldCltLdXJ0IEphbmlzIEppbWldCltLVVJUIEpBTklTIEpJTUldCltLdXJ0IEphbmlzIEppbWkgQW15XQ==",
                                              "duration": 2346031542,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n[Kurt Janis Jimi Amy]\n[Kurt Janis Jimi]\n[KURT JANIS JIMI]\n[Kurt Janis Jimi Amy]",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/copy",
                                            "stdout": "W0t1cnQgSmFuaXMgSmltaSBBbXldCltLdXJ0IEphbmlzIEppbWldCltLVVJUIEpBTklTIEpJTUldCltLdXJ0IEphbmlzIEppbWkgQW15XQ==",
                                            "duration": 2346031542,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.34:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Copying a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 34,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "internals.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Converting an Array to a Slice",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "When writing functions, or using most Go libraries, you will usually be working with slices. Because slices are more flexible than arrays, it is often easier to work with slices.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "Consider the function defined in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-35"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-35"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.35",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-35"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ". This function takes a slice of strings and prints out the values in the slice.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-35",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "func",
                                              "src": "internals/src/convert/bad/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func slicesOnly(names []string) {\n\tfor _, name := range names {\n\t\tfmt.Println(name)\n\t}\n}",
                                                "file": "internals/src/convert/bad/main.go",
                                                "lang": "go",
                                                "name": "func",
                                                "start": 16,
                                                "end": 23,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.35:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A function that accepts a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 35,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "If we were to try and call the function with an array, we would get a compilation error as seen in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-36"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-36"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.36",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-36"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-36",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/convert/bad/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// array of four strings\n\tnames := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\t// arrays can not be type cast to slices\n\tslicesOnly(names)\n}",
                                                "file": "internals/src/convert/bad/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 14,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "internals/src/convert/bad"
                                        },
                                        "expected_exit": -1,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n# demo\n./main.go:11:13: cannot use names (variable of type [4]string) as []string value in argument to slicesOnly",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/convert/bad",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "IyBkZW1vCi4vbWFpbi5nbzoxMToxMzogY2Fubm90IHVzZSBuYW1lcyAodmFyaWFibGUgb2YgdHlwZSBbNF1zdHJpbmcpIGFzIFtdc3RyaW5nIHZhbHVlIGluIGFyZ3VtZW50IHRvIHNsaWNlc09ubHk=",
                                              "duration": 1884794041,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n# demo\n./main.go:11:13: cannot use names (variable of type [4]string) as []string value in argument to slicesOnly",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/convert/bad",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "IyBkZW1vCi4vbWFpbi5nbzoxMToxMzogY2Fubm90IHVzZSBuYW1lcyAodmFyaWFibGUgb2YgdHlwZSBbNF1zdHJpbmcpIGFzIFtdc3RyaW5nIHZhbHVlIGluIGFyZ3VtZW50IHRvIHNsaWNlc09ubHk=",
                                            "duration": 1884794041,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.36:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Compilation error using an array instead of a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 36,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "We have seen that Go can cast types like ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "int64",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " to ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "int",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", but it is not possible to cast an array to a slice. If we were to try and cast an array to a slice, we would get a compilation error.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-37",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/convert/cast/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// array of four strings\n\tnames := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\t// try to cast array to slice\n\tslicesOnly([]string(names))\n}",
                                                "file": "internals/src/convert/cast/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 14,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "exit": "-1",
                                          "run": ".",
                                          "src": "internals/src/convert/cast"
                                        },
                                        "expected_exit": -1,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n# demo\n./main.go:11:22: cannot convert names (variable of type [4]string) to type []string",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/convert/cast",
                                              "err": {
                                                "Stderr": null
                                              },
                                              "exit": 1,
                                              "stderr": "IyBkZW1vCi4vbWFpbi5nbzoxMToyMjogY2Fubm90IGNvbnZlcnQgbmFtZXMgKHZhcmlhYmxlIG9mIHR5cGUgWzRdc3RyaW5nKSB0byB0eXBlIFtdc3RyaW5n",
                                              "duration": 2172791208,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n# demo\n./main.go:11:22: cannot convert names (variable of type [4]string) to type []string",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/convert/cast",
                                            "err": {
                                              "Stderr": null
                                            },
                                            "exit": 1,
                                            "stderr": "IyBkZW1vCi4vbWFpbi5nbzoxMToyMjogY2Fubm90IGNvbnZlcnQgbmFtZXMgKHZhcmlhYmxlIG9mIHR5cGUgWzRdc3RyaW5nKSB0byB0eXBlIFtdc3RyaW5n",
                                            "duration": 2172791208,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.37:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "An array can not be cast to a slice.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 37,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "We can convert our array to a slice by asking for a subset of the array. Like slices, subsets of arrays can be created with the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "[low:high]",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " syntax. For example, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "names[0:2]",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " would create a slice of the first two elements of the array.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-38"
                                        },
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-38"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.38",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-38"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ", we use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "internals.md",
                                        "nodes": [
                                          {
                                            "text": "[:]",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " syntax. This will return a slice of the entire array. With this new slice, we can now properly call our function.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-38",
                                    "type": "listing"
                                  },
                                  "file": "internals.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "internals",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "example",
                                              "src": "internals/src/convert/fixed/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\t// array of four strings\n\tnames := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\t// convert to slice of strings\n\t// using the `array[:]` syntax\n\tslicesOnly(names[:])\n}",
                                                "file": "internals/src/convert/fixed/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 15,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "internals/src/convert/fixed"
                                        },
                                        "expected_exit": 0,
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\nKurt\nJanis\nJimi\nAmy",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/convert/fixed",
                                              "stdout": "S3VydApKYW5pcwpKaW1pCkFteQ==",
                                              "duration": 2418446458,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\nKurt\nJanis\nJimi\nAmy",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/internals/src/convert/fixed",
                                            "stdout": "S3VydApKYW5pcwpKaW1pCkFteQ==",
                                            "duration": 2418446458,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "internals",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.38:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using a slice of the entire array.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 38,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "How Slices Work",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "include",
                      "attributes": {
                        "src": "iteration/iteration.md"
                      },
                      "dir": "iteration",
                      "file": "module.md",
                      "nodes": [
                        [
                          {
                            "atom": "page",
                            "file": "iteration.md",
                            "nodes": [
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h1",
                                  "file": "iteration.md",
                                  "level": 1,
                                  "nodes": [
                                    {
                                      "text": "Iteration",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "iteration.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "The \"for\" Loop",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "In Go there is only ",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "strong",
                                      "file": "iteration.md",
                                      "nodes": [
                                        {
                                          "text": "one",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": " looping construct; the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " loop. The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " loop is very versatile and can be used to implement patterns such as: ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "while",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "do while",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "do until",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-39",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go"
                                            },
                                            "file": "iteration",
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "text": "for i := 0; i \u0026lt; N; i++ {\n  // do work until i equals N\n}\n",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.FencedCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.39:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "for",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " loop in Go.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 39,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "iteration.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Iterating Over Arrays and Slices",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "Iterating over arrays, slices, and maps are done using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " loop. In ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-40"
                                        },
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-40"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.40",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-40"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": " the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "a",
                                        "attributes": {
                                          "for": "builtin#len",
                                          "href": "https://pkg.go.dev/builtin#len",
                                          "target": "_blank"
                                        },
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "atom": "code",
                                            "file": "iteration.md",
                                            "nodes": [
                                              {
                                                "text": "len",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.InlineCode"
                                          }
                                        ],
                                        "type": "*hype.Link",
                                        "url": "https://pkg.go.dev/builtin#len"
                                      }
                                    ],
                                    {
                                      "text": " function is used to return the length of the array, ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "4",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ", so the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " loop will stop when ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "i",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " reaches ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "4",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-40",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "iteration/src/array-iteration/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\t// iterate over the array using a for loop\n\tfor i := 0; i \u003c len(names); i++ {\n\t\tfmt.Println(names[i])\n\t}\n}",
                                                "file": "iteration/src/array-iteration/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 15,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "iteration",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "iteration/src/array-iteration"
                                        },
                                        "expected_exit": 0,
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\nKurt\nJanis\nJimi\nAmy",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/iteration/src/array-iteration",
                                              "stdout": "S3VydApKYW5pcwpKaW1pCkFteQ==",
                                              "duration": 2382195625,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\nKurt\nJanis\nJimi\nAmy",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/iteration/src/array-iteration",
                                            "stdout": "S3VydApKYW5pcwpKaW1pCkFteQ==",
                                            "duration": 2382195625,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.40:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Iterating over an array.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 40,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "iteration.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "The \"range\" Keyword",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "Previously we used a \"classic\" ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " loop for iteration. Looping over collection types is common in Go that the language offers the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "range",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keyword to simplify this code.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-41",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "iteration/src/array-range/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "names := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\nfor i, n := range names {\n\tfmt.Printf(\"%d %s\\n\", i, n)\n}",
                                                "file": "iteration/src/array-range/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 6,
                                                "end": 12,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "iteration",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "iteration/src/array-range"
                                        },
                                        "expected_exit": 0,
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n0 Kurt\n1 Janis\n2 Jimi\n3 Amy",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/iteration/src/array-range",
                                              "stdout": "MCBLdXJ0CjEgSmFuaXMKMiBKaW1pCjMgQW15",
                                              "duration": 4317042417,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n0 Kurt\n1 Janis\n2 Jimi\n3 Amy",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/iteration/src/array-range",
                                            "stdout": "MCBLdXJ0CjEgSmFuaXMKMiBKaW1pCjMgQW15",
                                            "duration": 4317042417,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.41:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "range",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " keyword to iterate over an array.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 41,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "Range returns the index and the value of each item in the array or slice. If only the index of the loop is needed, and not the value, using only a single variable in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " loop with ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "range",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " will return the index of each loop.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-42",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "iteration/src/array-range-index/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\tnames := [4]string{\"Kurt\", \"Janis\", \"Jimi\", \"Amy\"}\n\n\tfor i := range names {\n\t\tfmt.Printf(\"%d %s\\n\", i, names[i])\n\t}\n}",
                                                "file": "iteration/src/array-range-index/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 14,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "iteration",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "iteration/src/array-range-index"
                                        },
                                        "expected_exit": 0,
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n0 Kurt\n1 Janis\n2 Jimi\n3 Amy",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/iteration/src/array-range-index",
                                              "stdout": "MCBLdXJ0CjEgSmFuaXMKMiBKaW1pCjMgQW15",
                                              "duration": 676792334,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n0 Kurt\n1 Janis\n2 Jimi\n3 Amy",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/iteration/src/array-range-index",
                                            "stdout": "MCBLdXJ0CjEgSmFuaXMKMiBKaW1pCjMgQW15",
                                            "duration": 676792334,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.42:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "range",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " keyword to iterate over an array, only returning the index.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 42,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "A lot of languages expose an interface, or similar mechanism, that can be implemented to allow for custom iterable types. Go does not provide any such interface. Only the built-in collection types, and a few other built-in types to be discussed later, are supported with the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "range",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keyword.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "iteration.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Controlling Loops",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "The ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "continue",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keyword allows us to go back to the start of the loop and stop executing the rest of the code in the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " block.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-43",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "continue",
                                              "src": "iteration/src/control/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "if i == 3 {\n\t// go to the start of the loop\n\tcontinue\n}",
                                                "file": "iteration/src/control/main.go",
                                                "lang": "go",
                                                "name": "continue",
                                                "start": 16,
                                                "end": 21,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.43:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "continue",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " keyword.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 43,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "This does not stop the loop from executing, but rather ends that particular run of the loop.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "To stop execution of a loop we can use the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "break",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keyword.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-44",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "break",
                                              "src": "iteration/src/control/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "if i == 10 {\n\t// stops the loop\n\tbreak\n}",
                                                "file": "iteration/src/control/main.go",
                                                "lang": "go",
                                                "name": "break",
                                                "start": 23,
                                                "end": 28,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.44:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "break",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " keyword.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 44,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "Using the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "continue",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " and ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "break",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keywords we can control a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "for",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " loops execution to deliver the results we want.",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-45",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "src": "iteration/src/control/main.go#example"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "func main() {\n\n\t// create a variable to act as an index\n\tvar i int\n\n\t// create an infinite loop\n\tfor {\n\t\t// increment the index\n\t\ti++\n\n\t\tif i == 3 {\n\t\t\t// go to the start of the loop\n\t\t\tcontinue\n\t\t}\n\n\t\tif i == 10 {\n\t\t\t// stops the loop\n\t\t\tbreak\n\t\t}\n\n\t\tfmt.Println(i)\n\n\t}\n\n\tfmt.Println(\"finished\")\n}",
                                                "file": "iteration/src/control/main.go",
                                                "lang": "go",
                                                "name": "example",
                                                "start": 5,
                                                "end": 37,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "atom": "hr",
                                      "file": "iteration",
                                      "type": "*hype.Element"
                                    },
                                    [
                                      {
                                        "args": [
                                          "go",
                                          "run",
                                          "."
                                        ],
                                        "atom": "cmd",
                                        "attributes": {
                                          "data-go-version": "go1.21.5",
                                          "exec": "go run .",
                                          "run": ".",
                                          "src": "iteration/src/control"
                                        },
                                        "expected_exit": 0,
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "result",
                                            "nodes": [
                                              {
                                                "atom": "pre",
                                                "nodes": [
                                                  {
                                                    "atom": "code",
                                                    "attributes": {
                                                      "class": "language-shell",
                                                      "language": "shell"
                                                    },
                                                    "lang": "shell",
                                                    "nodes": [
                                                      {
                                                        "text": "$ go run .\n\n1\n2\n4\n5\n6\n7\n8\n9\nfinished",
                                                        "type": "hype.Text"
                                                      },
                                                      {
                                                        "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                        "type": "hype.Text"
                                                      }
                                                    ],
                                                    "type": "*hype.FencedCode"
                                                  }
                                                ],
                                                "type": "*hype.Element"
                                              }
                                            ],
                                            "result": {
                                              "args": [
                                                "go",
                                                "run",
                                                "."
                                              ],
                                              "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/iteration/src/control",
                                              "stdout": "MQoyCjQKNQo2CjcKOAo5CmZpbmlzaGVk",
                                              "duration": 2378566750,
                                              "type": "*clam.Result"
                                            },
                                            "type": "*hype.CmdResult"
                                          }
                                        ],
                                        "result": {
                                          "atom": "result",
                                          "nodes": [
                                            {
                                              "atom": "pre",
                                              "nodes": [
                                                {
                                                  "atom": "code",
                                                  "attributes": {
                                                    "class": "language-shell",
                                                    "language": "shell"
                                                  },
                                                  "lang": "shell",
                                                  "nodes": [
                                                    {
                                                      "text": "$ go run .\n\n1\n2\n4\n5\n6\n7\n8\n9\nfinished",
                                                      "type": "hype.Text"
                                                    },
                                                    {
                                                      "text": "\n\n--------------------------------------------------------------------------------\nGo Version: go1.21.5\n",
                                                      "type": "hype.Text"
                                                    }
                                                  ],
                                                  "type": "*hype.FencedCode"
                                                }
                                              ],
                                              "type": "*hype.Element"
                                            }
                                          ],
                                          "result": {
                                            "args": [
                                              "go",
                                              "run",
                                              "."
                                            ],
                                            "dir": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections/iteration/src/control",
                                            "stdout": "MQoyCjQKNQo2CjcKOAo5CmZpbmlzaGVk",
                                            "duration": 2378566750,
                                            "type": "*clam.Result"
                                          },
                                          "type": "*hype.CmdResult"
                                        },
                                        "timeout": "30s",
                                        "type": "*hype.Cmd"
                                      }
                                    ],
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.45:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "Using the ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "continue",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " and ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "break",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " keywords.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 45,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "h2",
                                  "file": "iteration.md",
                                  "level": 2,
                                  "nodes": [
                                    {
                                      "text": "Do While Loop",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "hype.Heading"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "A ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "do while",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " loop is used in a situation where you want the loop to run at least ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "1",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " iteration, regardless of the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "condition",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "A C/Java-style example would look something like ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-46"
                                        },
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-46"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.46",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-46"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-46",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-java",
                                              "language": "java",
                                              "src": "iteration/src/do-while/main.java#loop"
                                            },
                                            "lang": "java",
                                            "nodes": [
                                              {
                                                "content": "do {\n\n  // increment the index\n  i++;\n\n  // do the task\n  task();\n\n  // while the index is\n  // less than N, continue\n} while (i \u003c N);",
                                                "file": "iteration/src/do-while/main.java",
                                                "lang": "java",
                                                "name": "loop",
                                                "start": 8,
                                                "end": 20,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.46:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A C/Java-style ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "do while",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " loop.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 46,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "p",
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "To create a ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "do while",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " style loop in Go a combination of an infinite loop and the ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "code",
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "text": "break",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.InlineCode"
                                      }
                                    ],
                                    {
                                      "text": " keyword can be used as in ",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "ref",
                                        "attributes": {
                                          "id": "listing-1-47"
                                        },
                                        "file": "iteration.md",
                                        "nodes": [
                                          {
                                            "atom": "a",
                                            "attributes": {
                                              "href": "#listing-1-47"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.47",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Link",
                                            "url": "#listing-1-47"
                                          }
                                        ],
                                        "type": "*hype.Ref"
                                      }
                                    ],
                                    {
                                      "text": ".",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.Paragraph"
                                }
                              ],
                              {
                                "text": "\n\n",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "figure",
                                  "attributes": {
                                    "id": "listing-1-47",
                                    "type": "listing"
                                  },
                                  "file": "iteration.md",
                                  "nodes": [
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    },
                                    {
                                      "atom": "pre",
                                      "file": "iteration",
                                      "nodes": [
                                        [
                                          {
                                            "atom": "code",
                                            "attributes": {
                                              "class": "language-go",
                                              "language": "go",
                                              "snippet": "do",
                                              "src": "iteration/src/do-while/main.go"
                                            },
                                            "lang": "go",
                                            "nodes": [
                                              {
                                                "content": "// declare an index variable (0)\nvar i int\n\n// use an infinite loop\n// this ensures the first\n// iteration is always executed\nfor {\n\t// increment the index\n\ti++\n\n\t// do the task\n\ttask()\n\n\t// while the index is\n\t// less than N, continue\n\tif i \u003c N {\n\n\t\t// index is N or greater\n\t\t// break the loop\n\t\tbreak\n\t}\n\n}",
                                                "file": "iteration/src/do-while/main.go",
                                                "lang": "go",
                                                "name": "do",
                                                "start": 7,
                                                "end": 32,
                                                "type": "hype.Snippet"
                                              }
                                            ],
                                            "type": "*hype.SourceCode"
                                          }
                                        ]
                                      ],
                                      "type": "*hype.Element"
                                    },
                                    {
                                      "text": "\n\n",
                                      "type": "hype.Text"
                                    },
                                    [
                                      {
                                        "atom": "figcaption",
                                        "file": "iteration",
                                        "nodes": [
                                          {
                                            "atom": "em",
                                            "attributes": {
                                              "class": "figure-name"
                                            },
                                            "nodes": [
                                              {
                                                "text": "Listing 1.47:",
                                                "type": "hype.Text"
                                              }
                                            ],
                                            "type": "*hype.Element"
                                          },
                                          {
                                            "text": " ",
                                            "type": "hype.Text"
                                          },
                                          {
                                            "text": "A ",
                                            "type": "hype.Text"
                                          },
                                          [
                                            {
                                              "atom": "code",
                                              "file": "iteration",
                                              "nodes": [
                                                {
                                                  "text": "do while",
                                                  "type": "hype.Text"
                                                }
                                              ],
                                              "type": "*hype.InlineCode"
                                            }
                                          ],
                                          {
                                            "text": " loop in Go.",
                                            "type": "hype.Text"
                                          }
                                        ],
                                        "type": "*hype.Figcaption"
                                      }
                                    ],
                                    {
                                      "text": "\n",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "pos": 47,
                                  "section_id": 1,
                                  "style": "listing",
                                  "type": "*hype.Figure"
                                }
                              ],
                              {
                                "text": "\n",
                                "type": "hype.Text"
                              }
                            ],
                            "title": "Iteration",
                            "type": "*hype.Page"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "type": "*hype.Include"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  },
                  [
                    {
                      "atom": "page",
                      "file": "module.md",
                      "nodes": [
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "h1",
                            "file": "module.md",
                            "level": 1,
                            "nodes": [
                              {
                                "text": "Summary",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "hype.Heading"
                          }
                        ],
                        {
                          "text": "\n\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "p",
                            "file": "module.md",
                            "nodes": [
                              {
                                "text": "In this ",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "binding",
                                "attributes": {
                                  "part": ""
                                },
                                "file": "module.md",
                                "type": "*hype.Element"
                              },
                              {
                                "text": " we examined the differences between arrays and slices, the two basic list types in Go. We saw that slices are more flexible than arrays. Arrays are fixed length, and slices are dynamic. As a result, slices are more often used than arrays in Go.",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Paragraph"
                          }
                        ],
                        {
                          "text": "\n\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "p",
                            "file": "module.md",
                            "nodes": [
                              {
                                "text": "We learned how to use built-in functions, such ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "builtin#append",
                                    "href": "https://pkg.go.dev/builtin#append",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "append",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/builtin#append"
                                }
                              ],
                              {
                                "text": ", ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "builtin#len",
                                    "href": "https://pkg.go.dev/builtin#len",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "len",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/builtin#len"
                                }
                              ],
                              {
                                "text": ", and ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "builtin#cap",
                                    "href": "https://pkg.go.dev/builtin#cap",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "cap",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/builtin#cap"
                                }
                              ],
                              {
                                "text": ", to manipulate arrays and slices. We also learned how to use the ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "a",
                                  "attributes": {
                                    "for": "builtin#make",
                                    "href": "https://pkg.go.dev/builtin#make",
                                    "target": "_blank"
                                  },
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "atom": "code",
                                      "file": "module.md",
                                      "nodes": [
                                        {
                                          "text": "make",
                                          "type": "hype.Text"
                                        }
                                      ],
                                      "type": "*hype.InlineCode"
                                    }
                                  ],
                                  "type": "*hype.Link",
                                  "url": "https://pkg.go.dev/builtin#make"
                                }
                              ],
                              {
                                "text": " function to create slices with specific capacities and lengths for efficiency.",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Paragraph"
                          }
                        ],
                        {
                          "text": "\n\n",
                          "type": "hype.Text"
                        },
                        [
                          {
                            "atom": "p",
                            "file": "module.md",
                            "nodes": [
                              {
                                "text": "Finally, in this ",
                                "type": "hype.Text"
                              },
                              {
                                "atom": "binding",
                                "attributes": {
                                  "part": ""
                                },
                                "file": "module.md",
                                "type": "*hype.Element"
                              },
                              {
                                "text": ", we covered iteration in Go using the ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "code",
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "text": "for",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.InlineCode"
                                }
                              ],
                              {
                                "text": " keyword. We learned how to use the ",
                                "type": "hype.Text"
                              },
                              [
                                {
                                  "atom": "code",
                                  "file": "module.md",
                                  "nodes": [
                                    {
                                      "text": "range",
                                      "type": "hype.Text"
                                    }
                                  ],
                                  "type": "*hype.InlineCode"
                                }
                              ],
                              {
                                "text": " keyword to simplify iteration.",
                                "type": "hype.Text"
                              }
                            ],
                            "type": "*hype.Paragraph"
                          }
                        ],
                        {
                          "text": "\n",
                          "type": "hype.Text"
                        }
                      ],
                      "title": "Summary",
                      "type": "*hype.Page"
                    }
                  ],
                  {
                    "text": "\n",
                    "type": "hype.Text"
                  }
                ],
                "type": "*hype.Body"
              }
            ]
          ],
          "type": "*hype.Element"
        }
      ],
      "type": "*hype.Element"
    }
  ],
  "parser": {
    "type": "*hype.Parser",
    "root": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections",
    "section": 1,
    "snippets": {}
  },
  "root": "/Users/markbates/Library/CloudStorage/Dropbox/dev/guides/content/book/chapters/03-collections",
  "section_id": 1,
  "snippets": {},
  "title": "Arrays, Slices, and Iteration",
  "type": "*hype.Document",
  "filename": "module.md"
}